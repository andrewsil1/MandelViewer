

================================================================
== Vivado HLS Report for 'calc'
================================================================
* Date:           Fri Jul  5 12:02:30 2019

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        mandelbrotHLS
* Solution:       AXI
* Product family: artix7
* Target device:  xc7a100t-csg324-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   6.00|     5.250|        0.75|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-------------+-----+-------------+---------+
    |      Latency      |      Interval     | Pipeline|
    | min |     max     | min |     max     |   Type  |
    +-----+-------------+-----+-------------+---------+
    |   47|  14538021173|   47|  14538021173|   none  |
    +-----+-------------+-----+-------------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+---------+-------------+-----------------+-----------+-----------+------------+----------+
        |          |        Latency        |    Iteration    |  Initiation Interval  |    Trip    |          |
        | Loop Name|   min   |     max     |     Latency     |  achieved |   target  |    Count   | Pipelined|
        +----------+---------+-------------+-----------------+-----------+-----------+------------+----------+
        |- y_for   |  4429824|  14538021120| 5768 ~ 10095848 |          -|          -| 768 ~ 1440 |    no    |
        | + x_for  |     5760|     10095840|    45 ~ 42066   |          -|          -|  128 ~ 240 |    no    |
        +----------+---------+-------------+-----------------+-----------+-----------+------------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 83
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 27 
27 --> 28 
28 --> 29 
29 --> 30 
30 --> 31 
31 --> 32 
32 --> 33 
33 --> 34 
34 --> 35 
35 --> 36 
36 --> 37 
37 --> 38 
38 --> 39 
39 --> 40 
40 --> 41 
41 --> 42 
42 --> 43 
43 --> 44 
44 --> 45 
45 --> 46 
46 --> 47 
47 --> 48 54 
48 --> 49 
49 --> 50 
50 --> 51 
51 --> 52 
52 --> 53 
53 --> 54 
54 --> 55 
55 --> 56 
56 --> 57 
57 --> 58 
58 --> 59 
59 --> 60 
60 --> 61 
61 --> 62 54 
62 --> 63 
63 --> 64 
64 --> 65 
65 --> 66 
66 --> 67 
67 --> 68 
68 --> 69 
69 --> 70 
70 --> 71 
71 --> 72 
72 --> 73 
73 --> 74 
74 --> 75 
75 --> 76 
76 --> 77 
77 --> 78 
78 --> 79 
79 --> 80 
80 --> 81 
81 --> 82 
82 --> 83 
83 --> 61 

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.88>
ST_1 : Operation 84 [1/1] (1.00ns)   --->   "%maxIter_read = call i16 @_ssdm_op_Read.s_axilite.i16(i16 %maxIter)"   --->   Operation 84 'read' 'maxIter_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 85 [1/1] (1.00ns)   --->   "%width_V_read = call i12 @_ssdm_op_Read.s_axilite.i12(i12 %width_V)"   --->   Operation 85 'read' 'width_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 86 [1/1] (1.00ns)   --->   "%X1_V_read = call i40 @_ssdm_op_Read.s_axilite.i40(i40 %X1_V)"   --->   Operation 86 'read' 'X1_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 87 [1/1] (1.00ns)   --->   "%Y0_V_read = call i40 @_ssdm_op_Read.s_axilite.i40(i40 %Y0_V)"   --->   Operation 87 'read' 'Y0_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 88 [1/1] (1.00ns)   --->   "%X0_V_read = call i40 @_ssdm_op_Read.s_axilite.i40(i40 %X0_V)"   --->   Operation 88 'read' 'X0_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 89 [1/1] (1.00ns)   --->   "%setup_read = call i1 @_ssdm_op_Read.s_axilite.i1(i1 %setup)"   --->   Operation 89 'read' 'setup_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 90 [1/1] (0.00ns)   --->   "%lhs_V = sext i40 %X1_V_read to i41" [mandelbrotHLS/mandel.cpp:60]   --->   Operation 90 'sext' 'lhs_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 91 [1/1] (0.00ns)   --->   "%rhs_V = sext i40 %X0_V_read to i41" [mandelbrotHLS/mandel.cpp:60]   --->   Operation 91 'sext' 'rhs_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 92 [1/1] (2.88ns)   --->   "%ret_V = sub nsw i41 %lhs_V, %rhs_V" [mandelbrotHLS/mandel.cpp:60]   --->   Operation 92 'sub' 'ret_V' <Predicate = true> <Delay = 2.88> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 2 <SV = 1> <Delay = 4.40>
ST_2 : Operation 93 [1/1] (0.00ns)   --->   "%zext_ln1148 = zext i12 %width_V_read to i41" [mandelbrotHLS/mandel.cpp:60]   --->   Operation 93 'zext' 'zext_ln1148' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 94 [45/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:60]   --->   Operation 94 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 3 <SV = 2> <Delay = 4.40>
ST_3 : Operation 95 [44/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:60]   --->   Operation 95 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 4.40>
ST_4 : Operation 96 [43/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:60]   --->   Operation 96 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 4.40>
ST_5 : Operation 97 [42/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:60]   --->   Operation 97 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 4.40>
ST_6 : Operation 98 [41/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:60]   --->   Operation 98 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 4.40>
ST_7 : Operation 99 [40/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:60]   --->   Operation 99 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 4.40>
ST_8 : Operation 100 [39/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:60]   --->   Operation 100 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 4.40>
ST_9 : Operation 101 [38/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:60]   --->   Operation 101 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 10 <SV = 9> <Delay = 4.40>
ST_10 : Operation 102 [37/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:60]   --->   Operation 102 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 11 <SV = 10> <Delay = 4.40>
ST_11 : Operation 103 [36/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:60]   --->   Operation 103 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 12 <SV = 11> <Delay = 4.40>
ST_12 : Operation 104 [35/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:60]   --->   Operation 104 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 13 <SV = 12> <Delay = 4.40>
ST_13 : Operation 105 [34/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:60]   --->   Operation 105 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 14 <SV = 13> <Delay = 4.40>
ST_14 : Operation 106 [33/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:60]   --->   Operation 106 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 15 <SV = 14> <Delay = 4.40>
ST_15 : Operation 107 [32/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:60]   --->   Operation 107 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 16 <SV = 15> <Delay = 4.40>
ST_16 : Operation 108 [31/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:60]   --->   Operation 108 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 17 <SV = 16> <Delay = 4.40>
ST_17 : Operation 109 [30/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:60]   --->   Operation 109 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 18 <SV = 17> <Delay = 4.40>
ST_18 : Operation 110 [29/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:60]   --->   Operation 110 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 19 <SV = 18> <Delay = 4.40>
ST_19 : Operation 111 [28/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:60]   --->   Operation 111 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 20 <SV = 19> <Delay = 4.40>
ST_20 : Operation 112 [27/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:60]   --->   Operation 112 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 21 <SV = 20> <Delay = 4.40>
ST_21 : Operation 113 [26/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:60]   --->   Operation 113 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 22 <SV = 21> <Delay = 4.40>
ST_22 : Operation 114 [25/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:60]   --->   Operation 114 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 23 <SV = 22> <Delay = 4.40>
ST_23 : Operation 115 [24/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:60]   --->   Operation 115 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 24 <SV = 23> <Delay = 4.40>
ST_24 : Operation 116 [23/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:60]   --->   Operation 116 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 25 <SV = 24> <Delay = 4.40>
ST_25 : Operation 117 [22/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:60]   --->   Operation 117 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 26 <SV = 25> <Delay = 4.40>
ST_26 : Operation 118 [21/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:60]   --->   Operation 118 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 27 <SV = 26> <Delay = 4.40>
ST_27 : Operation 119 [20/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:60]   --->   Operation 119 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 28 <SV = 27> <Delay = 4.40>
ST_28 : Operation 120 [19/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:60]   --->   Operation 120 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 29 <SV = 28> <Delay = 4.40>
ST_29 : Operation 121 [18/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:60]   --->   Operation 121 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 30 <SV = 29> <Delay = 4.40>
ST_30 : Operation 122 [17/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:60]   --->   Operation 122 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 31 <SV = 30> <Delay = 4.40>
ST_31 : Operation 123 [16/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:60]   --->   Operation 123 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 32 <SV = 31> <Delay = 4.40>
ST_32 : Operation 124 [15/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:60]   --->   Operation 124 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 33 <SV = 32> <Delay = 4.40>
ST_33 : Operation 125 [14/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:60]   --->   Operation 125 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 34 <SV = 33> <Delay = 4.40>
ST_34 : Operation 126 [13/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:60]   --->   Operation 126 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 35 <SV = 34> <Delay = 4.40>
ST_35 : Operation 127 [12/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:60]   --->   Operation 127 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 36 <SV = 35> <Delay = 4.40>
ST_36 : Operation 128 [11/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:60]   --->   Operation 128 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 37 <SV = 36> <Delay = 4.40>
ST_37 : Operation 129 [10/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:60]   --->   Operation 129 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 38 <SV = 37> <Delay = 4.40>
ST_38 : Operation 130 [9/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:60]   --->   Operation 130 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 39 <SV = 38> <Delay = 4.40>
ST_39 : Operation 131 [8/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:60]   --->   Operation 131 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 40 <SV = 39> <Delay = 4.40>
ST_40 : Operation 132 [7/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:60]   --->   Operation 132 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 41 <SV = 40> <Delay = 4.40>
ST_41 : Operation 133 [6/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:60]   --->   Operation 133 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 42 <SV = 41> <Delay = 4.40>
ST_42 : Operation 134 [5/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:60]   --->   Operation 134 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 43 <SV = 42> <Delay = 4.40>
ST_43 : Operation 135 [4/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:60]   --->   Operation 135 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 44 <SV = 43> <Delay = 4.40>
ST_44 : Operation 136 [3/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:60]   --->   Operation 136 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 45 <SV = 44> <Delay = 4.40>
ST_45 : Operation 137 [2/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:60]   --->   Operation 137 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 46 <SV = 45> <Delay = 4.40>
ST_46 : Operation 138 [1/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:60]   --->   Operation 138 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 139 [1/1] (0.00ns)   --->   "%p_Result_s = call i1 @_ssdm_op_BitSelect.i1.i41.i32(i41 %r_V, i32 40)" [mandelbrotHLS/mandel.cpp:60]   --->   Operation 139 'bitselect' 'p_Result_s' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 140 [1/1] (0.00ns)   --->   "%delta_V = trunc i41 %r_V to i40" [mandelbrotHLS/mandel.cpp:60]   --->   Operation 140 'trunc' 'delta_V' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 141 [1/1] (0.00ns)   --->   "%p_Result_21 = call i1 @_ssdm_op_BitSelect.i1.i41.i32(i41 %r_V, i32 39)" [mandelbrotHLS/mandel.cpp:60]   --->   Operation 141 'bitselect' 'p_Result_21' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 142 [2/2] (1.00ns)   --->   "call void @_ssdm_op_Write.s_axilite.i12P(i12* %maxWidth_V, i12 1920)" [mandelbrotHLS/mandel.cpp:66]   --->   Operation 142 'write' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_46 : Operation 143 [2/2] (1.00ns)   --->   "call void @_ssdm_op_Write.s_axilite.i16P(i16* %unroll, i16 8)" [mandelbrotHLS/mandel.cpp:67]   --->   Operation 143 'write' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>

State 47 <SV = 46> <Delay = 5.25>
ST_47 : Operation 144 [1/1] (0.00ns)   --->   "%LED_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %LED)"   --->   Operation 144 'read' 'LED_read' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 145 [1/1] (0.00ns)   --->   "%LEDControl_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %LEDControl)"   --->   Operation 145 'read' 'LEDControl_read' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 146 [1/1] (0.00ns)   --->   "%LED3 = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %LED_read, i32 2, i32 31)"   --->   Operation 146 'partselect' 'LED3' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 147 [1/1] (0.00ns)   --->   "%empty = zext i30 %LED3 to i64"   --->   Operation 147 'zext' 'empty' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 148 [1/1] (0.00ns)   --->   "%gmem_addr = getelementptr i32* %gmem, i64 %empty"   --->   Operation 148 'getelementptr' 'gmem_addr' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 149 [1/1] (0.00ns)   --->   "%LEDControl1 = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %LEDControl_read, i32 2, i32 31)"   --->   Operation 149 'partselect' 'LEDControl1' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 150 [1/1] (0.00ns)   --->   "%empty_16 = zext i30 %LEDControl1 to i64"   --->   Operation 150 'zext' 'empty_16' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 151 [1/1] (0.00ns)   --->   "%gmem_addr_1 = getelementptr i32* %gmem, i64 %empty_16"   --->   Operation 151 'getelementptr' 'gmem_addr_1' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 152 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %gmem), !map !187"   --->   Operation 152 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 153 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1 %setup), !map !194"   --->   Operation 153 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 154 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i40 %X0_V), !map !200"   --->   Operation 154 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 155 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i40 %Y0_V), !map !204"   --->   Operation 155 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 156 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i40 %X1_V), !map !208"   --->   Operation 156 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 157 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i12 %width_V), !map !212"   --->   Operation 157 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 158 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i12* %maxWidth_V), !map !216"   --->   Operation 158 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 159 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i16* %unroll), !map !220"   --->   Operation 159 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 160 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i16 %maxIter), !map !224"   --->   Operation 160 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 161 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i16* %buf_r), !map !228"   --->   Operation 161 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 162 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([5 x i8]* @calc_str) nounwind"   --->   Operation 162 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 163 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %gmem, [6 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str2, i32 0, i32 8112, [1 x i8]* @p_str2, [7 x i8]* @p_str4, [1 x i8]* @p_str2, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [mandelbrotHLS/mandel.cpp:58]   --->   Operation 163 'specinterface' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 164 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i16* %buf_r, [6 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str2, i32 0, i32 8112, [1 x i8]* @p_str2, [4 x i8]* @p_str5, [1 x i8]* @p_str2, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [mandelbrotHLS/mandel.cpp:58]   --->   Operation 164 'specinterface' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 165 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i40 %X0_V, [10 x i8]* @p_str6, i32 0, i32 0, [1 x i8]* @p_str2, i32 0, i32 0, [9 x i8]* @p_str7, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [mandelbrotHLS/mandel.cpp:58]   --->   Operation 165 'specinterface' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 166 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i40 %X1_V, [10 x i8]* @p_str6, i32 0, i32 0, [1 x i8]* @p_str2, i32 0, i32 0, [9 x i8]* @p_str7, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [mandelbrotHLS/mandel.cpp:58]   --->   Operation 166 'specinterface' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 167 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i40 %Y0_V, [10 x i8]* @p_str6, i32 0, i32 0, [1 x i8]* @p_str2, i32 0, i32 0, [9 x i8]* @p_str7, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [mandelbrotHLS/mandel.cpp:58]   --->   Operation 167 'specinterface' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 168 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i16 %maxIter, [10 x i8]* @p_str6, i32 0, i32 0, [1 x i8]* @p_str2, i32 0, i32 0, [9 x i8]* @p_str7, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [mandelbrotHLS/mandel.cpp:58]   --->   Operation 168 'specinterface' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 169 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str6, i32 0, i32 0, [1 x i8]* @p_str2, i32 0, i32 0, [9 x i8]* @p_str7, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [mandelbrotHLS/mandel.cpp:58]   --->   Operation 169 'specinterface' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 170 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i1 %setup, [10 x i8]* @p_str6, i32 0, i32 0, [1 x i8]* @p_str2, i32 0, i32 0, [9 x i8]* @p_str7, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [mandelbrotHLS/mandel.cpp:58]   --->   Operation 170 'specinterface' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 171 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i12 %width_V, [10 x i8]* @p_str6, i32 0, i32 0, [1 x i8]* @p_str2, i32 0, i32 0, [9 x i8]* @p_str7, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [mandelbrotHLS/mandel.cpp:58]   --->   Operation 171 'specinterface' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 172 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i12* %maxWidth_V, [10 x i8]* @p_str6, i32 1, i32 1, [1 x i8]* @p_str2, i32 0, i32 0, [9 x i8]* @p_str7, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [mandelbrotHLS/mandel.cpp:58]   --->   Operation 172 'specinterface' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 173 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i16* %unroll, [10 x i8]* @p_str6, i32 1, i32 1, [1 x i8]* @p_str2, i32 0, i32 0, [9 x i8]* @p_str7, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [mandelbrotHLS/mandel.cpp:58]   --->   Operation 173 'specinterface' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 174 [1/1] (0.00ns) (grouped into LUT with out node select_ln388)   --->   "%xor_ln786 = xor i1 %p_Result_21, true" [mandelbrotHLS/mandel.cpp:60]   --->   Operation 174 'xor' 'xor_ln786' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 175 [1/1] (0.00ns) (grouped into LUT with out node select_ln388)   --->   "%underflow = and i1 %p_Result_s, %xor_ln786" [mandelbrotHLS/mandel.cpp:60]   --->   Operation 175 'and' 'underflow' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 176 [1/1] (0.00ns) (grouped into LUT with out node p_Val2_31)   --->   "%xor_ln340_2 = xor i1 %p_Result_s, %p_Result_21" [mandelbrotHLS/mandel.cpp:60]   --->   Operation 176 'xor' 'xor_ln340_2' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 177 [1/1] (0.00ns) (grouped into LUT with out node p_Val2_31)   --->   "%xor_ln340 = xor i1 %p_Result_s, true" [mandelbrotHLS/mandel.cpp:60]   --->   Operation 177 'xor' 'xor_ln340' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 178 [1/1] (0.00ns) (grouped into LUT with out node p_Val2_31)   --->   "%or_ln340 = or i1 %p_Result_21, %xor_ln340" [mandelbrotHLS/mandel.cpp:60]   --->   Operation 178 'or' 'or_ln340' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 179 [1/1] (0.00ns) (grouped into LUT with out node p_Val2_31)   --->   "%select_ln340 = select i1 %xor_ln340_2, i40 549755813887, i40 %delta_V" [mandelbrotHLS/mandel.cpp:60]   --->   Operation 179 'select' 'select_ln340' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.07> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_47 : Operation 180 [1/1] (1.07ns) (out node of the LUT)   --->   "%select_ln388 = select i1 %underflow, i40 -549755813888, i40 %delta_V" [mandelbrotHLS/mandel.cpp:60]   --->   Operation 180 'select' 'select_ln388' <Predicate = true> <Delay = 1.07> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.07> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_47 : Operation 181 [1/1] (1.07ns) (out node of the LUT)   --->   "%p_Val2_31 = select i1 %or_ln340, i40 %select_ln340, i40 %select_ln388" [mandelbrotHLS/mandel.cpp:60]   --->   Operation 181 'select' 'p_Val2_31' <Predicate = true> <Delay = 1.07> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.07> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_47 : Operation 182 [1/2] (1.00ns)   --->   "call void @_ssdm_op_Write.s_axilite.i12P(i12* %maxWidth_V, i12 1920)" [mandelbrotHLS/mandel.cpp:66]   --->   Operation 182 'write' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_47 : Operation 183 [1/2] (1.00ns)   --->   "call void @_ssdm_op_Write.s_axilite.i16P(i16* %unroll, i16 8)" [mandelbrotHLS/mandel.cpp:67]   --->   Operation 183 'write' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_47 : Operation 184 [1/1] (0.00ns)   --->   "br i1 %setup_read, label %.loopexit, label %0" [mandelbrotHLS/mandel.cpp:69]   --->   Operation 184 'br' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 185 [1/1] (5.25ns)   --->   "%gmem_addr_1_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %gmem_addr_1, i32 1)" [mandelbrotHLS/mandel.cpp:77]   --->   Operation 185 'writereq' 'gmem_addr_1_req' <Predicate = (!setup_read)> <Delay = 5.25> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 48 <SV = 47> <Delay = 5.25>
ST_48 : Operation 186 [1/1] (5.25ns)   --->   "call void @_ssdm_op_Write.m_axi.i32P(i32* %gmem_addr_1, i32 131, i4 -1)" [mandelbrotHLS/mandel.cpp:77]   --->   Operation 186 'write' <Predicate = true> <Delay = 5.25> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 49 <SV = 48> <Delay = 5.25>
ST_49 : Operation 187 [5/5] (5.25ns)   --->   "%gmem_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %gmem_addr_1)" [mandelbrotHLS/mandel.cpp:77]   --->   Operation 187 'writeresp' 'gmem_addr_1_resp' <Predicate = true> <Delay = 5.25> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 50 <SV = 49> <Delay = 5.25>
ST_50 : Operation 188 [4/5] (5.25ns)   --->   "%gmem_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %gmem_addr_1)" [mandelbrotHLS/mandel.cpp:77]   --->   Operation 188 'writeresp' 'gmem_addr_1_resp' <Predicate = true> <Delay = 5.25> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 51 <SV = 50> <Delay = 5.25>
ST_51 : Operation 189 [3/5] (5.25ns)   --->   "%gmem_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %gmem_addr_1)" [mandelbrotHLS/mandel.cpp:77]   --->   Operation 189 'writeresp' 'gmem_addr_1_resp' <Predicate = true> <Delay = 5.25> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 52 <SV = 51> <Delay = 5.25>
ST_52 : Operation 190 [2/5] (5.25ns)   --->   "%gmem_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %gmem_addr_1)" [mandelbrotHLS/mandel.cpp:77]   --->   Operation 190 'writeresp' 'gmem_addr_1_resp' <Predicate = true> <Delay = 5.25> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 53 <SV = 52> <Delay = 5.25>
ST_53 : Operation 191 [1/5] (5.25ns)   --->   "%gmem_addr_1_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %gmem_addr_1)" [mandelbrotHLS/mandel.cpp:77]   --->   Operation 191 'writeresp' 'gmem_addr_1_resp' <Predicate = true> <Delay = 5.25> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_53 : Operation 192 [1/1] (0.00ns)   --->   "%lshr_ln = call i10 @_ssdm_op_PartSelect.i10.i12.i32.i32(i12 %width_V_read, i32 2, i32 11)" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 192 'partselect' 'lshr_ln' <Predicate = true> <Delay = 0.00>
ST_53 : Operation 193 [1/1] (0.00ns)   --->   "%zext_ln81_1 = zext i10 %lshr_ln to i12" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 193 'zext' 'zext_ln81_1' <Predicate = true> <Delay = 0.00>
ST_53 : Operation 194 [1/1] (0.00ns)   --->   "%and_ln = call i12 @_ssdm_op_BitConcatenate.i12.i10.i2(i10 %lshr_ln, i2 0)" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 194 'bitconcatenate' 'and_ln' <Predicate = true> <Delay = 0.00>
ST_53 : Operation 195 [1/1] (2.13ns)   --->   "%sub_ln81 = sub i12 %and_ln, %zext_ln81_1" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 195 'sub' 'sub_ln81' <Predicate = true> <Delay = 2.13> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_53 : Operation 196 [1/1] (0.00ns)   --->   "%sext_ln1118 = sext i40 %p_Val2_31 to i52" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 196 'sext' 'sext_ln1118' <Predicate = true> <Delay = 0.00>
ST_53 : Operation 197 [1/1] (0.00ns)   --->   "%rhs_V_4 = sext i40 %p_Val2_31 to i41" [mandelbrotHLS/mandel.cpp:94]   --->   Operation 197 'sext' 'rhs_V_4' <Predicate = true> <Delay = 0.00>
ST_53 : Operation 198 [1/1] (0.00ns)   --->   "%zext_ln703 = zext i12 %width_V_read to i24" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 198 'zext' 'zext_ln703' <Predicate = true> <Delay = 0.00>
ST_53 : Operation 199 [1/1] (0.00ns)   --->   "%sext_ln81 = sext i40 %X0_V_read to i52" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 199 'sext' 'sext_ln81' <Predicate = true> <Delay = 0.00>
ST_53 : Operation 200 [1/1] (1.66ns)   --->   "br label %1" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 200 'br' <Predicate = true> <Delay = 1.66>

State 54 <SV = 53> <Delay = 5.25>
ST_54 : Operation 201 [1/1] (0.00ns)   --->   "%p_Val2_30 = phi i40 [ %Y0_V_read, %0 ], [ %select_ln340_17, %y_for_end ]" [mandelbrotHLS/mandel.cpp:94]   --->   Operation 201 'phi' 'p_Val2_30' <Predicate = (!setup_read)> <Delay = 0.00>
ST_54 : Operation 202 [1/1] (0.00ns)   --->   "%t_V_1 = phi i12 [ 0, %0 ], [ %line_V, %y_for_end ]"   --->   Operation 202 'phi' 't_V_1' <Predicate = (!setup_read)> <Delay = 0.00>
ST_54 : Operation 203 [1/1] (0.00ns)   --->   "%index_0 = phi i24 [ 0, %0 ], [ %index, %y_for_end ]"   --->   Operation 203 'phi' 'index_0' <Predicate = (!setup_read)> <Delay = 0.00>
ST_54 : Operation 204 [1/1] (0.00ns)   --->   "%zext_ln81 = zext i24 %index_0 to i32" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 204 'zext' 'zext_ln81' <Predicate = (!setup_read)> <Delay = 0.00>
ST_54 : Operation 205 [1/1] (1.92ns)   --->   "%icmp_ln81 = icmp eq i12 %t_V_1, %sub_ln81" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 205 'icmp' 'icmp_ln81' <Predicate = (!setup_read)> <Delay = 1.92> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.92> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_54 : Operation 206 [1/1] (2.13ns)   --->   "%line_V = add i12 %t_V_1, 1" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 206 'add' 'line_V' <Predicate = (!setup_read)> <Delay = 2.13> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_54 : Operation 207 [1/1] (0.00ns)   --->   "br i1 %icmp_ln81, label %.loopexit.loopexit, label %y_for_begin" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 207 'br' <Predicate = (!setup_read)> <Delay = 0.00>
ST_54 : Operation 208 [1/1] (5.25ns)   --->   "%gmem_addr_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %gmem_addr, i32 1)" [mandelbrotHLS/mandel.cpp:82]   --->   Operation 208 'writereq' 'gmem_addr_req' <Predicate = (!setup_read & !icmp_ln81)> <Delay = 5.25> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_54 : Operation 209 [1/1] (2.42ns)   --->   "%index = add i24 %zext_ln703, %index_0" [mandelbrotHLS/mandel.cpp:89]   --->   Operation 209 'add' 'index' <Predicate = (!setup_read & !icmp_ln81)> <Delay = 2.42> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_54 : Operation 210 [1/1] (0.00ns)   --->   "br label %.loopexit"   --->   Operation 210 'br' <Predicate = (!setup_read & icmp_ln81)> <Delay = 0.00>
ST_54 : Operation 211 [1/1] (0.00ns)   --->   "ret void" [mandelbrotHLS/mandel.cpp:101]   --->   Operation 211 'ret' <Predicate = (icmp_ln81) | (setup_read)> <Delay = 0.00>

State 55 <SV = 54> <Delay = 5.25>
ST_55 : Operation 212 [1/1] (0.00ns)   --->   "%zext_ln82 = zext i12 %t_V_1 to i32" [mandelbrotHLS/mandel.cpp:82]   --->   Operation 212 'zext' 'zext_ln82' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 213 [1/1] (5.25ns)   --->   "call void @_ssdm_op_Write.m_axi.i32P(i32* %gmem_addr, i32 %zext_ln82, i4 -1)" [mandelbrotHLS/mandel.cpp:82]   --->   Operation 213 'write' <Predicate = true> <Delay = 5.25> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 56 <SV = 55> <Delay = 5.25>
ST_56 : Operation 214 [5/5] (5.25ns)   --->   "%gmem_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %gmem_addr)" [mandelbrotHLS/mandel.cpp:82]   --->   Operation 214 'writeresp' 'gmem_addr_resp' <Predicate = true> <Delay = 5.25> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 57 <SV = 56> <Delay = 5.25>
ST_57 : Operation 215 [4/5] (5.25ns)   --->   "%gmem_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %gmem_addr)" [mandelbrotHLS/mandel.cpp:82]   --->   Operation 215 'writeresp' 'gmem_addr_resp' <Predicate = true> <Delay = 5.25> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 58 <SV = 57> <Delay = 5.25>
ST_58 : Operation 216 [3/5] (5.25ns)   --->   "%gmem_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %gmem_addr)" [mandelbrotHLS/mandel.cpp:82]   --->   Operation 216 'writeresp' 'gmem_addr_resp' <Predicate = true> <Delay = 5.25> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 59 <SV = 58> <Delay = 5.25>
ST_59 : Operation 217 [2/5] (5.25ns)   --->   "%gmem_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %gmem_addr)" [mandelbrotHLS/mandel.cpp:82]   --->   Operation 217 'writeresp' 'gmem_addr_resp' <Predicate = true> <Delay = 5.25> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 60 <SV = 59> <Delay = 5.25>
ST_60 : Operation 218 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([6 x i8]* @p_str8) nounwind" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 218 'specloopname' <Predicate = true> <Delay = 0.00>
ST_60 : Operation 219 [1/1] (0.00ns)   --->   "%tmp = call i32 (...)* @_ssdm_op_SpecRegionBegin([6 x i8]* @p_str8)" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 219 'specregionbegin' 'tmp' <Predicate = true> <Delay = 0.00>
ST_60 : Operation 220 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopTripCount(i32 768, i32 1440, i32 768, [1 x i8]* @p_str2) nounwind" [mandelbrotHLS/mandel.cpp:82]   --->   Operation 220 'speclooptripcount' <Predicate = true> <Delay = 0.00>
ST_60 : Operation 221 [1/5] (5.25ns)   --->   "%gmem_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %gmem_addr)" [mandelbrotHLS/mandel.cpp:82]   --->   Operation 221 'writeresp' 'gmem_addr_resp' <Predicate = true> <Delay = 5.25> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_60 : Operation 222 [1/1] (1.66ns)   --->   "br label %2" [mandelbrotHLS/mandel.cpp:83]   --->   Operation 222 'br' <Predicate = true> <Delay = 1.66>

State 61 <SV = 60> <Delay = 5.03>
ST_61 : Operation 223 [1/1] (0.00ns)   --->   "%tmp_V_1_0 = phi i12 [ 0, %y_for_begin ], [ %add_ln700, %_ZmlILi40ELi4ELb1EL9ap_q_mode4EL9ap_o_mode0ELi0ELi12ELb0EEN13ap_fixed_baseIXT5_EXT5_EXT6_ELS0_5ELS1_3ELi0EE5RTypeIXT_EXT0_EXT1_EE4multERK11ap_int_baseIXT5_EXT6_EERKS2_IXT_EXT0_EXT1_EXT2_EXT3_EXT4_EE.exit.0_ifconv ]" [mandelbrotHLS/mandel.cpp:83]   --->   Operation 223 'phi' 'tmp_V_1_0' <Predicate = true> <Delay = 0.00>
ST_61 : Operation 224 [1/1] (0.00ns)   --->   "%index_1_0 = phi i32 [ %zext_ln81, %y_for_begin ], [ %add_ln89, %_ZmlILi40ELi4ELb1EL9ap_q_mode4EL9ap_o_mode0ELi0ELi12ELb0EEN13ap_fixed_baseIXT5_EXT5_EXT6_ELS0_5ELS1_3ELi0EE5RTypeIXT_EXT0_EXT1_EE4multERK11ap_int_baseIXT5_EXT6_EERKS2_IXT_EXT0_EXT1_EXT2_EXT3_EXT4_EE.exit.0_ifconv ]" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 224 'phi' 'index_1_0' <Predicate = true> <Delay = 0.00>
ST_61 : Operation 225 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopTripCount(i64 128, i64 240, i64 128)"   --->   Operation 225 'speclooptripcount' <Predicate = true> <Delay = 0.00>
ST_61 : Operation 226 [1/1] (1.92ns)   --->   "%icmp_ln83 = icmp eq i12 %tmp_V_1_0, %width_V_read" [mandelbrotHLS/mandel.cpp:83]   --->   Operation 226 'icmp' 'icmp_ln83' <Predicate = true> <Delay = 1.92> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.92> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_61 : Operation 227 [1/1] (0.00ns)   --->   "br i1 %icmp_ln83, label %y_for_end, label %_ZmlILi40ELi4ELb1EL9ap_q_mode4EL9ap_o_mode0ELi0ELi12ELb0EEN13ap_fixed_baseIXT5_EXT5_EXT6_ELS0_5ELS1_3ELi0EE5RTypeIXT_EXT0_EXT1_EE4multERK11ap_int_baseIXT5_EXT6_EERKS2_IXT_EXT0_EXT1_EXT2_EXT3_EXT4_EE.exit.0_ifconv" [mandelbrotHLS/mandel.cpp:83]   --->   Operation 227 'br' <Predicate = true> <Delay = 0.00>
ST_61 : Operation 228 [1/1] (0.00ns)   --->   "%zext_ln1116 = zext i12 %tmp_V_1_0 to i52" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 228 'zext' 'zext_ln1116' <Predicate = (!icmp_ln83)> <Delay = 0.00>
ST_61 : Operation 229 [6/6] (3.89ns)   --->   "%mul_ln1118 = mul nsw i52 %zext_ln1116, %sext_ln1118" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 229 'mul' 'mul_ln1118' <Predicate = (!icmp_ln83)> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_61 : Operation 230 [1/1] (0.00ns)   --->   "%zext_ln89 = zext i32 %index_1_0 to i64" [mandelbrotHLS/mandel.cpp:89]   --->   Operation 230 'zext' 'zext_ln89' <Predicate = (!icmp_ln83)> <Delay = 0.00>
ST_61 : Operation 231 [1/1] (0.00ns)   --->   "%buf_addr = getelementptr inbounds i16* %buf_r, i64 %zext_ln89" [mandelbrotHLS/mandel.cpp:89]   --->   Operation 231 'getelementptr' 'buf_addr' <Predicate = (!icmp_ln83)> <Delay = 0.00>
ST_61 : Operation 232 [1/1] (0.00ns)   --->   "%or_ln700 = or i12 %tmp_V_1_0, 1" [mandelbrotHLS/mandel.cpp:83]   --->   Operation 232 'or' 'or_ln700' <Predicate = (!icmp_ln83)> <Delay = 0.00>
ST_61 : Operation 233 [1/1] (0.00ns)   --->   "%zext_ln1116_1 = zext i12 %or_ln700 to i52" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 233 'zext' 'zext_ln1116_1' <Predicate = (!icmp_ln83)> <Delay = 0.00>
ST_61 : Operation 234 [6/6] (3.89ns)   --->   "%mul_ln1118_1 = mul nsw i52 %zext_ln1116_1, %sext_ln1118" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 234 'mul' 'mul_ln1118_1' <Predicate = (!icmp_ln83)> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_61 : Operation 235 [1/1] (0.00ns)   --->   "%or_ln700_1 = or i12 %tmp_V_1_0, 2" [mandelbrotHLS/mandel.cpp:83]   --->   Operation 235 'or' 'or_ln700_1' <Predicate = (!icmp_ln83)> <Delay = 0.00>
ST_61 : Operation 236 [1/1] (0.00ns)   --->   "%zext_ln1116_2 = zext i12 %or_ln700_1 to i52" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 236 'zext' 'zext_ln1116_2' <Predicate = (!icmp_ln83)> <Delay = 0.00>
ST_61 : Operation 237 [6/6] (3.89ns)   --->   "%mul_ln1118_2 = mul nsw i52 %zext_ln1116_2, %sext_ln1118" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 237 'mul' 'mul_ln1118_2' <Predicate = (!icmp_ln83)> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_61 : Operation 238 [1/1] (0.00ns)   --->   "%or_ln700_2 = or i12 %tmp_V_1_0, 3" [mandelbrotHLS/mandel.cpp:83]   --->   Operation 238 'or' 'or_ln700_2' <Predicate = (!icmp_ln83)> <Delay = 0.00>
ST_61 : Operation 239 [1/1] (0.00ns)   --->   "%zext_ln1116_3 = zext i12 %or_ln700_2 to i52" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 239 'zext' 'zext_ln1116_3' <Predicate = (!icmp_ln83)> <Delay = 0.00>
ST_61 : Operation 240 [6/6] (3.89ns)   --->   "%mul_ln1118_3 = mul nsw i52 %zext_ln1116_3, %sext_ln1118" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 240 'mul' 'mul_ln1118_3' <Predicate = (!icmp_ln83)> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_61 : Operation 241 [1/1] (0.00ns)   --->   "%or_ln700_3 = or i12 %tmp_V_1_0, 4" [mandelbrotHLS/mandel.cpp:83]   --->   Operation 241 'or' 'or_ln700_3' <Predicate = (!icmp_ln83)> <Delay = 0.00>
ST_61 : Operation 242 [1/1] (0.00ns)   --->   "%zext_ln1116_4 = zext i12 %or_ln700_3 to i52" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 242 'zext' 'zext_ln1116_4' <Predicate = (!icmp_ln83)> <Delay = 0.00>
ST_61 : Operation 243 [6/6] (3.89ns)   --->   "%mul_ln1118_4 = mul nsw i52 %zext_ln1116_4, %sext_ln1118" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 243 'mul' 'mul_ln1118_4' <Predicate = (!icmp_ln83)> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_61 : Operation 244 [1/1] (0.00ns)   --->   "%or_ln700_4 = or i12 %tmp_V_1_0, 5" [mandelbrotHLS/mandel.cpp:83]   --->   Operation 244 'or' 'or_ln700_4' <Predicate = (!icmp_ln83)> <Delay = 0.00>
ST_61 : Operation 245 [1/1] (0.00ns)   --->   "%zext_ln1116_5 = zext i12 %or_ln700_4 to i52" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 245 'zext' 'zext_ln1116_5' <Predicate = (!icmp_ln83)> <Delay = 0.00>
ST_61 : Operation 246 [6/6] (3.89ns)   --->   "%mul_ln1118_5 = mul nsw i52 %zext_ln1116_5, %sext_ln1118" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 246 'mul' 'mul_ln1118_5' <Predicate = (!icmp_ln83)> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_61 : Operation 247 [1/1] (0.00ns)   --->   "%or_ln700_5 = or i12 %tmp_V_1_0, 6" [mandelbrotHLS/mandel.cpp:83]   --->   Operation 247 'or' 'or_ln700_5' <Predicate = (!icmp_ln83)> <Delay = 0.00>
ST_61 : Operation 248 [1/1] (0.00ns)   --->   "%zext_ln1116_6 = zext i12 %or_ln700_5 to i52" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 248 'zext' 'zext_ln1116_6' <Predicate = (!icmp_ln83)> <Delay = 0.00>
ST_61 : Operation 249 [6/6] (3.89ns)   --->   "%mul_ln1118_6 = mul nsw i52 %zext_ln1116_6, %sext_ln1118" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 249 'mul' 'mul_ln1118_6' <Predicate = (!icmp_ln83)> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_61 : Operation 250 [1/1] (0.00ns)   --->   "%or_ln700_6 = or i12 %tmp_V_1_0, 7" [mandelbrotHLS/mandel.cpp:83]   --->   Operation 250 'or' 'or_ln700_6' <Predicate = (!icmp_ln83)> <Delay = 0.00>
ST_61 : Operation 251 [1/1] (0.00ns)   --->   "%zext_ln1116_7 = zext i12 %or_ln700_6 to i52" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 251 'zext' 'zext_ln1116_7' <Predicate = (!icmp_ln83)> <Delay = 0.00>
ST_61 : Operation 252 [6/6] (3.89ns)   --->   "%mul_ln1118_7 = mul nsw i52 %zext_ln1116_7, %sext_ln1118" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 252 'mul' 'mul_ln1118_7' <Predicate = (!icmp_ln83)> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_61 : Operation 253 [1/1] (2.70ns)   --->   "%add_ln89 = add nsw i32 8, %index_1_0" [mandelbrotHLS/mandel.cpp:89]   --->   Operation 253 'add' 'add_ln89' <Predicate = (!icmp_ln83)> <Delay = 2.70> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_61 : Operation 254 [1/1] (2.13ns)   --->   "%add_ln700 = add i12 8, %tmp_V_1_0" [mandelbrotHLS/mandel.cpp:83]   --->   Operation 254 'add' 'add_ln700' <Predicate = (!icmp_ln83)> <Delay = 2.13> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_61 : Operation 255 [1/1] (0.00ns)   --->   "%lhs_V_3 = sext i40 %p_Val2_30 to i41" [mandelbrotHLS/mandel.cpp:94]   --->   Operation 255 'sext' 'lhs_V_3' <Predicate = (icmp_ln83)> <Delay = 0.00>
ST_61 : Operation 256 [1/1] (2.88ns)   --->   "%ret_V_14 = sub nsw i41 %lhs_V_3, %rhs_V_4" [mandelbrotHLS/mandel.cpp:94]   --->   Operation 256 'sub' 'ret_V_14' <Predicate = (icmp_ln83)> <Delay = 2.88> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_61 : Operation 257 [1/1] (0.00ns)   --->   "%p_Result_22 = call i1 @_ssdm_op_BitSelect.i1.i41.i32(i41 %ret_V_14, i32 40)" [mandelbrotHLS/mandel.cpp:94]   --->   Operation 257 'bitselect' 'p_Result_22' <Predicate = (icmp_ln83)> <Delay = 0.00>
ST_61 : Operation 258 [1/1] (0.00ns)   --->   "%y_V = trunc i41 %ret_V_14 to i40" [mandelbrotHLS/mandel.cpp:94]   --->   Operation 258 'trunc' 'y_V' <Predicate = (icmp_ln83)> <Delay = 0.00>
ST_61 : Operation 259 [1/1] (0.00ns)   --->   "%p_Result_23 = call i1 @_ssdm_op_BitSelect.i1.i41.i32(i41 %ret_V_14, i32 39)" [mandelbrotHLS/mandel.cpp:94]   --->   Operation 259 'bitselect' 'p_Result_23' <Predicate = (icmp_ln83)> <Delay = 0.00>
ST_61 : Operation 260 [1/1] (0.00ns) (grouped into LUT with out node select_ln388_7)   --->   "%xor_ln786_7 = xor i1 %p_Result_23, true" [mandelbrotHLS/mandel.cpp:94]   --->   Operation 260 'xor' 'xor_ln786_7' <Predicate = (icmp_ln83)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_61 : Operation 261 [1/1] (0.00ns) (grouped into LUT with out node select_ln388_7)   --->   "%underflow_7 = and i1 %p_Result_22, %xor_ln786_7" [mandelbrotHLS/mandel.cpp:94]   --->   Operation 261 'and' 'underflow_7' <Predicate = (icmp_ln83)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_61 : Operation 262 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_17)   --->   "%xor_ln340_3 = xor i1 %p_Result_22, %p_Result_23" [mandelbrotHLS/mandel.cpp:94]   --->   Operation 262 'xor' 'xor_ln340_3' <Predicate = (icmp_ln83)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_61 : Operation 263 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_17)   --->   "%xor_ln340_4 = xor i1 %p_Result_22, true" [mandelbrotHLS/mandel.cpp:94]   --->   Operation 263 'xor' 'xor_ln340_4' <Predicate = (icmp_ln83)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_61 : Operation 264 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_17)   --->   "%or_ln340_19 = or i1 %p_Result_23, %xor_ln340_4" [mandelbrotHLS/mandel.cpp:94]   --->   Operation 264 'or' 'or_ln340_19' <Predicate = (icmp_ln83)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_61 : Operation 265 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_17)   --->   "%select_ln340_7 = select i1 %xor_ln340_3, i40 549755813887, i40 %y_V" [mandelbrotHLS/mandel.cpp:94]   --->   Operation 265 'select' 'select_ln340_7' <Predicate = (icmp_ln83)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.07> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_61 : Operation 266 [1/1] (1.07ns) (out node of the LUT)   --->   "%select_ln388_7 = select i1 %underflow_7, i40 -549755813888, i40 %y_V" [mandelbrotHLS/mandel.cpp:94]   --->   Operation 266 'select' 'select_ln388_7' <Predicate = (icmp_ln83)> <Delay = 1.07> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.07> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_61 : Operation 267 [1/1] (1.07ns) (out node of the LUT)   --->   "%select_ln340_17 = select i1 %or_ln340_19, i40 %select_ln340_7, i40 %select_ln388_7" [mandelbrotHLS/mandel.cpp:94]   --->   Operation 267 'select' 'select_ln340_17' <Predicate = (icmp_ln83)> <Delay = 1.07> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.07> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_61 : Operation 268 [1/1] (0.00ns)   --->   "%empty_17 = call i32 (...)* @_ssdm_op_SpecRegionEnd([6 x i8]* @p_str8, i32 %tmp)" [mandelbrotHLS/mandel.cpp:95]   --->   Operation 268 'specregionend' 'empty_17' <Predicate = (icmp_ln83)> <Delay = 0.00>
ST_61 : Operation 269 [1/1] (0.00ns)   --->   "br label %1" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 269 'br' <Predicate = (icmp_ln83)> <Delay = 0.00>

State 62 <SV = 61> <Delay = 3.89>
ST_62 : Operation 270 [5/6] (3.89ns)   --->   "%mul_ln1118 = mul nsw i52 %zext_ln1116, %sext_ln1118" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 270 'mul' 'mul_ln1118' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_62 : Operation 271 [5/6] (3.89ns)   --->   "%mul_ln1118_1 = mul nsw i52 %zext_ln1116_1, %sext_ln1118" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 271 'mul' 'mul_ln1118_1' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_62 : Operation 272 [5/6] (3.89ns)   --->   "%mul_ln1118_2 = mul nsw i52 %zext_ln1116_2, %sext_ln1118" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 272 'mul' 'mul_ln1118_2' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_62 : Operation 273 [5/6] (3.89ns)   --->   "%mul_ln1118_3 = mul nsw i52 %zext_ln1116_3, %sext_ln1118" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 273 'mul' 'mul_ln1118_3' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_62 : Operation 274 [5/6] (3.89ns)   --->   "%mul_ln1118_4 = mul nsw i52 %zext_ln1116_4, %sext_ln1118" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 274 'mul' 'mul_ln1118_4' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_62 : Operation 275 [5/6] (3.89ns)   --->   "%mul_ln1118_5 = mul nsw i52 %zext_ln1116_5, %sext_ln1118" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 275 'mul' 'mul_ln1118_5' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_62 : Operation 276 [5/6] (3.89ns)   --->   "%mul_ln1118_6 = mul nsw i52 %zext_ln1116_6, %sext_ln1118" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 276 'mul' 'mul_ln1118_6' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_62 : Operation 277 [5/6] (3.89ns)   --->   "%mul_ln1118_7 = mul nsw i52 %zext_ln1116_7, %sext_ln1118" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 277 'mul' 'mul_ln1118_7' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 63 <SV = 62> <Delay = 3.89>
ST_63 : Operation 278 [4/6] (3.89ns)   --->   "%mul_ln1118 = mul nsw i52 %zext_ln1116, %sext_ln1118" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 278 'mul' 'mul_ln1118' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_63 : Operation 279 [4/6] (3.89ns)   --->   "%mul_ln1118_1 = mul nsw i52 %zext_ln1116_1, %sext_ln1118" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 279 'mul' 'mul_ln1118_1' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_63 : Operation 280 [4/6] (3.89ns)   --->   "%mul_ln1118_2 = mul nsw i52 %zext_ln1116_2, %sext_ln1118" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 280 'mul' 'mul_ln1118_2' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_63 : Operation 281 [4/6] (3.89ns)   --->   "%mul_ln1118_3 = mul nsw i52 %zext_ln1116_3, %sext_ln1118" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 281 'mul' 'mul_ln1118_3' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_63 : Operation 282 [4/6] (3.89ns)   --->   "%mul_ln1118_4 = mul nsw i52 %zext_ln1116_4, %sext_ln1118" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 282 'mul' 'mul_ln1118_4' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_63 : Operation 283 [4/6] (3.89ns)   --->   "%mul_ln1118_5 = mul nsw i52 %zext_ln1116_5, %sext_ln1118" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 283 'mul' 'mul_ln1118_5' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_63 : Operation 284 [4/6] (3.89ns)   --->   "%mul_ln1118_6 = mul nsw i52 %zext_ln1116_6, %sext_ln1118" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 284 'mul' 'mul_ln1118_6' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_63 : Operation 285 [4/6] (3.89ns)   --->   "%mul_ln1118_7 = mul nsw i52 %zext_ln1116_7, %sext_ln1118" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 285 'mul' 'mul_ln1118_7' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 64 <SV = 63> <Delay = 3.89>
ST_64 : Operation 286 [3/6] (3.89ns)   --->   "%mul_ln1118 = mul nsw i52 %zext_ln1116, %sext_ln1118" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 286 'mul' 'mul_ln1118' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_64 : Operation 287 [3/6] (3.89ns)   --->   "%mul_ln1118_1 = mul nsw i52 %zext_ln1116_1, %sext_ln1118" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 287 'mul' 'mul_ln1118_1' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_64 : Operation 288 [3/6] (3.89ns)   --->   "%mul_ln1118_2 = mul nsw i52 %zext_ln1116_2, %sext_ln1118" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 288 'mul' 'mul_ln1118_2' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_64 : Operation 289 [3/6] (3.89ns)   --->   "%mul_ln1118_3 = mul nsw i52 %zext_ln1116_3, %sext_ln1118" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 289 'mul' 'mul_ln1118_3' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_64 : Operation 290 [3/6] (3.89ns)   --->   "%mul_ln1118_4 = mul nsw i52 %zext_ln1116_4, %sext_ln1118" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 290 'mul' 'mul_ln1118_4' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_64 : Operation 291 [3/6] (3.89ns)   --->   "%mul_ln1118_5 = mul nsw i52 %zext_ln1116_5, %sext_ln1118" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 291 'mul' 'mul_ln1118_5' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_64 : Operation 292 [3/6] (3.89ns)   --->   "%mul_ln1118_6 = mul nsw i52 %zext_ln1116_6, %sext_ln1118" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 292 'mul' 'mul_ln1118_6' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_64 : Operation 293 [3/6] (3.89ns)   --->   "%mul_ln1118_7 = mul nsw i52 %zext_ln1116_7, %sext_ln1118" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 293 'mul' 'mul_ln1118_7' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 65 <SV = 64> <Delay = 3.89>
ST_65 : Operation 294 [2/6] (3.89ns)   --->   "%mul_ln1118 = mul nsw i52 %zext_ln1116, %sext_ln1118" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 294 'mul' 'mul_ln1118' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_65 : Operation 295 [2/6] (3.89ns)   --->   "%mul_ln1118_1 = mul nsw i52 %zext_ln1116_1, %sext_ln1118" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 295 'mul' 'mul_ln1118_1' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_65 : Operation 296 [2/6] (3.89ns)   --->   "%mul_ln1118_2 = mul nsw i52 %zext_ln1116_2, %sext_ln1118" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 296 'mul' 'mul_ln1118_2' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_65 : Operation 297 [2/6] (3.89ns)   --->   "%mul_ln1118_3 = mul nsw i52 %zext_ln1116_3, %sext_ln1118" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 297 'mul' 'mul_ln1118_3' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_65 : Operation 298 [2/6] (3.89ns)   --->   "%mul_ln1118_4 = mul nsw i52 %zext_ln1116_4, %sext_ln1118" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 298 'mul' 'mul_ln1118_4' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_65 : Operation 299 [2/6] (3.89ns)   --->   "%mul_ln1118_5 = mul nsw i52 %zext_ln1116_5, %sext_ln1118" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 299 'mul' 'mul_ln1118_5' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_65 : Operation 300 [2/6] (3.89ns)   --->   "%mul_ln1118_6 = mul nsw i52 %zext_ln1116_6, %sext_ln1118" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 300 'mul' 'mul_ln1118_6' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_65 : Operation 301 [2/6] (3.89ns)   --->   "%mul_ln1118_7 = mul nsw i52 %zext_ln1116_7, %sext_ln1118" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 301 'mul' 'mul_ln1118_7' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 66 <SV = 65> <Delay = 3.89>
ST_66 : Operation 302 [1/6] (3.89ns)   --->   "%mul_ln1118 = mul nsw i52 %zext_ln1116, %sext_ln1118" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 302 'mul' 'mul_ln1118' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_66 : Operation 303 [1/1] (0.00ns)   --->   "%trunc_ln1192 = trunc i52 %mul_ln1118 to i40" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 303 'trunc' 'trunc_ln1192' <Predicate = true> <Delay = 0.00>
ST_66 : Operation 304 [1/6] (3.89ns)   --->   "%mul_ln1118_1 = mul nsw i52 %zext_ln1116_1, %sext_ln1118" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 304 'mul' 'mul_ln1118_1' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_66 : Operation 305 [1/1] (0.00ns)   --->   "%trunc_ln1192_1 = trunc i52 %mul_ln1118_1 to i40" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 305 'trunc' 'trunc_ln1192_1' <Predicate = true> <Delay = 0.00>
ST_66 : Operation 306 [1/6] (3.89ns)   --->   "%mul_ln1118_2 = mul nsw i52 %zext_ln1116_2, %sext_ln1118" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 306 'mul' 'mul_ln1118_2' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_66 : Operation 307 [1/1] (0.00ns)   --->   "%trunc_ln1192_2 = trunc i52 %mul_ln1118_2 to i40" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 307 'trunc' 'trunc_ln1192_2' <Predicate = true> <Delay = 0.00>
ST_66 : Operation 308 [1/6] (3.89ns)   --->   "%mul_ln1118_3 = mul nsw i52 %zext_ln1116_3, %sext_ln1118" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 308 'mul' 'mul_ln1118_3' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_66 : Operation 309 [1/1] (0.00ns)   --->   "%trunc_ln1192_3 = trunc i52 %mul_ln1118_3 to i40" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 309 'trunc' 'trunc_ln1192_3' <Predicate = true> <Delay = 0.00>
ST_66 : Operation 310 [1/6] (3.89ns)   --->   "%mul_ln1118_4 = mul nsw i52 %zext_ln1116_4, %sext_ln1118" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 310 'mul' 'mul_ln1118_4' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_66 : Operation 311 [1/1] (0.00ns)   --->   "%trunc_ln1192_4 = trunc i52 %mul_ln1118_4 to i40" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 311 'trunc' 'trunc_ln1192_4' <Predicate = true> <Delay = 0.00>
ST_66 : Operation 312 [1/6] (3.89ns)   --->   "%mul_ln1118_5 = mul nsw i52 %zext_ln1116_5, %sext_ln1118" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 312 'mul' 'mul_ln1118_5' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_66 : Operation 313 [1/1] (0.00ns)   --->   "%trunc_ln1192_5 = trunc i52 %mul_ln1118_5 to i40" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 313 'trunc' 'trunc_ln1192_5' <Predicate = true> <Delay = 0.00>
ST_66 : Operation 314 [1/6] (3.89ns)   --->   "%mul_ln1118_6 = mul nsw i52 %zext_ln1116_6, %sext_ln1118" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 314 'mul' 'mul_ln1118_6' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_66 : Operation 315 [1/1] (0.00ns)   --->   "%trunc_ln1192_6 = trunc i52 %mul_ln1118_6 to i40" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 315 'trunc' 'trunc_ln1192_6' <Predicate = true> <Delay = 0.00>
ST_66 : Operation 316 [1/6] (3.89ns)   --->   "%mul_ln1118_7 = mul nsw i52 %zext_ln1116_7, %sext_ln1118" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 316 'mul' 'mul_ln1118_7' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_66 : Operation 317 [1/1] (0.00ns)   --->   "%trunc_ln1192_7 = trunc i52 %mul_ln1118_7 to i40" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 317 'trunc' 'trunc_ln1192_7' <Predicate = true> <Delay = 0.00>

State 67 <SV = 66> <Delay = 5.17>
ST_67 : Operation 318 [1/1] (3.24ns)   --->   "%add_ln1192 = add i52 %sext_ln81, %mul_ln1118" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 318 'add' 'add_ln1192' <Predicate = true> <Delay = 3.24> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_67 : Operation 319 [1/1] (0.00ns)   --->   "%tmp_48 = call i1 @_ssdm_op_BitSelect.i1.i52.i32(i52 %add_ln1192, i32 51)" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 319 'bitselect' 'tmp_48' <Predicate = true> <Delay = 0.00>
ST_67 : Operation 320 [1/1] (2.88ns)   --->   "%add_ln703 = add i40 %X0_V_read, %trunc_ln1192" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 320 'add' 'add_ln703' <Predicate = true> <Delay = 2.88> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_67 : Operation 321 [1/1] (0.00ns)   --->   "%tmp_49 = call i1 @_ssdm_op_BitSelect.i1.i40.i32(i40 %add_ln703, i32 39)" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 321 'bitselect' 'tmp_49' <Predicate = true> <Delay = 0.00>
ST_67 : Operation 322 [1/1] (0.00ns)   --->   "%tmp_8 = call i12 @_ssdm_op_PartSelect.i12.i52.i32.i32(i52 %add_ln1192, i32 40, i32 51)" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 322 'partselect' 'tmp_8' <Predicate = true> <Delay = 0.00>
ST_67 : Operation 323 [1/1] (1.92ns)   --->   "%icmp_ln785 = icmp ne i12 %tmp_8, 0" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 323 'icmp' 'icmp_ln785' <Predicate = true> <Delay = 1.92> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.92> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_67 : Operation 324 [1/1] (1.92ns)   --->   "%icmp_ln786 = icmp ne i12 %tmp_8, -1" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 324 'icmp' 'icmp_ln786' <Predicate = true> <Delay = 1.92> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.92> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_67 : Operation 325 [1/1] (3.24ns)   --->   "%add_ln1192_1 = add i52 %sext_ln81, %mul_ln1118_1" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 325 'add' 'add_ln1192_1' <Predicate = true> <Delay = 3.24> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_67 : Operation 326 [1/1] (0.00ns)   --->   "%tmp_50 = call i1 @_ssdm_op_BitSelect.i1.i52.i32(i52 %add_ln1192_1, i32 51)" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 326 'bitselect' 'tmp_50' <Predicate = true> <Delay = 0.00>
ST_67 : Operation 327 [1/1] (2.88ns)   --->   "%add_ln703_1 = add i40 %X0_V_read, %trunc_ln1192_1" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 327 'add' 'add_ln703_1' <Predicate = true> <Delay = 2.88> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_67 : Operation 328 [1/1] (0.00ns)   --->   "%tmp_51 = call i1 @_ssdm_op_BitSelect.i1.i40.i32(i40 %add_ln703_1, i32 39)" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 328 'bitselect' 'tmp_51' <Predicate = true> <Delay = 0.00>
ST_67 : Operation 329 [1/1] (0.00ns)   --->   "%tmp_9 = call i12 @_ssdm_op_PartSelect.i12.i52.i32.i32(i52 %add_ln1192_1, i32 40, i32 51)" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 329 'partselect' 'tmp_9' <Predicate = true> <Delay = 0.00>
ST_67 : Operation 330 [1/1] (1.92ns)   --->   "%icmp_ln785_1 = icmp ne i12 %tmp_9, 0" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 330 'icmp' 'icmp_ln785_1' <Predicate = true> <Delay = 1.92> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.92> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_67 : Operation 331 [1/1] (1.92ns)   --->   "%icmp_ln786_1 = icmp ne i12 %tmp_9, -1" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 331 'icmp' 'icmp_ln786_1' <Predicate = true> <Delay = 1.92> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.92> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_67 : Operation 332 [1/1] (3.24ns)   --->   "%add_ln1192_2 = add i52 %sext_ln81, %mul_ln1118_2" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 332 'add' 'add_ln1192_2' <Predicate = true> <Delay = 3.24> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_67 : Operation 333 [1/1] (0.00ns)   --->   "%tmp_52 = call i1 @_ssdm_op_BitSelect.i1.i52.i32(i52 %add_ln1192_2, i32 51)" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 333 'bitselect' 'tmp_52' <Predicate = true> <Delay = 0.00>
ST_67 : Operation 334 [1/1] (2.88ns)   --->   "%add_ln703_2 = add i40 %X0_V_read, %trunc_ln1192_2" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 334 'add' 'add_ln703_2' <Predicate = true> <Delay = 2.88> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_67 : Operation 335 [1/1] (0.00ns)   --->   "%tmp_53 = call i1 @_ssdm_op_BitSelect.i1.i40.i32(i40 %add_ln703_2, i32 39)" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 335 'bitselect' 'tmp_53' <Predicate = true> <Delay = 0.00>
ST_67 : Operation 336 [1/1] (0.00ns)   --->   "%tmp_s = call i12 @_ssdm_op_PartSelect.i12.i52.i32.i32(i52 %add_ln1192_2, i32 40, i32 51)" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 336 'partselect' 'tmp_s' <Predicate = true> <Delay = 0.00>
ST_67 : Operation 337 [1/1] (1.92ns)   --->   "%icmp_ln785_2 = icmp ne i12 %tmp_s, 0" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 337 'icmp' 'icmp_ln785_2' <Predicate = true> <Delay = 1.92> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.92> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_67 : Operation 338 [1/1] (1.92ns)   --->   "%icmp_ln786_2 = icmp ne i12 %tmp_s, -1" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 338 'icmp' 'icmp_ln786_2' <Predicate = true> <Delay = 1.92> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.92> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_67 : Operation 339 [1/1] (3.24ns)   --->   "%add_ln1192_3 = add i52 %sext_ln81, %mul_ln1118_3" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 339 'add' 'add_ln1192_3' <Predicate = true> <Delay = 3.24> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_67 : Operation 340 [1/1] (0.00ns)   --->   "%tmp_54 = call i1 @_ssdm_op_BitSelect.i1.i52.i32(i52 %add_ln1192_3, i32 51)" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 340 'bitselect' 'tmp_54' <Predicate = true> <Delay = 0.00>
ST_67 : Operation 341 [1/1] (2.88ns)   --->   "%add_ln703_3 = add i40 %X0_V_read, %trunc_ln1192_3" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 341 'add' 'add_ln703_3' <Predicate = true> <Delay = 2.88> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_67 : Operation 342 [1/1] (0.00ns)   --->   "%tmp_55 = call i1 @_ssdm_op_BitSelect.i1.i40.i32(i40 %add_ln703_3, i32 39)" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 342 'bitselect' 'tmp_55' <Predicate = true> <Delay = 0.00>
ST_67 : Operation 343 [1/1] (0.00ns)   --->   "%tmp_10 = call i12 @_ssdm_op_PartSelect.i12.i52.i32.i32(i52 %add_ln1192_3, i32 40, i32 51)" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 343 'partselect' 'tmp_10' <Predicate = true> <Delay = 0.00>
ST_67 : Operation 344 [1/1] (1.92ns)   --->   "%icmp_ln785_3 = icmp ne i12 %tmp_10, 0" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 344 'icmp' 'icmp_ln785_3' <Predicate = true> <Delay = 1.92> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.92> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_67 : Operation 345 [1/1] (1.92ns)   --->   "%icmp_ln786_3 = icmp ne i12 %tmp_10, -1" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 345 'icmp' 'icmp_ln786_3' <Predicate = true> <Delay = 1.92> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.92> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_67 : Operation 346 [1/1] (3.24ns)   --->   "%add_ln1192_4 = add i52 %sext_ln81, %mul_ln1118_4" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 346 'add' 'add_ln1192_4' <Predicate = true> <Delay = 3.24> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_67 : Operation 347 [1/1] (0.00ns)   --->   "%tmp_56 = call i1 @_ssdm_op_BitSelect.i1.i52.i32(i52 %add_ln1192_4, i32 51)" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 347 'bitselect' 'tmp_56' <Predicate = true> <Delay = 0.00>
ST_67 : Operation 348 [1/1] (2.88ns)   --->   "%add_ln703_4 = add i40 %X0_V_read, %trunc_ln1192_4" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 348 'add' 'add_ln703_4' <Predicate = true> <Delay = 2.88> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_67 : Operation 349 [1/1] (0.00ns)   --->   "%tmp_57 = call i1 @_ssdm_op_BitSelect.i1.i40.i32(i40 %add_ln703_4, i32 39)" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 349 'bitselect' 'tmp_57' <Predicate = true> <Delay = 0.00>
ST_67 : Operation 350 [1/1] (0.00ns)   --->   "%tmp_11 = call i12 @_ssdm_op_PartSelect.i12.i52.i32.i32(i52 %add_ln1192_4, i32 40, i32 51)" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 350 'partselect' 'tmp_11' <Predicate = true> <Delay = 0.00>
ST_67 : Operation 351 [1/1] (1.92ns)   --->   "%icmp_ln785_4 = icmp ne i12 %tmp_11, 0" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 351 'icmp' 'icmp_ln785_4' <Predicate = true> <Delay = 1.92> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.92> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_67 : Operation 352 [1/1] (1.92ns)   --->   "%icmp_ln786_4 = icmp ne i12 %tmp_11, -1" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 352 'icmp' 'icmp_ln786_4' <Predicate = true> <Delay = 1.92> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.92> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_67 : Operation 353 [1/1] (3.24ns)   --->   "%add_ln1192_5 = add i52 %sext_ln81, %mul_ln1118_5" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 353 'add' 'add_ln1192_5' <Predicate = true> <Delay = 3.24> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_67 : Operation 354 [1/1] (0.00ns)   --->   "%tmp_58 = call i1 @_ssdm_op_BitSelect.i1.i52.i32(i52 %add_ln1192_5, i32 51)" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 354 'bitselect' 'tmp_58' <Predicate = true> <Delay = 0.00>
ST_67 : Operation 355 [1/1] (2.88ns)   --->   "%add_ln703_5 = add i40 %X0_V_read, %trunc_ln1192_5" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 355 'add' 'add_ln703_5' <Predicate = true> <Delay = 2.88> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_67 : Operation 356 [1/1] (0.00ns)   --->   "%tmp_59 = call i1 @_ssdm_op_BitSelect.i1.i40.i32(i40 %add_ln703_5, i32 39)" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 356 'bitselect' 'tmp_59' <Predicate = true> <Delay = 0.00>
ST_67 : Operation 357 [1/1] (0.00ns)   --->   "%tmp_12 = call i12 @_ssdm_op_PartSelect.i12.i52.i32.i32(i52 %add_ln1192_5, i32 40, i32 51)" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 357 'partselect' 'tmp_12' <Predicate = true> <Delay = 0.00>
ST_67 : Operation 358 [1/1] (1.92ns)   --->   "%icmp_ln785_5 = icmp ne i12 %tmp_12, 0" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 358 'icmp' 'icmp_ln785_5' <Predicate = true> <Delay = 1.92> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.92> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_67 : Operation 359 [1/1] (1.92ns)   --->   "%icmp_ln786_5 = icmp ne i12 %tmp_12, -1" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 359 'icmp' 'icmp_ln786_5' <Predicate = true> <Delay = 1.92> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.92> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_67 : Operation 360 [1/1] (3.24ns)   --->   "%add_ln1192_6 = add i52 %sext_ln81, %mul_ln1118_6" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 360 'add' 'add_ln1192_6' <Predicate = true> <Delay = 3.24> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_67 : Operation 361 [1/1] (0.00ns)   --->   "%tmp_60 = call i1 @_ssdm_op_BitSelect.i1.i52.i32(i52 %add_ln1192_6, i32 51)" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 361 'bitselect' 'tmp_60' <Predicate = true> <Delay = 0.00>
ST_67 : Operation 362 [1/1] (2.88ns)   --->   "%add_ln703_6 = add i40 %X0_V_read, %trunc_ln1192_6" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 362 'add' 'add_ln703_6' <Predicate = true> <Delay = 2.88> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_67 : Operation 363 [1/1] (0.00ns)   --->   "%tmp_61 = call i1 @_ssdm_op_BitSelect.i1.i40.i32(i40 %add_ln703_6, i32 39)" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 363 'bitselect' 'tmp_61' <Predicate = true> <Delay = 0.00>
ST_67 : Operation 364 [1/1] (0.00ns)   --->   "%tmp_13 = call i12 @_ssdm_op_PartSelect.i12.i52.i32.i32(i52 %add_ln1192_6, i32 40, i32 51)" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 364 'partselect' 'tmp_13' <Predicate = true> <Delay = 0.00>
ST_67 : Operation 365 [1/1] (1.92ns)   --->   "%icmp_ln785_6 = icmp ne i12 %tmp_13, 0" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 365 'icmp' 'icmp_ln785_6' <Predicate = true> <Delay = 1.92> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.92> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_67 : Operation 366 [1/1] (1.92ns)   --->   "%icmp_ln786_6 = icmp ne i12 %tmp_13, -1" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 366 'icmp' 'icmp_ln786_6' <Predicate = true> <Delay = 1.92> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.92> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_67 : Operation 367 [1/1] (3.24ns)   --->   "%add_ln1192_7 = add i52 %sext_ln81, %mul_ln1118_7" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 367 'add' 'add_ln1192_7' <Predicate = true> <Delay = 3.24> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_67 : Operation 368 [1/1] (0.00ns)   --->   "%tmp_62 = call i1 @_ssdm_op_BitSelect.i1.i52.i32(i52 %add_ln1192_7, i32 51)" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 368 'bitselect' 'tmp_62' <Predicate = true> <Delay = 0.00>
ST_67 : Operation 369 [1/1] (2.88ns)   --->   "%add_ln703_7 = add i40 %X0_V_read, %trunc_ln1192_7" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 369 'add' 'add_ln703_7' <Predicate = true> <Delay = 2.88> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_67 : Operation 370 [1/1] (0.00ns)   --->   "%tmp_63 = call i1 @_ssdm_op_BitSelect.i1.i40.i32(i40 %add_ln703_7, i32 39)" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 370 'bitselect' 'tmp_63' <Predicate = true> <Delay = 0.00>
ST_67 : Operation 371 [1/1] (0.00ns)   --->   "%tmp_14 = call i12 @_ssdm_op_PartSelect.i12.i52.i32.i32(i52 %add_ln1192_7, i32 40, i32 51)" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 371 'partselect' 'tmp_14' <Predicate = true> <Delay = 0.00>
ST_67 : Operation 372 [1/1] (1.92ns)   --->   "%icmp_ln785_7 = icmp ne i12 %tmp_14, 0" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 372 'icmp' 'icmp_ln785_7' <Predicate = true> <Delay = 1.92> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.92> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_67 : Operation 373 [1/1] (1.92ns)   --->   "%icmp_ln786_7 = icmp ne i12 %tmp_14, -1" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 373 'icmp' 'icmp_ln786_7' <Predicate = true> <Delay = 1.92> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.92> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 68 <SV = 67> <Delay = 3.12>
ST_68 : Operation 374 [1/1] (0.00ns) (grouped into LUT with out node and_ln785)   --->   "%or_ln785 = or i1 %tmp_49, %icmp_ln785" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 374 'or' 'or_ln785' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 375 [1/1] (0.00ns) (grouped into LUT with out node and_ln785)   --->   "%xor_ln785 = xor i1 %tmp_48, true" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 375 'xor' 'xor_ln785' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 376 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln785 = and i1 %or_ln785, %xor_ln785" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 376 'and' 'and_ln785' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 377 [1/1] (0.00ns) (grouped into LUT with out node and_ln786)   --->   "%xor_ln786_8 = xor i1 %tmp_49, true" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 377 'xor' 'xor_ln786_8' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 378 [1/1] (0.00ns) (grouped into LUT with out node and_ln786)   --->   "%or_ln786 = or i1 %icmp_ln786, %xor_ln786_8" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 378 'or' 'or_ln786' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 379 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln786 = and i1 %or_ln786, %tmp_48" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 379 'and' 'and_ln786' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 380 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_8)   --->   "%or_ln340_20 = or i1 %and_ln786, %and_ln785" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 380 'or' 'or_ln340_20' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 381 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_18)   --->   "%xor_ln340_5 = xor i1 %and_ln786, true" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 381 'xor' 'xor_ln340_5' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 382 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_18)   --->   "%or_ln340_21 = or i1 %and_ln785, %xor_ln340_5" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 382 'or' 'or_ln340_21' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 383 [1/1] (1.07ns) (out node of the LUT)   --->   "%select_ln340_8 = select i1 %or_ln340_20, i40 549755813887, i40 %add_ln703" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 383 'select' 'select_ln340_8' <Predicate = true> <Delay = 1.07> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.07> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_68 : Operation 384 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_18)   --->   "%select_ln388_8 = select i1 %and_ln786, i40 -549755813888, i40 %add_ln703" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 384 'select' 'select_ln388_8' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.07> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_68 : Operation 385 [1/1] (1.07ns) (out node of the LUT)   --->   "%select_ln340_18 = select i1 %or_ln340_21, i40 %select_ln340_8, i40 %select_ln388_8" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 385 'select' 'select_ln340_18' <Predicate = true> <Delay = 1.07> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.07> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_68 : Operation 386 [1/1] (0.00ns) (grouped into LUT with out node and_ln785_1)   --->   "%or_ln785_6 = or i1 %tmp_51, %icmp_ln785_1" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 386 'or' 'or_ln785_6' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 387 [1/1] (0.00ns) (grouped into LUT with out node and_ln785_1)   --->   "%xor_ln785_11 = xor i1 %tmp_50, true" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 387 'xor' 'xor_ln785_11' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 388 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln785_1 = and i1 %or_ln785_6, %xor_ln785_11" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 388 'and' 'and_ln785_1' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 389 [1/1] (0.00ns) (grouped into LUT with out node and_ln786_12)   --->   "%xor_ln786_9 = xor i1 %tmp_51, true" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 389 'xor' 'xor_ln786_9' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 390 [1/1] (0.00ns) (grouped into LUT with out node and_ln786_12)   --->   "%or_ln786_1 = or i1 %icmp_ln786_1, %xor_ln786_9" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 390 'or' 'or_ln786_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 391 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln786_12 = and i1 %or_ln786_1, %tmp_50" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 391 'and' 'and_ln786_12' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 392 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_9)   --->   "%or_ln340_22 = or i1 %and_ln786_12, %and_ln785_1" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 392 'or' 'or_ln340_22' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 393 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_19)   --->   "%xor_ln340_6 = xor i1 %and_ln786_12, true" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 393 'xor' 'xor_ln340_6' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 394 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_19)   --->   "%or_ln340_23 = or i1 %and_ln785_1, %xor_ln340_6" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 394 'or' 'or_ln340_23' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 395 [1/1] (1.07ns) (out node of the LUT)   --->   "%select_ln340_9 = select i1 %or_ln340_22, i40 549755813887, i40 %add_ln703_1" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 395 'select' 'select_ln340_9' <Predicate = true> <Delay = 1.07> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.07> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_68 : Operation 396 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_19)   --->   "%select_ln388_9 = select i1 %and_ln786_12, i40 -549755813888, i40 %add_ln703_1" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 396 'select' 'select_ln388_9' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.07> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_68 : Operation 397 [1/1] (1.07ns) (out node of the LUT)   --->   "%select_ln340_19 = select i1 %or_ln340_23, i40 %select_ln340_9, i40 %select_ln388_9" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 397 'select' 'select_ln340_19' <Predicate = true> <Delay = 1.07> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.07> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_68 : Operation 398 [1/1] (0.00ns) (grouped into LUT with out node and_ln785_2)   --->   "%or_ln785_7 = or i1 %tmp_53, %icmp_ln785_2" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 398 'or' 'or_ln785_7' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 399 [1/1] (0.00ns) (grouped into LUT with out node and_ln785_2)   --->   "%xor_ln785_12 = xor i1 %tmp_52, true" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 399 'xor' 'xor_ln785_12' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 400 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln785_2 = and i1 %or_ln785_7, %xor_ln785_12" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 400 'and' 'and_ln785_2' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 401 [1/1] (0.00ns) (grouped into LUT with out node and_ln786_13)   --->   "%xor_ln786_10 = xor i1 %tmp_53, true" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 401 'xor' 'xor_ln786_10' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 402 [1/1] (0.00ns) (grouped into LUT with out node and_ln786_13)   --->   "%or_ln786_2 = or i1 %icmp_ln786_2, %xor_ln786_10" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 402 'or' 'or_ln786_2' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 403 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln786_13 = and i1 %or_ln786_2, %tmp_52" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 403 'and' 'and_ln786_13' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 404 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_10)   --->   "%or_ln340_24 = or i1 %and_ln786_13, %and_ln785_2" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 404 'or' 'or_ln340_24' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 405 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_20)   --->   "%xor_ln340_7 = xor i1 %and_ln786_13, true" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 405 'xor' 'xor_ln340_7' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 406 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_20)   --->   "%or_ln340_25 = or i1 %and_ln785_2, %xor_ln340_7" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 406 'or' 'or_ln340_25' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 407 [1/1] (1.07ns) (out node of the LUT)   --->   "%select_ln340_10 = select i1 %or_ln340_24, i40 549755813887, i40 %add_ln703_2" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 407 'select' 'select_ln340_10' <Predicate = true> <Delay = 1.07> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.07> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_68 : Operation 408 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_20)   --->   "%select_ln388_10 = select i1 %and_ln786_13, i40 -549755813888, i40 %add_ln703_2" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 408 'select' 'select_ln388_10' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.07> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_68 : Operation 409 [1/1] (1.07ns) (out node of the LUT)   --->   "%select_ln340_20 = select i1 %or_ln340_25, i40 %select_ln340_10, i40 %select_ln388_10" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 409 'select' 'select_ln340_20' <Predicate = true> <Delay = 1.07> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.07> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_68 : Operation 410 [1/1] (0.00ns) (grouped into LUT with out node and_ln785_3)   --->   "%or_ln785_8 = or i1 %tmp_55, %icmp_ln785_3" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 410 'or' 'or_ln785_8' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 411 [1/1] (0.00ns) (grouped into LUT with out node and_ln785_3)   --->   "%xor_ln785_13 = xor i1 %tmp_54, true" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 411 'xor' 'xor_ln785_13' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 412 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln785_3 = and i1 %or_ln785_8, %xor_ln785_13" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 412 'and' 'and_ln785_3' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 413 [1/1] (0.00ns) (grouped into LUT with out node and_ln786_14)   --->   "%xor_ln786_11 = xor i1 %tmp_55, true" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 413 'xor' 'xor_ln786_11' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 414 [1/1] (0.00ns) (grouped into LUT with out node and_ln786_14)   --->   "%or_ln786_3 = or i1 %icmp_ln786_3, %xor_ln786_11" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 414 'or' 'or_ln786_3' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 415 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln786_14 = and i1 %or_ln786_3, %tmp_54" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 415 'and' 'and_ln786_14' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 416 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_11)   --->   "%or_ln340_26 = or i1 %and_ln786_14, %and_ln785_3" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 416 'or' 'or_ln340_26' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 417 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_21)   --->   "%xor_ln340_8 = xor i1 %and_ln786_14, true" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 417 'xor' 'xor_ln340_8' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 418 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_21)   --->   "%or_ln340_27 = or i1 %and_ln785_3, %xor_ln340_8" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 418 'or' 'or_ln340_27' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 419 [1/1] (1.07ns) (out node of the LUT)   --->   "%select_ln340_11 = select i1 %or_ln340_26, i40 549755813887, i40 %add_ln703_3" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 419 'select' 'select_ln340_11' <Predicate = true> <Delay = 1.07> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.07> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_68 : Operation 420 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_21)   --->   "%select_ln388_11 = select i1 %and_ln786_14, i40 -549755813888, i40 %add_ln703_3" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 420 'select' 'select_ln388_11' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.07> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_68 : Operation 421 [1/1] (1.07ns) (out node of the LUT)   --->   "%select_ln340_21 = select i1 %or_ln340_27, i40 %select_ln340_11, i40 %select_ln388_11" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 421 'select' 'select_ln340_21' <Predicate = true> <Delay = 1.07> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.07> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_68 : Operation 422 [1/1] (0.00ns) (grouped into LUT with out node and_ln785_4)   --->   "%or_ln785_9 = or i1 %tmp_57, %icmp_ln785_4" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 422 'or' 'or_ln785_9' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 423 [1/1] (0.00ns) (grouped into LUT with out node and_ln785_4)   --->   "%xor_ln785_14 = xor i1 %tmp_56, true" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 423 'xor' 'xor_ln785_14' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 424 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln785_4 = and i1 %or_ln785_9, %xor_ln785_14" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 424 'and' 'and_ln785_4' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 425 [1/1] (0.00ns) (grouped into LUT with out node and_ln786_15)   --->   "%xor_ln786_12 = xor i1 %tmp_57, true" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 425 'xor' 'xor_ln786_12' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 426 [1/1] (0.00ns) (grouped into LUT with out node and_ln786_15)   --->   "%or_ln786_4 = or i1 %icmp_ln786_4, %xor_ln786_12" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 426 'or' 'or_ln786_4' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 427 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln786_15 = and i1 %or_ln786_4, %tmp_56" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 427 'and' 'and_ln786_15' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 428 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_12)   --->   "%or_ln340_28 = or i1 %and_ln786_15, %and_ln785_4" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 428 'or' 'or_ln340_28' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 429 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_22)   --->   "%xor_ln340_9 = xor i1 %and_ln786_15, true" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 429 'xor' 'xor_ln340_9' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 430 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_22)   --->   "%or_ln340_29 = or i1 %and_ln785_4, %xor_ln340_9" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 430 'or' 'or_ln340_29' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 431 [1/1] (1.07ns) (out node of the LUT)   --->   "%select_ln340_12 = select i1 %or_ln340_28, i40 549755813887, i40 %add_ln703_4" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 431 'select' 'select_ln340_12' <Predicate = true> <Delay = 1.07> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.07> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_68 : Operation 432 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_22)   --->   "%select_ln388_12 = select i1 %and_ln786_15, i40 -549755813888, i40 %add_ln703_4" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 432 'select' 'select_ln388_12' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.07> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_68 : Operation 433 [1/1] (1.07ns) (out node of the LUT)   --->   "%select_ln340_22 = select i1 %or_ln340_29, i40 %select_ln340_12, i40 %select_ln388_12" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 433 'select' 'select_ln340_22' <Predicate = true> <Delay = 1.07> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.07> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_68 : Operation 434 [1/1] (0.00ns) (grouped into LUT with out node and_ln785_5)   --->   "%or_ln785_10 = or i1 %tmp_59, %icmp_ln785_5" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 434 'or' 'or_ln785_10' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 435 [1/1] (0.00ns) (grouped into LUT with out node and_ln785_5)   --->   "%xor_ln785_15 = xor i1 %tmp_58, true" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 435 'xor' 'xor_ln785_15' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 436 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln785_5 = and i1 %or_ln785_10, %xor_ln785_15" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 436 'and' 'and_ln785_5' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 437 [1/1] (0.00ns) (grouped into LUT with out node and_ln786_16)   --->   "%xor_ln786_13 = xor i1 %tmp_59, true" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 437 'xor' 'xor_ln786_13' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 438 [1/1] (0.00ns) (grouped into LUT with out node and_ln786_16)   --->   "%or_ln786_5 = or i1 %icmp_ln786_5, %xor_ln786_13" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 438 'or' 'or_ln786_5' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 439 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln786_16 = and i1 %or_ln786_5, %tmp_58" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 439 'and' 'and_ln786_16' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 440 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_13)   --->   "%or_ln340_30 = or i1 %and_ln786_16, %and_ln785_5" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 440 'or' 'or_ln340_30' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 441 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_23)   --->   "%xor_ln340_10 = xor i1 %and_ln786_16, true" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 441 'xor' 'xor_ln340_10' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 442 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_23)   --->   "%or_ln340_31 = or i1 %and_ln785_5, %xor_ln340_10" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 442 'or' 'or_ln340_31' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 443 [1/1] (1.07ns) (out node of the LUT)   --->   "%select_ln340_13 = select i1 %or_ln340_30, i40 549755813887, i40 %add_ln703_5" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 443 'select' 'select_ln340_13' <Predicate = true> <Delay = 1.07> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.07> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_68 : Operation 444 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_23)   --->   "%select_ln388_13 = select i1 %and_ln786_16, i40 -549755813888, i40 %add_ln703_5" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 444 'select' 'select_ln388_13' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.07> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_68 : Operation 445 [1/1] (1.07ns) (out node of the LUT)   --->   "%select_ln340_23 = select i1 %or_ln340_31, i40 %select_ln340_13, i40 %select_ln388_13" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 445 'select' 'select_ln340_23' <Predicate = true> <Delay = 1.07> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.07> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_68 : Operation 446 [1/1] (0.00ns) (grouped into LUT with out node and_ln785_6)   --->   "%or_ln785_11 = or i1 %tmp_61, %icmp_ln785_6" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 446 'or' 'or_ln785_11' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 447 [1/1] (0.00ns) (grouped into LUT with out node and_ln785_6)   --->   "%xor_ln785_16 = xor i1 %tmp_60, true" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 447 'xor' 'xor_ln785_16' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 448 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln785_6 = and i1 %or_ln785_11, %xor_ln785_16" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 448 'and' 'and_ln785_6' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 449 [1/1] (0.00ns) (grouped into LUT with out node and_ln786_17)   --->   "%xor_ln786_14 = xor i1 %tmp_61, true" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 449 'xor' 'xor_ln786_14' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 450 [1/1] (0.00ns) (grouped into LUT with out node and_ln786_17)   --->   "%or_ln786_6 = or i1 %icmp_ln786_6, %xor_ln786_14" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 450 'or' 'or_ln786_6' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 451 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln786_17 = and i1 %or_ln786_6, %tmp_60" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 451 'and' 'and_ln786_17' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 452 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_14)   --->   "%or_ln340_32 = or i1 %and_ln786_17, %and_ln785_6" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 452 'or' 'or_ln340_32' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 453 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_24)   --->   "%xor_ln340_11 = xor i1 %and_ln786_17, true" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 453 'xor' 'xor_ln340_11' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 454 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_24)   --->   "%or_ln340_33 = or i1 %and_ln785_6, %xor_ln340_11" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 454 'or' 'or_ln340_33' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 455 [1/1] (1.07ns) (out node of the LUT)   --->   "%select_ln340_14 = select i1 %or_ln340_32, i40 549755813887, i40 %add_ln703_6" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 455 'select' 'select_ln340_14' <Predicate = true> <Delay = 1.07> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.07> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_68 : Operation 456 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_24)   --->   "%select_ln388_14 = select i1 %and_ln786_17, i40 -549755813888, i40 %add_ln703_6" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 456 'select' 'select_ln388_14' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.07> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_68 : Operation 457 [1/1] (1.07ns) (out node of the LUT)   --->   "%select_ln340_24 = select i1 %or_ln340_33, i40 %select_ln340_14, i40 %select_ln388_14" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 457 'select' 'select_ln340_24' <Predicate = true> <Delay = 1.07> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.07> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_68 : Operation 458 [1/1] (0.00ns) (grouped into LUT with out node and_ln785_7)   --->   "%or_ln785_12 = or i1 %tmp_63, %icmp_ln785_7" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 458 'or' 'or_ln785_12' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 459 [1/1] (0.00ns) (grouped into LUT with out node and_ln785_7)   --->   "%xor_ln785_17 = xor i1 %tmp_62, true" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 459 'xor' 'xor_ln785_17' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 460 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln785_7 = and i1 %or_ln785_12, %xor_ln785_17" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 460 'and' 'and_ln785_7' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 461 [1/1] (0.00ns) (grouped into LUT with out node and_ln786_18)   --->   "%xor_ln786_15 = xor i1 %tmp_63, true" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 461 'xor' 'xor_ln786_15' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 462 [1/1] (0.00ns) (grouped into LUT with out node and_ln786_18)   --->   "%or_ln786_7 = or i1 %icmp_ln786_7, %xor_ln786_15" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 462 'or' 'or_ln786_7' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 463 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln786_18 = and i1 %or_ln786_7, %tmp_62" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 463 'and' 'and_ln786_18' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 464 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_15)   --->   "%or_ln340_34 = or i1 %and_ln786_18, %and_ln785_7" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 464 'or' 'or_ln340_34' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 465 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_25)   --->   "%xor_ln340_12 = xor i1 %and_ln786_18, true" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 465 'xor' 'xor_ln340_12' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 466 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_25)   --->   "%or_ln340_35 = or i1 %and_ln785_7, %xor_ln340_12" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 466 'or' 'or_ln340_35' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_68 : Operation 467 [1/1] (1.07ns) (out node of the LUT)   --->   "%select_ln340_15 = select i1 %or_ln340_34, i40 549755813887, i40 %add_ln703_7" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 467 'select' 'select_ln340_15' <Predicate = true> <Delay = 1.07> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.07> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_68 : Operation 468 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_25)   --->   "%select_ln388_15 = select i1 %and_ln786_18, i40 -549755813888, i40 %add_ln703_7" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 468 'select' 'select_ln388_15' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.07> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_68 : Operation 469 [1/1] (1.07ns) (out node of the LUT)   --->   "%select_ln340_25 = select i1 %or_ln340_35, i40 %select_ln340_15, i40 %select_ln388_15" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 469 'select' 'select_ln340_25' <Predicate = true> <Delay = 1.07> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.07> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 69 <SV = 68> <Delay = 5.25>
ST_69 : Operation 470 [2/2] (5.25ns)   --->   "%tmp2 = call fastcc i16 @mandel_calc(i40 %select_ln340_18, i40 %p_Val2_30, i16 %maxIter_read)" [mandelbrotHLS/mandel.cpp:89]   --->   Operation 470 'call' 'tmp2' <Predicate = true> <Delay = 5.25> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_69 : Operation 471 [2/2] (5.25ns)   --->   "%tmp_1 = call fastcc i16 @mandel_calc(i40 %select_ln340_19, i40 %p_Val2_30, i16 %maxIter_read)" [mandelbrotHLS/mandel.cpp:89]   --->   Operation 471 'call' 'tmp_1' <Predicate = true> <Delay = 5.25> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_69 : Operation 472 [2/2] (5.25ns)   --->   "%tmp_2 = call fastcc i16 @mandel_calc(i40 %select_ln340_20, i40 %p_Val2_30, i16 %maxIter_read)" [mandelbrotHLS/mandel.cpp:89]   --->   Operation 472 'call' 'tmp_2' <Predicate = true> <Delay = 5.25> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_69 : Operation 473 [2/2] (5.25ns)   --->   "%tmp_3 = call fastcc i16 @mandel_calc(i40 %select_ln340_21, i40 %p_Val2_30, i16 %maxIter_read)" [mandelbrotHLS/mandel.cpp:89]   --->   Operation 473 'call' 'tmp_3' <Predicate = true> <Delay = 5.25> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_69 : Operation 474 [2/2] (5.25ns)   --->   "%tmp_4 = call fastcc i16 @mandel_calc(i40 %select_ln340_22, i40 %p_Val2_30, i16 %maxIter_read)" [mandelbrotHLS/mandel.cpp:89]   --->   Operation 474 'call' 'tmp_4' <Predicate = true> <Delay = 5.25> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_69 : Operation 475 [2/2] (5.25ns)   --->   "%tmp_5 = call fastcc i16 @mandel_calc(i40 %select_ln340_23, i40 %p_Val2_30, i16 %maxIter_read)" [mandelbrotHLS/mandel.cpp:89]   --->   Operation 475 'call' 'tmp_5' <Predicate = true> <Delay = 5.25> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_69 : Operation 476 [2/2] (5.25ns)   --->   "%tmp_6 = call fastcc i16 @mandel_calc(i40 %select_ln340_24, i40 %p_Val2_30, i16 %maxIter_read)" [mandelbrotHLS/mandel.cpp:89]   --->   Operation 476 'call' 'tmp_6' <Predicate = true> <Delay = 5.25> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_69 : Operation 477 [2/2] (5.25ns)   --->   "%tmp_7 = call fastcc i16 @mandel_calc(i40 %select_ln340_25, i40 %p_Val2_30, i16 %maxIter_read)" [mandelbrotHLS/mandel.cpp:89]   --->   Operation 477 'call' 'tmp_7' <Predicate = true> <Delay = 5.25> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 70 <SV = 69> <Delay = 5.25>
ST_70 : Operation 478 [1/2] (3.32ns)   --->   "%tmp2 = call fastcc i16 @mandel_calc(i40 %select_ln340_18, i40 %p_Val2_30, i16 %maxIter_read)" [mandelbrotHLS/mandel.cpp:89]   --->   Operation 478 'call' 'tmp2' <Predicate = true> <Delay = 3.32> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_70 : Operation 479 [1/1] (5.25ns)   --->   "%buf_addr_req = call i1 @_ssdm_op_WriteReq.m_axi.i16P(i16* %buf_addr, i32 8)" [mandelbrotHLS/mandel.cpp:89]   --->   Operation 479 'writereq' 'buf_addr_req' <Predicate = true> <Delay = 5.25> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_70 : Operation 480 [1/2] (3.32ns)   --->   "%tmp_1 = call fastcc i16 @mandel_calc(i40 %select_ln340_19, i40 %p_Val2_30, i16 %maxIter_read)" [mandelbrotHLS/mandel.cpp:89]   --->   Operation 480 'call' 'tmp_1' <Predicate = true> <Delay = 3.32> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_70 : Operation 481 [1/2] (3.32ns)   --->   "%tmp_2 = call fastcc i16 @mandel_calc(i40 %select_ln340_20, i40 %p_Val2_30, i16 %maxIter_read)" [mandelbrotHLS/mandel.cpp:89]   --->   Operation 481 'call' 'tmp_2' <Predicate = true> <Delay = 3.32> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_70 : Operation 482 [1/2] (3.32ns)   --->   "%tmp_3 = call fastcc i16 @mandel_calc(i40 %select_ln340_21, i40 %p_Val2_30, i16 %maxIter_read)" [mandelbrotHLS/mandel.cpp:89]   --->   Operation 482 'call' 'tmp_3' <Predicate = true> <Delay = 3.32> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_70 : Operation 483 [1/2] (3.32ns)   --->   "%tmp_4 = call fastcc i16 @mandel_calc(i40 %select_ln340_22, i40 %p_Val2_30, i16 %maxIter_read)" [mandelbrotHLS/mandel.cpp:89]   --->   Operation 483 'call' 'tmp_4' <Predicate = true> <Delay = 3.32> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_70 : Operation 484 [1/2] (3.32ns)   --->   "%tmp_5 = call fastcc i16 @mandel_calc(i40 %select_ln340_23, i40 %p_Val2_30, i16 %maxIter_read)" [mandelbrotHLS/mandel.cpp:89]   --->   Operation 484 'call' 'tmp_5' <Predicate = true> <Delay = 3.32> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_70 : Operation 485 [1/2] (3.32ns)   --->   "%tmp_6 = call fastcc i16 @mandel_calc(i40 %select_ln340_24, i40 %p_Val2_30, i16 %maxIter_read)" [mandelbrotHLS/mandel.cpp:89]   --->   Operation 485 'call' 'tmp_6' <Predicate = true> <Delay = 3.32> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_70 : Operation 486 [1/2] (3.32ns)   --->   "%tmp_7 = call fastcc i16 @mandel_calc(i40 %select_ln340_25, i40 %p_Val2_30, i16 %maxIter_read)" [mandelbrotHLS/mandel.cpp:89]   --->   Operation 486 'call' 'tmp_7' <Predicate = true> <Delay = 3.32> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 71 <SV = 70> <Delay = 5.25>
ST_71 : Operation 487 [1/1] (5.25ns)   --->   "call void @_ssdm_op_Write.m_axi.i16P(i16* %buf_addr, i16 %tmp2, i2 -1)" [mandelbrotHLS/mandel.cpp:89]   --->   Operation 487 'write' <Predicate = true> <Delay = 5.25> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 72 <SV = 71> <Delay = 5.25>
ST_72 : Operation 488 [1/1] (5.25ns)   --->   "call void @_ssdm_op_Write.m_axi.i16P(i16* %buf_addr, i16 %tmp_1, i2 -1)" [mandelbrotHLS/mandel.cpp:89]   --->   Operation 488 'write' <Predicate = true> <Delay = 5.25> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 73 <SV = 72> <Delay = 5.25>
ST_73 : Operation 489 [1/1] (5.25ns)   --->   "call void @_ssdm_op_Write.m_axi.i16P(i16* %buf_addr, i16 %tmp_2, i2 -1)" [mandelbrotHLS/mandel.cpp:89]   --->   Operation 489 'write' <Predicate = true> <Delay = 5.25> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 74 <SV = 73> <Delay = 5.25>
ST_74 : Operation 490 [1/1] (5.25ns)   --->   "call void @_ssdm_op_Write.m_axi.i16P(i16* %buf_addr, i16 %tmp_3, i2 -1)" [mandelbrotHLS/mandel.cpp:89]   --->   Operation 490 'write' <Predicate = true> <Delay = 5.25> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 75 <SV = 74> <Delay = 5.25>
ST_75 : Operation 491 [1/1] (5.25ns)   --->   "call void @_ssdm_op_Write.m_axi.i16P(i16* %buf_addr, i16 %tmp_4, i2 -1)" [mandelbrotHLS/mandel.cpp:89]   --->   Operation 491 'write' <Predicate = true> <Delay = 5.25> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 76 <SV = 75> <Delay = 5.25>
ST_76 : Operation 492 [1/1] (5.25ns)   --->   "call void @_ssdm_op_Write.m_axi.i16P(i16* %buf_addr, i16 %tmp_5, i2 -1)" [mandelbrotHLS/mandel.cpp:89]   --->   Operation 492 'write' <Predicate = true> <Delay = 5.25> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 77 <SV = 76> <Delay = 5.25>
ST_77 : Operation 493 [1/1] (5.25ns)   --->   "call void @_ssdm_op_Write.m_axi.i16P(i16* %buf_addr, i16 %tmp_6, i2 -1)" [mandelbrotHLS/mandel.cpp:89]   --->   Operation 493 'write' <Predicate = true> <Delay = 5.25> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 78 <SV = 77> <Delay = 5.25>
ST_78 : Operation 494 [1/1] (5.25ns)   --->   "call void @_ssdm_op_Write.m_axi.i16P(i16* %buf_addr, i16 %tmp_7, i2 -1)" [mandelbrotHLS/mandel.cpp:89]   --->   Operation 494 'write' <Predicate = true> <Delay = 5.25> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 79 <SV = 78> <Delay = 5.25>
ST_79 : Operation 495 [5/5] (5.25ns)   --->   "%buf_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i16P(i16* %buf_addr)" [mandelbrotHLS/mandel.cpp:89]   --->   Operation 495 'writeresp' 'buf_addr_resp' <Predicate = true> <Delay = 5.25> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 80 <SV = 79> <Delay = 5.25>
ST_80 : Operation 496 [4/5] (5.25ns)   --->   "%buf_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i16P(i16* %buf_addr)" [mandelbrotHLS/mandel.cpp:89]   --->   Operation 496 'writeresp' 'buf_addr_resp' <Predicate = true> <Delay = 5.25> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 81 <SV = 80> <Delay = 5.25>
ST_81 : Operation 497 [3/5] (5.25ns)   --->   "%buf_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i16P(i16* %buf_addr)" [mandelbrotHLS/mandel.cpp:89]   --->   Operation 497 'writeresp' 'buf_addr_resp' <Predicate = true> <Delay = 5.25> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 82 <SV = 81> <Delay = 5.25>
ST_82 : Operation 498 [2/5] (5.25ns)   --->   "%buf_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i16P(i16* %buf_addr)" [mandelbrotHLS/mandel.cpp:89]   --->   Operation 498 'writeresp' 'buf_addr_resp' <Predicate = true> <Delay = 5.25> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 83 <SV = 82> <Delay = 5.25>
ST_83 : Operation 499 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([6 x i8]* @p_str9) nounwind" [mandelbrotHLS/mandel.cpp:83]   --->   Operation 499 'specloopname' <Predicate = true> <Delay = 0.00>
ST_83 : Operation 500 [1/5] (5.25ns)   --->   "%buf_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i16P(i16* %buf_addr)" [mandelbrotHLS/mandel.cpp:89]   --->   Operation 500 'writeresp' 'buf_addr_resp' <Predicate = true> <Delay = 5.25> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_83 : Operation 501 [1/1] (0.00ns)   --->   "br label %2" [mandelbrotHLS/mandel.cpp:83]   --->   Operation 501 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 6ns, clock uncertainty: 0.75ns.

 <State 1>: 3.88ns
The critical path consists of the following:
	s_axi read on port 'X1_V' [17]  (1 ns)
	'sub' operation ('ret.V', mandelbrotHLS/mandel.cpp:60) [51]  (2.88 ns)

 <State 2>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:60) [53]  (4.41 ns)

 <State 3>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:60) [53]  (4.41 ns)

 <State 4>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:60) [53]  (4.41 ns)

 <State 5>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:60) [53]  (4.41 ns)

 <State 6>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:60) [53]  (4.41 ns)

 <State 7>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:60) [53]  (4.41 ns)

 <State 8>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:60) [53]  (4.41 ns)

 <State 9>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:60) [53]  (4.41 ns)

 <State 10>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:60) [53]  (4.41 ns)

 <State 11>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:60) [53]  (4.41 ns)

 <State 12>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:60) [53]  (4.41 ns)

 <State 13>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:60) [53]  (4.41 ns)

 <State 14>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:60) [53]  (4.41 ns)

 <State 15>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:60) [53]  (4.41 ns)

 <State 16>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:60) [53]  (4.41 ns)

 <State 17>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:60) [53]  (4.41 ns)

 <State 18>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:60) [53]  (4.41 ns)

 <State 19>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:60) [53]  (4.41 ns)

 <State 20>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:60) [53]  (4.41 ns)

 <State 21>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:60) [53]  (4.41 ns)

 <State 22>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:60) [53]  (4.41 ns)

 <State 23>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:60) [53]  (4.41 ns)

 <State 24>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:60) [53]  (4.41 ns)

 <State 25>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:60) [53]  (4.41 ns)

 <State 26>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:60) [53]  (4.41 ns)

 <State 27>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:60) [53]  (4.41 ns)

 <State 28>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:60) [53]  (4.41 ns)

 <State 29>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:60) [53]  (4.41 ns)

 <State 30>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:60) [53]  (4.41 ns)

 <State 31>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:60) [53]  (4.41 ns)

 <State 32>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:60) [53]  (4.41 ns)

 <State 33>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:60) [53]  (4.41 ns)

 <State 34>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:60) [53]  (4.41 ns)

 <State 35>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:60) [53]  (4.41 ns)

 <State 36>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:60) [53]  (4.41 ns)

 <State 37>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:60) [53]  (4.41 ns)

 <State 38>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:60) [53]  (4.41 ns)

 <State 39>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:60) [53]  (4.41 ns)

 <State 40>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:60) [53]  (4.41 ns)

 <State 41>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:60) [53]  (4.41 ns)

 <State 42>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:60) [53]  (4.41 ns)

 <State 43>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:60) [53]  (4.41 ns)

 <State 44>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:60) [53]  (4.41 ns)

 <State 45>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:60) [53]  (4.41 ns)

 <State 46>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:60) [53]  (4.41 ns)

 <State 47>: 5.25ns
The critical path consists of the following:
	wire read on port 'LEDControl' [14]  (0 ns)
	'getelementptr' operation ('gmem_addr_1') [26]  (0 ns)
	bus request on port 'gmem' (mandelbrotHLS/mandel.cpp:77) [69]  (5.25 ns)

 <State 48>: 5.25ns
The critical path consists of the following:
	bus write on port 'gmem' (mandelbrotHLS/mandel.cpp:77) [70]  (5.25 ns)

 <State 49>: 5.25ns
The critical path consists of the following:
	bus access on port 'gmem' (mandelbrotHLS/mandel.cpp:77) [71]  (5.25 ns)

 <State 50>: 5.25ns
The critical path consists of the following:
	bus access on port 'gmem' (mandelbrotHLS/mandel.cpp:77) [71]  (5.25 ns)

 <State 51>: 5.25ns
The critical path consists of the following:
	bus access on port 'gmem' (mandelbrotHLS/mandel.cpp:77) [71]  (5.25 ns)

 <State 52>: 5.25ns
The critical path consists of the following:
	bus access on port 'gmem' (mandelbrotHLS/mandel.cpp:77) [71]  (5.25 ns)

 <State 53>: 5.25ns
The critical path consists of the following:
	bus access on port 'gmem' (mandelbrotHLS/mandel.cpp:77) [71]  (5.25 ns)

 <State 54>: 5.25ns
The critical path consists of the following:
	bus request on port 'gmem' (mandelbrotHLS/mandel.cpp:82) [94]  (5.25 ns)

 <State 55>: 5.25ns
The critical path consists of the following:
	bus write on port 'gmem' (mandelbrotHLS/mandel.cpp:82) [95]  (5.25 ns)

 <State 56>: 5.25ns
The critical path consists of the following:
	bus access on port 'gmem' (mandelbrotHLS/mandel.cpp:82) [96]  (5.25 ns)

 <State 57>: 5.25ns
The critical path consists of the following:
	bus access on port 'gmem' (mandelbrotHLS/mandel.cpp:82) [96]  (5.25 ns)

 <State 58>: 5.25ns
The critical path consists of the following:
	bus access on port 'gmem' (mandelbrotHLS/mandel.cpp:82) [96]  (5.25 ns)

 <State 59>: 5.25ns
The critical path consists of the following:
	bus access on port 'gmem' (mandelbrotHLS/mandel.cpp:82) [96]  (5.25 ns)

 <State 60>: 5.25ns
The critical path consists of the following:
	bus access on port 'gmem' (mandelbrotHLS/mandel.cpp:82) [96]  (5.25 ns)

 <State 61>: 5.03ns
The critical path consists of the following:
	'sub' operation ('ret.V', mandelbrotHLS/mandel.cpp:94) [315]  (2.88 ns)
	'and' operation ('underflow', mandelbrotHLS/mandel.cpp:94) [320]  (0 ns)
	'select' operation ('select_ln388_7', mandelbrotHLS/mandel.cpp:94) [325]  (1.07 ns)
	'select' operation ('select_ln340_17', mandelbrotHLS/mandel.cpp:94) [326]  (1.07 ns)

 <State 62>: 3.9ns
The critical path consists of the following:
	'mul' operation ('mul_ln1118', mandelbrotHLS/mandel.cpp:85) [108]  (3.9 ns)

 <State 63>: 3.9ns
The critical path consists of the following:
	'mul' operation ('mul_ln1118', mandelbrotHLS/mandel.cpp:85) [108]  (3.9 ns)

 <State 64>: 3.9ns
The critical path consists of the following:
	'mul' operation ('mul_ln1118', mandelbrotHLS/mandel.cpp:85) [108]  (3.9 ns)

 <State 65>: 3.9ns
The critical path consists of the following:
	'mul' operation ('mul_ln1118', mandelbrotHLS/mandel.cpp:85) [108]  (3.9 ns)

 <State 66>: 3.9ns
The critical path consists of the following:
	'mul' operation ('mul_ln1118', mandelbrotHLS/mandel.cpp:85) [108]  (3.9 ns)

 <State 67>: 5.17ns
The critical path consists of the following:
	'add' operation ('add_ln1192', mandelbrotHLS/mandel.cpp:85) [110]  (3.25 ns)
	'icmp' operation ('icmp_ln785', mandelbrotHLS/mandel.cpp:85) [115]  (1.93 ns)

 <State 68>: 3.13ns
The critical path consists of the following:
	'or' operation ('or_ln785', mandelbrotHLS/mandel.cpp:85) [116]  (0 ns)
	'and' operation ('and_ln785', mandelbrotHLS/mandel.cpp:85) [118]  (0.978 ns)
	'or' operation ('or_ln340_20', mandelbrotHLS/mandel.cpp:85) [123]  (0 ns)
	'select' operation ('select_ln340_8', mandelbrotHLS/mandel.cpp:85) [126]  (1.07 ns)
	'select' operation ('select_ln340_18', mandelbrotHLS/mandel.cpp:85) [128]  (1.07 ns)

 <State 69>: 5.25ns
The critical path consists of the following:
	'call' operation ('tmp2', mandelbrotHLS/mandel.cpp:89) to 'mandel_calc' [129]  (5.25 ns)

 <State 70>: 5.25ns
The critical path consists of the following:
	bus request on port 'buf_r' (mandelbrotHLS/mandel.cpp:89) [132]  (5.25 ns)

 <State 71>: 5.25ns
The critical path consists of the following:
	bus write on port 'buf_r' (mandelbrotHLS/mandel.cpp:89) [133]  (5.25 ns)

 <State 72>: 5.25ns
The critical path consists of the following:
	bus write on port 'buf_r' (mandelbrotHLS/mandel.cpp:89) [158]  (5.25 ns)

 <State 73>: 5.25ns
The critical path consists of the following:
	bus write on port 'buf_r' (mandelbrotHLS/mandel.cpp:89) [183]  (5.25 ns)

 <State 74>: 5.25ns
The critical path consists of the following:
	bus write on port 'buf_r' (mandelbrotHLS/mandel.cpp:89) [208]  (5.25 ns)

 <State 75>: 5.25ns
The critical path consists of the following:
	bus write on port 'buf_r' (mandelbrotHLS/mandel.cpp:89) [233]  (5.25 ns)

 <State 76>: 5.25ns
The critical path consists of the following:
	bus write on port 'buf_r' (mandelbrotHLS/mandel.cpp:89) [258]  (5.25 ns)

 <State 77>: 5.25ns
The critical path consists of the following:
	bus write on port 'buf_r' (mandelbrotHLS/mandel.cpp:89) [283]  (5.25 ns)

 <State 78>: 5.25ns
The critical path consists of the following:
	bus write on port 'buf_r' (mandelbrotHLS/mandel.cpp:89) [309]  (5.25 ns)

 <State 79>: 5.25ns
The critical path consists of the following:
	bus access on port 'buf_r' (mandelbrotHLS/mandel.cpp:89) [310]  (5.25 ns)

 <State 80>: 5.25ns
The critical path consists of the following:
	bus access on port 'buf_r' (mandelbrotHLS/mandel.cpp:89) [310]  (5.25 ns)

 <State 81>: 5.25ns
The critical path consists of the following:
	bus access on port 'buf_r' (mandelbrotHLS/mandel.cpp:89) [310]  (5.25 ns)

 <State 82>: 5.25ns
The critical path consists of the following:
	bus access on port 'buf_r' (mandelbrotHLS/mandel.cpp:89) [310]  (5.25 ns)

 <State 83>: 5.25ns
The critical path consists of the following:
	bus access on port 'buf_r' (mandelbrotHLS/mandel.cpp:89) [310]  (5.25 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55
	State 56
	State 57
	State 58
	State 59
	State 60
	State 61
	State 62
	State 63
	State 64
	State 65
	State 66
	State 67
	State 68
	State 69
	State 70
	State 71
	State 72
	State 73
	State 74
	State 75
	State 76
	State 77
	State 78
	State 79
	State 80
	State 81
	State 82
	State 83


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
