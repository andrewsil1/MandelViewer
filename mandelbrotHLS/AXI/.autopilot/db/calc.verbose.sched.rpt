

================================================================
== Vivado HLS Report for 'calc'
================================================================
* Date:           Sat Jun  8 21:35:35 2019

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        mandelbrotHLS
* Solution:       AXI
* Product family: artix7
* Target device:  xc7a100t-csg324-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   6.00|     5.250|        0.75|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-------------+-----+-------------+---------+
    |      Latency      |      Interval     | Pipeline|
    | min |     max     | min |     max     |   Type  |
    +-----+-------------+-----+-------------+---------+
    |   47|  14538012527|   47|  14538012527|   none  |
    +-----+-------------+-----+-------------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+---------+-------------+-----------------+-----------+-----------+------------+----------+
        |          |        Latency        |    Iteration    |  Initiation Interval  |    Trip    |          |
        | Loop Name|   min   |     max     |     Latency     |  achieved |   target  |    Count   | Pipelined|
        +----------+---------+-------------+-----------------+-----------+-----------+------------+----------+
        |- y_for   |  4425216|  14538012480| 5762 ~ 10095842 |          -|          -| 768 ~ 1440 |    no    |
        | + x_for  |     5760|     10095840|    45 ~ 42066   |          -|          -|  128 ~ 240 |    no    |
        +----------+---------+-------------+-----------------+-----------+-----------+------------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 71
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 27 
27 --> 28 
28 --> 29 
29 --> 30 
30 --> 31 
31 --> 32 
32 --> 33 
33 --> 34 
34 --> 35 
35 --> 36 
36 --> 37 
37 --> 38 
38 --> 39 
39 --> 40 
40 --> 41 
41 --> 42 
42 --> 43 
43 --> 44 
44 --> 45 
45 --> 46 
46 --> 47 
47 --> 48 
48 --> 49 
49 --> 50 48 
50 --> 51 
51 --> 52 
52 --> 53 
53 --> 54 
54 --> 55 
55 --> 56 
56 --> 57 
57 --> 58 
58 --> 59 
59 --> 60 
60 --> 61 
61 --> 62 
62 --> 63 
63 --> 64 
64 --> 65 
65 --> 66 
66 --> 67 
67 --> 68 
68 --> 69 
69 --> 70 
70 --> 71 
71 --> 49 

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.88>
ST_1 : Operation 72 [1/1] (1.00ns)   --->   "%maxIter_read = call i16 @_ssdm_op_Read.s_axilite.i16(i16 %maxIter)" [mandelbrotHLS/mandel.cpp:57]   --->   Operation 72 'read' 'maxIter_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 73 [1/1] (1.00ns)   --->   "%width_V_read = call i12 @_ssdm_op_Read.s_axilite.i12(i12 %width_V)" [mandelbrotHLS/mandel.cpp:57]   --->   Operation 73 'read' 'width_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 74 [1/1] (1.00ns)   --->   "%X1_V_read = call i40 @_ssdm_op_Read.s_axilite.i40(i40 %X1_V)" [mandelbrotHLS/mandel.cpp:57]   --->   Operation 74 'read' 'X1_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 75 [1/1] (1.00ns)   --->   "%Y0_V_read = call i40 @_ssdm_op_Read.s_axilite.i40(i40 %Y0_V)" [mandelbrotHLS/mandel.cpp:57]   --->   Operation 75 'read' 'Y0_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 76 [1/1] (1.00ns)   --->   "%X0_V_read = call i40 @_ssdm_op_Read.s_axilite.i40(i40 %X0_V)" [mandelbrotHLS/mandel.cpp:57]   --->   Operation 76 'read' 'X0_V_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 77 [1/1] (1.00ns)   --->   "%setup_read = call i1 @_ssdm_op_Read.s_axilite.i1(i1 %setup)" [mandelbrotHLS/mandel.cpp:57]   --->   Operation 77 'read' 'setup_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 78 [1/1] (0.00ns)   --->   "%lhs_V = sext i40 %X1_V_read to i41" [mandelbrotHLS/mandel.cpp:59]   --->   Operation 78 'sext' 'lhs_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 79 [1/1] (0.00ns)   --->   "%rhs_V = sext i40 %X0_V_read to i41" [mandelbrotHLS/mandel.cpp:59]   --->   Operation 79 'sext' 'rhs_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 80 [1/1] (2.88ns)   --->   "%ret_V = sub nsw i41 %lhs_V, %rhs_V" [mandelbrotHLS/mandel.cpp:59]   --->   Operation 80 'sub' 'ret_V' <Predicate = true> <Delay = 2.88> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 2 <SV = 1> <Delay = 4.40>
ST_2 : Operation 81 [1/1] (0.00ns)   --->   "%zext_ln1148 = zext i12 %width_V_read to i41" [mandelbrotHLS/mandel.cpp:59]   --->   Operation 81 'zext' 'zext_ln1148' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 82 [45/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:59]   --->   Operation 82 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 3 <SV = 2> <Delay = 4.40>
ST_3 : Operation 83 [44/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:59]   --->   Operation 83 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 4.40>
ST_4 : Operation 84 [43/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:59]   --->   Operation 84 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 4.40>
ST_5 : Operation 85 [42/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:59]   --->   Operation 85 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 4.40>
ST_6 : Operation 86 [41/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:59]   --->   Operation 86 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 4.40>
ST_7 : Operation 87 [40/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:59]   --->   Operation 87 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 4.40>
ST_8 : Operation 88 [39/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:59]   --->   Operation 88 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 4.40>
ST_9 : Operation 89 [38/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:59]   --->   Operation 89 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 10 <SV = 9> <Delay = 4.40>
ST_10 : Operation 90 [37/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:59]   --->   Operation 90 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 11 <SV = 10> <Delay = 4.40>
ST_11 : Operation 91 [36/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:59]   --->   Operation 91 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 12 <SV = 11> <Delay = 4.40>
ST_12 : Operation 92 [35/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:59]   --->   Operation 92 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 13 <SV = 12> <Delay = 4.40>
ST_13 : Operation 93 [34/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:59]   --->   Operation 93 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 14 <SV = 13> <Delay = 4.40>
ST_14 : Operation 94 [33/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:59]   --->   Operation 94 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 15 <SV = 14> <Delay = 4.40>
ST_15 : Operation 95 [32/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:59]   --->   Operation 95 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 16 <SV = 15> <Delay = 4.40>
ST_16 : Operation 96 [31/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:59]   --->   Operation 96 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 17 <SV = 16> <Delay = 4.40>
ST_17 : Operation 97 [30/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:59]   --->   Operation 97 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 18 <SV = 17> <Delay = 4.40>
ST_18 : Operation 98 [29/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:59]   --->   Operation 98 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 19 <SV = 18> <Delay = 4.40>
ST_19 : Operation 99 [28/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:59]   --->   Operation 99 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 20 <SV = 19> <Delay = 4.40>
ST_20 : Operation 100 [27/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:59]   --->   Operation 100 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 21 <SV = 20> <Delay = 4.40>
ST_21 : Operation 101 [26/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:59]   --->   Operation 101 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 22 <SV = 21> <Delay = 4.40>
ST_22 : Operation 102 [25/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:59]   --->   Operation 102 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 23 <SV = 22> <Delay = 4.40>
ST_23 : Operation 103 [24/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:59]   --->   Operation 103 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 24 <SV = 23> <Delay = 4.40>
ST_24 : Operation 104 [23/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:59]   --->   Operation 104 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 25 <SV = 24> <Delay = 4.40>
ST_25 : Operation 105 [22/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:59]   --->   Operation 105 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 26 <SV = 25> <Delay = 4.40>
ST_26 : Operation 106 [21/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:59]   --->   Operation 106 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 27 <SV = 26> <Delay = 4.40>
ST_27 : Operation 107 [20/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:59]   --->   Operation 107 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 28 <SV = 27> <Delay = 4.40>
ST_28 : Operation 108 [19/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:59]   --->   Operation 108 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 29 <SV = 28> <Delay = 4.40>
ST_29 : Operation 109 [18/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:59]   --->   Operation 109 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 30 <SV = 29> <Delay = 4.40>
ST_30 : Operation 110 [17/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:59]   --->   Operation 110 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 31 <SV = 30> <Delay = 4.40>
ST_31 : Operation 111 [16/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:59]   --->   Operation 111 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 32 <SV = 31> <Delay = 4.40>
ST_32 : Operation 112 [15/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:59]   --->   Operation 112 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 33 <SV = 32> <Delay = 4.40>
ST_33 : Operation 113 [14/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:59]   --->   Operation 113 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 34 <SV = 33> <Delay = 4.40>
ST_34 : Operation 114 [13/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:59]   --->   Operation 114 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 35 <SV = 34> <Delay = 4.40>
ST_35 : Operation 115 [12/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:59]   --->   Operation 115 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 36 <SV = 35> <Delay = 4.40>
ST_36 : Operation 116 [11/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:59]   --->   Operation 116 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 37 <SV = 36> <Delay = 4.40>
ST_37 : Operation 117 [10/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:59]   --->   Operation 117 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 38 <SV = 37> <Delay = 4.40>
ST_38 : Operation 118 [9/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:59]   --->   Operation 118 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 39 <SV = 38> <Delay = 4.40>
ST_39 : Operation 119 [8/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:59]   --->   Operation 119 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 40 <SV = 39> <Delay = 4.40>
ST_40 : Operation 120 [7/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:59]   --->   Operation 120 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 41 <SV = 40> <Delay = 4.40>
ST_41 : Operation 121 [6/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:59]   --->   Operation 121 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 42 <SV = 41> <Delay = 4.40>
ST_42 : Operation 122 [5/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:59]   --->   Operation 122 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 43 <SV = 42> <Delay = 4.40>
ST_43 : Operation 123 [4/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:59]   --->   Operation 123 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 44 <SV = 43> <Delay = 4.40>
ST_44 : Operation 124 [3/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:59]   --->   Operation 124 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 45 <SV = 44> <Delay = 4.40>
ST_45 : Operation 125 [2/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:59]   --->   Operation 125 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 46 <SV = 45> <Delay = 4.40>
ST_46 : Operation 126 [1/45] (4.40ns)   --->   "%r_V = sdiv i41 %ret_V, %zext_ln1148" [mandelbrotHLS/mandel.cpp:59]   --->   Operation 126 'sdiv' 'r_V' <Predicate = true> <Delay = 4.40> <Core = "DivnS_SEQ">   --->   Core 24 'DivnS_SEQ' <Latency = 44> <II = 41> <Delay = 4.40> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 127 [1/1] (0.00ns)   --->   "%p_Result_s = call i1 @_ssdm_op_BitSelect.i1.i41.i32(i41 %r_V, i32 40)" [mandelbrotHLS/mandel.cpp:59]   --->   Operation 127 'bitselect' 'p_Result_s' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 128 [1/1] (0.00ns)   --->   "%delta_V = trunc i41 %r_V to i40" [mandelbrotHLS/mandel.cpp:59]   --->   Operation 128 'trunc' 'delta_V' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 129 [1/1] (0.00ns)   --->   "%p_Result_21 = call i1 @_ssdm_op_BitSelect.i1.i41.i32(i41 %r_V, i32 39)" [mandelbrotHLS/mandel.cpp:59]   --->   Operation 129 'bitselect' 'p_Result_21' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 130 [2/2] (1.00ns)   --->   "call void @_ssdm_op_Write.s_axilite.i12P(i12* %maxWidth_V, i12 1920)" [mandelbrotHLS/mandel.cpp:65]   --->   Operation 130 'write' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_46 : Operation 131 [2/2] (1.00ns)   --->   "call void @_ssdm_op_Write.s_axilite.i16P(i16* %unroll, i16 8)" [mandelbrotHLS/mandel.cpp:66]   --->   Operation 131 'write' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>

State 47 <SV = 46> <Delay = 2.14>
ST_47 : Operation 132 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1 %setup), !map !186"   --->   Operation 132 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 133 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i40 %X0_V), !map !192"   --->   Operation 133 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 134 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i40 %Y0_V), !map !196"   --->   Operation 134 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 135 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i40 %X1_V), !map !200"   --->   Operation 135 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 136 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i12 %width_V), !map !204"   --->   Operation 136 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 137 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i12* %maxWidth_V), !map !208"   --->   Operation 137 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 138 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i16* %unroll), !map !212"   --->   Operation 138 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 139 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i16 %maxIter), !map !216"   --->   Operation 139 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 140 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i16* %buf_r), !map !220"   --->   Operation 140 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 141 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([5 x i8]* @calc_str) nounwind"   --->   Operation 141 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 142 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i16* %buf_r, [6 x i8]* @p_str3, i32 0, i32 0, [1 x i8]* @p_str2, i32 0, i32 8112, [1 x i8]* @p_str2, [4 x i8]* @p_str4, [1 x i8]* @p_str2, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [mandelbrotHLS/mandel.cpp:58]   --->   Operation 142 'specinterface' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 143 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i40 %X0_V, [10 x i8]* @p_str5, i32 0, i32 0, [1 x i8]* @p_str2, i32 0, i32 0, [9 x i8]* @p_str6, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [mandelbrotHLS/mandel.cpp:58]   --->   Operation 143 'specinterface' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 144 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i40 %X1_V, [10 x i8]* @p_str5, i32 0, i32 0, [1 x i8]* @p_str2, i32 0, i32 0, [9 x i8]* @p_str6, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [mandelbrotHLS/mandel.cpp:58]   --->   Operation 144 'specinterface' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 145 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i40 %Y0_V, [10 x i8]* @p_str5, i32 0, i32 0, [1 x i8]* @p_str2, i32 0, i32 0, [9 x i8]* @p_str6, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [mandelbrotHLS/mandel.cpp:58]   --->   Operation 145 'specinterface' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 146 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i16 %maxIter, [10 x i8]* @p_str5, i32 0, i32 0, [1 x i8]* @p_str2, i32 0, i32 0, [9 x i8]* @p_str6, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [mandelbrotHLS/mandel.cpp:58]   --->   Operation 146 'specinterface' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 147 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str5, i32 0, i32 0, [1 x i8]* @p_str2, i32 0, i32 0, [9 x i8]* @p_str6, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [mandelbrotHLS/mandel.cpp:58]   --->   Operation 147 'specinterface' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 148 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i1 %setup, [10 x i8]* @p_str5, i32 0, i32 0, [1 x i8]* @p_str2, i32 0, i32 0, [9 x i8]* @p_str6, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [mandelbrotHLS/mandel.cpp:58]   --->   Operation 148 'specinterface' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 149 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i12 %width_V, [10 x i8]* @p_str5, i32 0, i32 0, [1 x i8]* @p_str2, i32 0, i32 0, [9 x i8]* @p_str6, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [mandelbrotHLS/mandel.cpp:58]   --->   Operation 149 'specinterface' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 150 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i12* %maxWidth_V, [10 x i8]* @p_str5, i32 1, i32 1, [1 x i8]* @p_str2, i32 0, i32 0, [9 x i8]* @p_str6, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [mandelbrotHLS/mandel.cpp:58]   --->   Operation 150 'specinterface' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 151 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i16* %unroll, [10 x i8]* @p_str5, i32 1, i32 1, [1 x i8]* @p_str2, i32 0, i32 0, [9 x i8]* @p_str6, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [mandelbrotHLS/mandel.cpp:58]   --->   Operation 151 'specinterface' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 152 [1/1] (0.00ns) (grouped into LUT with out node select_ln388)   --->   "%xor_ln786 = xor i1 %p_Result_21, true" [mandelbrotHLS/mandel.cpp:59]   --->   Operation 152 'xor' 'xor_ln786' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 153 [1/1] (0.00ns) (grouped into LUT with out node select_ln388)   --->   "%underflow = and i1 %p_Result_s, %xor_ln786" [mandelbrotHLS/mandel.cpp:59]   --->   Operation 153 'and' 'underflow' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 154 [1/1] (0.00ns) (grouped into LUT with out node p_Val2_31)   --->   "%xor_ln340_2 = xor i1 %p_Result_s, %p_Result_21" [mandelbrotHLS/mandel.cpp:59]   --->   Operation 154 'xor' 'xor_ln340_2' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 155 [1/1] (0.00ns) (grouped into LUT with out node p_Val2_31)   --->   "%xor_ln340 = xor i1 %p_Result_s, true" [mandelbrotHLS/mandel.cpp:59]   --->   Operation 155 'xor' 'xor_ln340' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 156 [1/1] (0.00ns) (grouped into LUT with out node p_Val2_31)   --->   "%or_ln340 = or i1 %p_Result_21, %xor_ln340" [mandelbrotHLS/mandel.cpp:59]   --->   Operation 156 'or' 'or_ln340' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 157 [1/1] (0.00ns) (grouped into LUT with out node p_Val2_31)   --->   "%select_ln340 = select i1 %xor_ln340_2, i40 549755813887, i40 %delta_V" [mandelbrotHLS/mandel.cpp:59]   --->   Operation 157 'select' 'select_ln340' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.07> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_47 : Operation 158 [1/1] (1.07ns) (out node of the LUT)   --->   "%select_ln388 = select i1 %underflow, i40 -549755813888, i40 %delta_V" [mandelbrotHLS/mandel.cpp:59]   --->   Operation 158 'select' 'select_ln388' <Predicate = true> <Delay = 1.07> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.07> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_47 : Operation 159 [1/1] (1.07ns) (out node of the LUT)   --->   "%p_Val2_31 = select i1 %or_ln340, i40 %select_ln340, i40 %select_ln388" [mandelbrotHLS/mandel.cpp:59]   --->   Operation 159 'select' 'p_Val2_31' <Predicate = true> <Delay = 1.07> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.07> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_47 : Operation 160 [1/2] (1.00ns)   --->   "call void @_ssdm_op_Write.s_axilite.i12P(i12* %maxWidth_V, i12 1920)" [mandelbrotHLS/mandel.cpp:65]   --->   Operation 160 'write' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_47 : Operation 161 [1/2] (1.00ns)   --->   "call void @_ssdm_op_Write.s_axilite.i16P(i16* %unroll, i16 8)" [mandelbrotHLS/mandel.cpp:66]   --->   Operation 161 'write' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_47 : Operation 162 [1/1] (0.00ns)   --->   "br i1 %setup_read, label %.loopexit, label %0" [mandelbrotHLS/mandel.cpp:68]   --->   Operation 162 'br' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 163 [1/1] (0.00ns)   --->   "%lshr_ln = call i10 @_ssdm_op_PartSelect.i10.i12.i32.i32(i12 %width_V_read, i32 2, i32 11)" [mandelbrotHLS/mandel.cpp:78]   --->   Operation 163 'partselect' 'lshr_ln' <Predicate = (!setup_read)> <Delay = 0.00>
ST_47 : Operation 164 [1/1] (0.00ns)   --->   "%zext_ln78_1 = zext i10 %lshr_ln to i12" [mandelbrotHLS/mandel.cpp:78]   --->   Operation 164 'zext' 'zext_ln78_1' <Predicate = (!setup_read)> <Delay = 0.00>
ST_47 : Operation 165 [1/1] (0.00ns)   --->   "%and_ln = call i12 @_ssdm_op_BitConcatenate.i12.i10.i2(i10 %lshr_ln, i2 0)" [mandelbrotHLS/mandel.cpp:78]   --->   Operation 165 'bitconcatenate' 'and_ln' <Predicate = (!setup_read)> <Delay = 0.00>
ST_47 : Operation 166 [1/1] (2.13ns)   --->   "%sub_ln78 = sub i12 %and_ln, %zext_ln78_1" [mandelbrotHLS/mandel.cpp:78]   --->   Operation 166 'sub' 'sub_ln78' <Predicate = (!setup_read)> <Delay = 2.13> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 167 [1/1] (0.00ns)   --->   "%sext_ln1118 = sext i40 %p_Val2_31 to i52" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 167 'sext' 'sext_ln1118' <Predicate = (!setup_read)> <Delay = 0.00>
ST_47 : Operation 168 [1/1] (0.00ns)   --->   "%rhs_V_4 = sext i40 %p_Val2_31 to i41" [mandelbrotHLS/mandel.cpp:90]   --->   Operation 168 'sext' 'rhs_V_4' <Predicate = (!setup_read)> <Delay = 0.00>
ST_47 : Operation 169 [1/1] (0.00ns)   --->   "%zext_ln703 = zext i12 %width_V_read to i24" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 169 'zext' 'zext_ln703' <Predicate = (!setup_read)> <Delay = 0.00>
ST_47 : Operation 170 [1/1] (0.00ns)   --->   "%sext_ln78 = sext i40 %X0_V_read to i52" [mandelbrotHLS/mandel.cpp:78]   --->   Operation 170 'sext' 'sext_ln78' <Predicate = (!setup_read)> <Delay = 0.00>
ST_47 : Operation 171 [1/1] (1.66ns)   --->   "br label %1" [mandelbrotHLS/mandel.cpp:78]   --->   Operation 171 'br' <Predicate = (!setup_read)> <Delay = 1.66>

State 48 <SV = 47> <Delay = 2.42>
ST_48 : Operation 172 [1/1] (0.00ns)   --->   "%p_Val2_30 = phi i40 [ %Y0_V_read, %0 ], [ %select_ln340_17, %y_for_end ]" [mandelbrotHLS/mandel.cpp:57]   --->   Operation 172 'phi' 'p_Val2_30' <Predicate = (!setup_read)> <Delay = 0.00>
ST_48 : Operation 173 [1/1] (0.00ns)   --->   "%t_V_1 = phi i12 [ 0, %0 ], [ %line_V, %y_for_end ]"   --->   Operation 173 'phi' 't_V_1' <Predicate = (!setup_read)> <Delay = 0.00>
ST_48 : Operation 174 [1/1] (0.00ns)   --->   "%index_0 = phi i24 [ 0, %0 ], [ %index, %y_for_end ]"   --->   Operation 174 'phi' 'index_0' <Predicate = (!setup_read)> <Delay = 0.00>
ST_48 : Operation 175 [1/1] (0.00ns)   --->   "%zext_ln78 = zext i24 %index_0 to i32" [mandelbrotHLS/mandel.cpp:78]   --->   Operation 175 'zext' 'zext_ln78' <Predicate = (!setup_read)> <Delay = 0.00>
ST_48 : Operation 176 [1/1] (1.92ns)   --->   "%icmp_ln78 = icmp eq i12 %t_V_1, %sub_ln78" [mandelbrotHLS/mandel.cpp:78]   --->   Operation 176 'icmp' 'icmp_ln78' <Predicate = (!setup_read)> <Delay = 1.92> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.92> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 177 [1/1] (2.13ns)   --->   "%line_V = add i12 %t_V_1, 1" [mandelbrotHLS/mandel.cpp:78]   --->   Operation 177 'add' 'line_V' <Predicate = (!setup_read)> <Delay = 2.13> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 178 [1/1] (0.00ns)   --->   "br i1 %icmp_ln78, label %.loopexit.loopexit, label %y_for_begin" [mandelbrotHLS/mandel.cpp:78]   --->   Operation 178 'br' <Predicate = (!setup_read)> <Delay = 0.00>
ST_48 : Operation 179 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([6 x i8]* @p_str7) nounwind" [mandelbrotHLS/mandel.cpp:78]   --->   Operation 179 'specloopname' <Predicate = (!setup_read & !icmp_ln78)> <Delay = 0.00>
ST_48 : Operation 180 [1/1] (0.00ns)   --->   "%tmp = call i32 (...)* @_ssdm_op_SpecRegionBegin([6 x i8]* @p_str7)" [mandelbrotHLS/mandel.cpp:78]   --->   Operation 180 'specregionbegin' 'tmp' <Predicate = (!setup_read & !icmp_ln78)> <Delay = 0.00>
ST_48 : Operation 181 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopTripCount(i32 768, i32 1440, i32 768, [1 x i8]* @p_str2) nounwind" [mandelbrotHLS/mandel.cpp:79]   --->   Operation 181 'speclooptripcount' <Predicate = (!setup_read & !icmp_ln78)> <Delay = 0.00>
ST_48 : Operation 182 [1/1] (2.42ns)   --->   "%index = add i24 %zext_ln703, %index_0" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 182 'add' 'index' <Predicate = (!setup_read & !icmp_ln78)> <Delay = 2.42> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 183 [1/1] (1.66ns)   --->   "br label %2" [mandelbrotHLS/mandel.cpp:79]   --->   Operation 183 'br' <Predicate = (!setup_read & !icmp_ln78)> <Delay = 1.66>
ST_48 : Operation 184 [1/1] (0.00ns)   --->   "br label %.loopexit"   --->   Operation 184 'br' <Predicate = (!setup_read & icmp_ln78)> <Delay = 0.00>
ST_48 : Operation 185 [1/1] (0.00ns)   --->   "ret void" [mandelbrotHLS/mandel.cpp:97]   --->   Operation 185 'ret' <Predicate = (icmp_ln78) | (setup_read)> <Delay = 0.00>

State 49 <SV = 48> <Delay = 5.03>
ST_49 : Operation 186 [1/1] (0.00ns)   --->   "%tmp_V_1_0 = phi i12 [ 0, %y_for_begin ], [ %add_ln700, %_ZmlILi40ELi4ELb1EL9ap_q_mode4EL9ap_o_mode0ELi0ELi12ELb0EEN13ap_fixed_baseIXT5_EXT5_EXT6_ELS0_5ELS1_3ELi0EE5RTypeIXT_EXT0_EXT1_EE4multERK11ap_int_baseIXT5_EXT6_EERKS2_IXT_EXT0_EXT1_EXT2_EXT3_EXT4_EE.exit.0_ifconv ]" [mandelbrotHLS/mandel.cpp:79]   --->   Operation 186 'phi' 'tmp_V_1_0' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 187 [1/1] (0.00ns)   --->   "%index_1_0 = phi i32 [ %zext_ln78, %y_for_begin ], [ %add_ln85, %_ZmlILi40ELi4ELb1EL9ap_q_mode4EL9ap_o_mode0ELi0ELi12ELb0EEN13ap_fixed_baseIXT5_EXT5_EXT6_ELS0_5ELS1_3ELi0EE5RTypeIXT_EXT0_EXT1_EE4multERK11ap_int_baseIXT5_EXT6_EERKS2_IXT_EXT0_EXT1_EXT2_EXT3_EXT4_EE.exit.0_ifconv ]" [mandelbrotHLS/mandel.cpp:78]   --->   Operation 187 'phi' 'index_1_0' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 188 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopTripCount(i64 128, i64 240, i64 128)"   --->   Operation 188 'speclooptripcount' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 189 [1/1] (1.92ns)   --->   "%icmp_ln79 = icmp eq i12 %tmp_V_1_0, %width_V_read" [mandelbrotHLS/mandel.cpp:79]   --->   Operation 189 'icmp' 'icmp_ln79' <Predicate = true> <Delay = 1.92> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.92> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 190 [1/1] (0.00ns)   --->   "br i1 %icmp_ln79, label %y_for_end, label %_ZmlILi40ELi4ELb1EL9ap_q_mode4EL9ap_o_mode0ELi0ELi12ELb0EEN13ap_fixed_baseIXT5_EXT5_EXT6_ELS0_5ELS1_3ELi0EE5RTypeIXT_EXT0_EXT1_EE4multERK11ap_int_baseIXT5_EXT6_EERKS2_IXT_EXT0_EXT1_EXT2_EXT3_EXT4_EE.exit.0_ifconv" [mandelbrotHLS/mandel.cpp:79]   --->   Operation 190 'br' <Predicate = true> <Delay = 0.00>
ST_49 : Operation 191 [1/1] (0.00ns)   --->   "%zext_ln1116 = zext i12 %tmp_V_1_0 to i52" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 191 'zext' 'zext_ln1116' <Predicate = (!icmp_ln79)> <Delay = 0.00>
ST_49 : Operation 192 [6/6] (3.89ns)   --->   "%mul_ln1118 = mul nsw i52 %zext_ln1116, %sext_ln1118" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 192 'mul' 'mul_ln1118' <Predicate = (!icmp_ln79)> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 193 [1/1] (0.00ns)   --->   "%zext_ln85 = zext i32 %index_1_0 to i64" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 193 'zext' 'zext_ln85' <Predicate = (!icmp_ln79)> <Delay = 0.00>
ST_49 : Operation 194 [1/1] (0.00ns)   --->   "%buf_addr = getelementptr inbounds i16* %buf_r, i64 %zext_ln85" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 194 'getelementptr' 'buf_addr' <Predicate = (!icmp_ln79)> <Delay = 0.00>
ST_49 : Operation 195 [1/1] (0.00ns)   --->   "%or_ln700 = or i12 %tmp_V_1_0, 1" [mandelbrotHLS/mandel.cpp:79]   --->   Operation 195 'or' 'or_ln700' <Predicate = (!icmp_ln79)> <Delay = 0.00>
ST_49 : Operation 196 [1/1] (0.00ns)   --->   "%zext_ln1116_1 = zext i12 %or_ln700 to i52" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 196 'zext' 'zext_ln1116_1' <Predicate = (!icmp_ln79)> <Delay = 0.00>
ST_49 : Operation 197 [6/6] (3.89ns)   --->   "%mul_ln1118_1 = mul nsw i52 %zext_ln1116_1, %sext_ln1118" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 197 'mul' 'mul_ln1118_1' <Predicate = (!icmp_ln79)> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 198 [1/1] (0.00ns)   --->   "%or_ln700_1 = or i12 %tmp_V_1_0, 2" [mandelbrotHLS/mandel.cpp:79]   --->   Operation 198 'or' 'or_ln700_1' <Predicate = (!icmp_ln79)> <Delay = 0.00>
ST_49 : Operation 199 [1/1] (0.00ns)   --->   "%zext_ln1116_2 = zext i12 %or_ln700_1 to i52" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 199 'zext' 'zext_ln1116_2' <Predicate = (!icmp_ln79)> <Delay = 0.00>
ST_49 : Operation 200 [6/6] (3.89ns)   --->   "%mul_ln1118_2 = mul nsw i52 %zext_ln1116_2, %sext_ln1118" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 200 'mul' 'mul_ln1118_2' <Predicate = (!icmp_ln79)> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 201 [1/1] (0.00ns)   --->   "%or_ln700_2 = or i12 %tmp_V_1_0, 3" [mandelbrotHLS/mandel.cpp:79]   --->   Operation 201 'or' 'or_ln700_2' <Predicate = (!icmp_ln79)> <Delay = 0.00>
ST_49 : Operation 202 [1/1] (0.00ns)   --->   "%zext_ln1116_3 = zext i12 %or_ln700_2 to i52" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 202 'zext' 'zext_ln1116_3' <Predicate = (!icmp_ln79)> <Delay = 0.00>
ST_49 : Operation 203 [6/6] (3.89ns)   --->   "%mul_ln1118_3 = mul nsw i52 %zext_ln1116_3, %sext_ln1118" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 203 'mul' 'mul_ln1118_3' <Predicate = (!icmp_ln79)> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 204 [1/1] (0.00ns)   --->   "%or_ln700_3 = or i12 %tmp_V_1_0, 4" [mandelbrotHLS/mandel.cpp:79]   --->   Operation 204 'or' 'or_ln700_3' <Predicate = (!icmp_ln79)> <Delay = 0.00>
ST_49 : Operation 205 [1/1] (0.00ns)   --->   "%zext_ln1116_4 = zext i12 %or_ln700_3 to i52" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 205 'zext' 'zext_ln1116_4' <Predicate = (!icmp_ln79)> <Delay = 0.00>
ST_49 : Operation 206 [6/6] (3.89ns)   --->   "%mul_ln1118_4 = mul nsw i52 %zext_ln1116_4, %sext_ln1118" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 206 'mul' 'mul_ln1118_4' <Predicate = (!icmp_ln79)> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 207 [1/1] (0.00ns)   --->   "%or_ln700_4 = or i12 %tmp_V_1_0, 5" [mandelbrotHLS/mandel.cpp:79]   --->   Operation 207 'or' 'or_ln700_4' <Predicate = (!icmp_ln79)> <Delay = 0.00>
ST_49 : Operation 208 [1/1] (0.00ns)   --->   "%zext_ln1116_5 = zext i12 %or_ln700_4 to i52" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 208 'zext' 'zext_ln1116_5' <Predicate = (!icmp_ln79)> <Delay = 0.00>
ST_49 : Operation 209 [6/6] (3.89ns)   --->   "%mul_ln1118_5 = mul nsw i52 %zext_ln1116_5, %sext_ln1118" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 209 'mul' 'mul_ln1118_5' <Predicate = (!icmp_ln79)> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 210 [1/1] (0.00ns)   --->   "%or_ln700_5 = or i12 %tmp_V_1_0, 6" [mandelbrotHLS/mandel.cpp:79]   --->   Operation 210 'or' 'or_ln700_5' <Predicate = (!icmp_ln79)> <Delay = 0.00>
ST_49 : Operation 211 [1/1] (0.00ns)   --->   "%zext_ln1116_6 = zext i12 %or_ln700_5 to i52" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 211 'zext' 'zext_ln1116_6' <Predicate = (!icmp_ln79)> <Delay = 0.00>
ST_49 : Operation 212 [6/6] (3.89ns)   --->   "%mul_ln1118_6 = mul nsw i52 %zext_ln1116_6, %sext_ln1118" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 212 'mul' 'mul_ln1118_6' <Predicate = (!icmp_ln79)> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 213 [1/1] (0.00ns)   --->   "%or_ln700_6 = or i12 %tmp_V_1_0, 7" [mandelbrotHLS/mandel.cpp:79]   --->   Operation 213 'or' 'or_ln700_6' <Predicate = (!icmp_ln79)> <Delay = 0.00>
ST_49 : Operation 214 [1/1] (0.00ns)   --->   "%zext_ln1116_7 = zext i12 %or_ln700_6 to i52" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 214 'zext' 'zext_ln1116_7' <Predicate = (!icmp_ln79)> <Delay = 0.00>
ST_49 : Operation 215 [6/6] (3.89ns)   --->   "%mul_ln1118_7 = mul nsw i52 %zext_ln1116_7, %sext_ln1118" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 215 'mul' 'mul_ln1118_7' <Predicate = (!icmp_ln79)> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 216 [1/1] (2.70ns)   --->   "%add_ln85 = add nsw i32 8, %index_1_0" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 216 'add' 'add_ln85' <Predicate = (!icmp_ln79)> <Delay = 2.70> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 217 [1/1] (2.13ns)   --->   "%add_ln700 = add i12 8, %tmp_V_1_0" [mandelbrotHLS/mandel.cpp:79]   --->   Operation 217 'add' 'add_ln700' <Predicate = (!icmp_ln79)> <Delay = 2.13> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 218 [1/1] (0.00ns)   --->   "%lhs_V_3 = sext i40 %p_Val2_30 to i41" [mandelbrotHLS/mandel.cpp:90]   --->   Operation 218 'sext' 'lhs_V_3' <Predicate = (icmp_ln79)> <Delay = 0.00>
ST_49 : Operation 219 [1/1] (2.88ns)   --->   "%ret_V_14 = sub nsw i41 %lhs_V_3, %rhs_V_4" [mandelbrotHLS/mandel.cpp:90]   --->   Operation 219 'sub' 'ret_V_14' <Predicate = (icmp_ln79)> <Delay = 2.88> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 220 [1/1] (0.00ns)   --->   "%p_Result_22 = call i1 @_ssdm_op_BitSelect.i1.i41.i32(i41 %ret_V_14, i32 40)" [mandelbrotHLS/mandel.cpp:90]   --->   Operation 220 'bitselect' 'p_Result_22' <Predicate = (icmp_ln79)> <Delay = 0.00>
ST_49 : Operation 221 [1/1] (0.00ns)   --->   "%y_V = trunc i41 %ret_V_14 to i40" [mandelbrotHLS/mandel.cpp:90]   --->   Operation 221 'trunc' 'y_V' <Predicate = (icmp_ln79)> <Delay = 0.00>
ST_49 : Operation 222 [1/1] (0.00ns)   --->   "%p_Result_23 = call i1 @_ssdm_op_BitSelect.i1.i41.i32(i41 %ret_V_14, i32 39)" [mandelbrotHLS/mandel.cpp:90]   --->   Operation 222 'bitselect' 'p_Result_23' <Predicate = (icmp_ln79)> <Delay = 0.00>
ST_49 : Operation 223 [1/1] (0.00ns) (grouped into LUT with out node select_ln388_7)   --->   "%xor_ln786_7 = xor i1 %p_Result_23, true" [mandelbrotHLS/mandel.cpp:90]   --->   Operation 223 'xor' 'xor_ln786_7' <Predicate = (icmp_ln79)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 224 [1/1] (0.00ns) (grouped into LUT with out node select_ln388_7)   --->   "%underflow_7 = and i1 %p_Result_22, %xor_ln786_7" [mandelbrotHLS/mandel.cpp:90]   --->   Operation 224 'and' 'underflow_7' <Predicate = (icmp_ln79)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 225 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_17)   --->   "%xor_ln340_3 = xor i1 %p_Result_22, %p_Result_23" [mandelbrotHLS/mandel.cpp:90]   --->   Operation 225 'xor' 'xor_ln340_3' <Predicate = (icmp_ln79)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 226 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_17)   --->   "%xor_ln340_4 = xor i1 %p_Result_22, true" [mandelbrotHLS/mandel.cpp:90]   --->   Operation 226 'xor' 'xor_ln340_4' <Predicate = (icmp_ln79)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 227 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_17)   --->   "%or_ln340_19 = or i1 %p_Result_23, %xor_ln340_4" [mandelbrotHLS/mandel.cpp:90]   --->   Operation 227 'or' 'or_ln340_19' <Predicate = (icmp_ln79)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_49 : Operation 228 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_17)   --->   "%select_ln340_7 = select i1 %xor_ln340_3, i40 549755813887, i40 %y_V" [mandelbrotHLS/mandel.cpp:90]   --->   Operation 228 'select' 'select_ln340_7' <Predicate = (icmp_ln79)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.07> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_49 : Operation 229 [1/1] (1.07ns) (out node of the LUT)   --->   "%select_ln388_7 = select i1 %underflow_7, i40 -549755813888, i40 %y_V" [mandelbrotHLS/mandel.cpp:90]   --->   Operation 229 'select' 'select_ln388_7' <Predicate = (icmp_ln79)> <Delay = 1.07> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.07> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_49 : Operation 230 [1/1] (1.07ns) (out node of the LUT)   --->   "%select_ln340_17 = select i1 %or_ln340_19, i40 %select_ln340_7, i40 %select_ln388_7" [mandelbrotHLS/mandel.cpp:90]   --->   Operation 230 'select' 'select_ln340_17' <Predicate = (icmp_ln79)> <Delay = 1.07> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.07> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_49 : Operation 231 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecRegionEnd([6 x i8]* @p_str7, i32 %tmp)" [mandelbrotHLS/mandel.cpp:91]   --->   Operation 231 'specregionend' 'empty' <Predicate = (icmp_ln79)> <Delay = 0.00>
ST_49 : Operation 232 [1/1] (0.00ns)   --->   "br label %1" [mandelbrotHLS/mandel.cpp:78]   --->   Operation 232 'br' <Predicate = (icmp_ln79)> <Delay = 0.00>

State 50 <SV = 49> <Delay = 3.89>
ST_50 : Operation 233 [5/6] (3.89ns)   --->   "%mul_ln1118 = mul nsw i52 %zext_ln1116, %sext_ln1118" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 233 'mul' 'mul_ln1118' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_50 : Operation 234 [5/6] (3.89ns)   --->   "%mul_ln1118_1 = mul nsw i52 %zext_ln1116_1, %sext_ln1118" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 234 'mul' 'mul_ln1118_1' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_50 : Operation 235 [5/6] (3.89ns)   --->   "%mul_ln1118_2 = mul nsw i52 %zext_ln1116_2, %sext_ln1118" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 235 'mul' 'mul_ln1118_2' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_50 : Operation 236 [5/6] (3.89ns)   --->   "%mul_ln1118_3 = mul nsw i52 %zext_ln1116_3, %sext_ln1118" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 236 'mul' 'mul_ln1118_3' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_50 : Operation 237 [5/6] (3.89ns)   --->   "%mul_ln1118_4 = mul nsw i52 %zext_ln1116_4, %sext_ln1118" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 237 'mul' 'mul_ln1118_4' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_50 : Operation 238 [5/6] (3.89ns)   --->   "%mul_ln1118_5 = mul nsw i52 %zext_ln1116_5, %sext_ln1118" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 238 'mul' 'mul_ln1118_5' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_50 : Operation 239 [5/6] (3.89ns)   --->   "%mul_ln1118_6 = mul nsw i52 %zext_ln1116_6, %sext_ln1118" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 239 'mul' 'mul_ln1118_6' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_50 : Operation 240 [5/6] (3.89ns)   --->   "%mul_ln1118_7 = mul nsw i52 %zext_ln1116_7, %sext_ln1118" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 240 'mul' 'mul_ln1118_7' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 51 <SV = 50> <Delay = 3.89>
ST_51 : Operation 241 [4/6] (3.89ns)   --->   "%mul_ln1118 = mul nsw i52 %zext_ln1116, %sext_ln1118" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 241 'mul' 'mul_ln1118' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_51 : Operation 242 [4/6] (3.89ns)   --->   "%mul_ln1118_1 = mul nsw i52 %zext_ln1116_1, %sext_ln1118" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 242 'mul' 'mul_ln1118_1' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_51 : Operation 243 [4/6] (3.89ns)   --->   "%mul_ln1118_2 = mul nsw i52 %zext_ln1116_2, %sext_ln1118" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 243 'mul' 'mul_ln1118_2' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_51 : Operation 244 [4/6] (3.89ns)   --->   "%mul_ln1118_3 = mul nsw i52 %zext_ln1116_3, %sext_ln1118" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 244 'mul' 'mul_ln1118_3' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_51 : Operation 245 [4/6] (3.89ns)   --->   "%mul_ln1118_4 = mul nsw i52 %zext_ln1116_4, %sext_ln1118" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 245 'mul' 'mul_ln1118_4' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_51 : Operation 246 [4/6] (3.89ns)   --->   "%mul_ln1118_5 = mul nsw i52 %zext_ln1116_5, %sext_ln1118" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 246 'mul' 'mul_ln1118_5' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_51 : Operation 247 [4/6] (3.89ns)   --->   "%mul_ln1118_6 = mul nsw i52 %zext_ln1116_6, %sext_ln1118" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 247 'mul' 'mul_ln1118_6' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_51 : Operation 248 [4/6] (3.89ns)   --->   "%mul_ln1118_7 = mul nsw i52 %zext_ln1116_7, %sext_ln1118" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 248 'mul' 'mul_ln1118_7' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 52 <SV = 51> <Delay = 3.89>
ST_52 : Operation 249 [3/6] (3.89ns)   --->   "%mul_ln1118 = mul nsw i52 %zext_ln1116, %sext_ln1118" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 249 'mul' 'mul_ln1118' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_52 : Operation 250 [3/6] (3.89ns)   --->   "%mul_ln1118_1 = mul nsw i52 %zext_ln1116_1, %sext_ln1118" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 250 'mul' 'mul_ln1118_1' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_52 : Operation 251 [3/6] (3.89ns)   --->   "%mul_ln1118_2 = mul nsw i52 %zext_ln1116_2, %sext_ln1118" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 251 'mul' 'mul_ln1118_2' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_52 : Operation 252 [3/6] (3.89ns)   --->   "%mul_ln1118_3 = mul nsw i52 %zext_ln1116_3, %sext_ln1118" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 252 'mul' 'mul_ln1118_3' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_52 : Operation 253 [3/6] (3.89ns)   --->   "%mul_ln1118_4 = mul nsw i52 %zext_ln1116_4, %sext_ln1118" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 253 'mul' 'mul_ln1118_4' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_52 : Operation 254 [3/6] (3.89ns)   --->   "%mul_ln1118_5 = mul nsw i52 %zext_ln1116_5, %sext_ln1118" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 254 'mul' 'mul_ln1118_5' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_52 : Operation 255 [3/6] (3.89ns)   --->   "%mul_ln1118_6 = mul nsw i52 %zext_ln1116_6, %sext_ln1118" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 255 'mul' 'mul_ln1118_6' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_52 : Operation 256 [3/6] (3.89ns)   --->   "%mul_ln1118_7 = mul nsw i52 %zext_ln1116_7, %sext_ln1118" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 256 'mul' 'mul_ln1118_7' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 53 <SV = 52> <Delay = 3.89>
ST_53 : Operation 257 [2/6] (3.89ns)   --->   "%mul_ln1118 = mul nsw i52 %zext_ln1116, %sext_ln1118" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 257 'mul' 'mul_ln1118' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_53 : Operation 258 [2/6] (3.89ns)   --->   "%mul_ln1118_1 = mul nsw i52 %zext_ln1116_1, %sext_ln1118" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 258 'mul' 'mul_ln1118_1' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_53 : Operation 259 [2/6] (3.89ns)   --->   "%mul_ln1118_2 = mul nsw i52 %zext_ln1116_2, %sext_ln1118" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 259 'mul' 'mul_ln1118_2' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_53 : Operation 260 [2/6] (3.89ns)   --->   "%mul_ln1118_3 = mul nsw i52 %zext_ln1116_3, %sext_ln1118" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 260 'mul' 'mul_ln1118_3' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_53 : Operation 261 [2/6] (3.89ns)   --->   "%mul_ln1118_4 = mul nsw i52 %zext_ln1116_4, %sext_ln1118" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 261 'mul' 'mul_ln1118_4' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_53 : Operation 262 [2/6] (3.89ns)   --->   "%mul_ln1118_5 = mul nsw i52 %zext_ln1116_5, %sext_ln1118" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 262 'mul' 'mul_ln1118_5' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_53 : Operation 263 [2/6] (3.89ns)   --->   "%mul_ln1118_6 = mul nsw i52 %zext_ln1116_6, %sext_ln1118" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 263 'mul' 'mul_ln1118_6' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_53 : Operation 264 [2/6] (3.89ns)   --->   "%mul_ln1118_7 = mul nsw i52 %zext_ln1116_7, %sext_ln1118" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 264 'mul' 'mul_ln1118_7' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 54 <SV = 53> <Delay = 3.89>
ST_54 : Operation 265 [1/6] (3.89ns)   --->   "%mul_ln1118 = mul nsw i52 %zext_ln1116, %sext_ln1118" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 265 'mul' 'mul_ln1118' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_54 : Operation 266 [1/1] (0.00ns)   --->   "%trunc_ln1192 = trunc i52 %mul_ln1118 to i40" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 266 'trunc' 'trunc_ln1192' <Predicate = true> <Delay = 0.00>
ST_54 : Operation 267 [1/6] (3.89ns)   --->   "%mul_ln1118_1 = mul nsw i52 %zext_ln1116_1, %sext_ln1118" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 267 'mul' 'mul_ln1118_1' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_54 : Operation 268 [1/1] (0.00ns)   --->   "%trunc_ln1192_1 = trunc i52 %mul_ln1118_1 to i40" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 268 'trunc' 'trunc_ln1192_1' <Predicate = true> <Delay = 0.00>
ST_54 : Operation 269 [1/6] (3.89ns)   --->   "%mul_ln1118_2 = mul nsw i52 %zext_ln1116_2, %sext_ln1118" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 269 'mul' 'mul_ln1118_2' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_54 : Operation 270 [1/1] (0.00ns)   --->   "%trunc_ln1192_2 = trunc i52 %mul_ln1118_2 to i40" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 270 'trunc' 'trunc_ln1192_2' <Predicate = true> <Delay = 0.00>
ST_54 : Operation 271 [1/6] (3.89ns)   --->   "%mul_ln1118_3 = mul nsw i52 %zext_ln1116_3, %sext_ln1118" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 271 'mul' 'mul_ln1118_3' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_54 : Operation 272 [1/1] (0.00ns)   --->   "%trunc_ln1192_3 = trunc i52 %mul_ln1118_3 to i40" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 272 'trunc' 'trunc_ln1192_3' <Predicate = true> <Delay = 0.00>
ST_54 : Operation 273 [1/6] (3.89ns)   --->   "%mul_ln1118_4 = mul nsw i52 %zext_ln1116_4, %sext_ln1118" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 273 'mul' 'mul_ln1118_4' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_54 : Operation 274 [1/1] (0.00ns)   --->   "%trunc_ln1192_4 = trunc i52 %mul_ln1118_4 to i40" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 274 'trunc' 'trunc_ln1192_4' <Predicate = true> <Delay = 0.00>
ST_54 : Operation 275 [1/6] (3.89ns)   --->   "%mul_ln1118_5 = mul nsw i52 %zext_ln1116_5, %sext_ln1118" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 275 'mul' 'mul_ln1118_5' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_54 : Operation 276 [1/1] (0.00ns)   --->   "%trunc_ln1192_5 = trunc i52 %mul_ln1118_5 to i40" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 276 'trunc' 'trunc_ln1192_5' <Predicate = true> <Delay = 0.00>
ST_54 : Operation 277 [1/6] (3.89ns)   --->   "%mul_ln1118_6 = mul nsw i52 %zext_ln1116_6, %sext_ln1118" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 277 'mul' 'mul_ln1118_6' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_54 : Operation 278 [1/1] (0.00ns)   --->   "%trunc_ln1192_6 = trunc i52 %mul_ln1118_6 to i40" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 278 'trunc' 'trunc_ln1192_6' <Predicate = true> <Delay = 0.00>
ST_54 : Operation 279 [1/6] (3.89ns)   --->   "%mul_ln1118_7 = mul nsw i52 %zext_ln1116_7, %sext_ln1118" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 279 'mul' 'mul_ln1118_7' <Predicate = true> <Delay = 3.89> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 5> <II = 1> <Delay = 3.89> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_54 : Operation 280 [1/1] (0.00ns)   --->   "%trunc_ln1192_7 = trunc i52 %mul_ln1118_7 to i40" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 280 'trunc' 'trunc_ln1192_7' <Predicate = true> <Delay = 0.00>

State 55 <SV = 54> <Delay = 5.17>
ST_55 : Operation 281 [1/1] (3.24ns)   --->   "%add_ln1192 = add i52 %sext_ln78, %mul_ln1118" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 281 'add' 'add_ln1192' <Predicate = true> <Delay = 3.24> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_55 : Operation 282 [1/1] (0.00ns)   --->   "%tmp_48 = call i1 @_ssdm_op_BitSelect.i1.i52.i32(i52 %add_ln1192, i32 51)" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 282 'bitselect' 'tmp_48' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 283 [1/1] (2.88ns)   --->   "%add_ln703 = add i40 %X0_V_read, %trunc_ln1192" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 283 'add' 'add_ln703' <Predicate = true> <Delay = 2.88> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_55 : Operation 284 [1/1] (0.00ns)   --->   "%tmp_49 = call i1 @_ssdm_op_BitSelect.i1.i40.i32(i40 %add_ln703, i32 39)" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 284 'bitselect' 'tmp_49' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 285 [1/1] (0.00ns)   --->   "%tmp_8 = call i12 @_ssdm_op_PartSelect.i12.i52.i32.i32(i52 %add_ln1192, i32 40, i32 51)" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 285 'partselect' 'tmp_8' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 286 [1/1] (1.92ns)   --->   "%icmp_ln785 = icmp ne i12 %tmp_8, 0" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 286 'icmp' 'icmp_ln785' <Predicate = true> <Delay = 1.92> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.92> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_55 : Operation 287 [1/1] (1.92ns)   --->   "%icmp_ln786 = icmp ne i12 %tmp_8, -1" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 287 'icmp' 'icmp_ln786' <Predicate = true> <Delay = 1.92> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.92> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_55 : Operation 288 [1/1] (3.24ns)   --->   "%add_ln1192_1 = add i52 %sext_ln78, %mul_ln1118_1" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 288 'add' 'add_ln1192_1' <Predicate = true> <Delay = 3.24> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_55 : Operation 289 [1/1] (0.00ns)   --->   "%tmp_50 = call i1 @_ssdm_op_BitSelect.i1.i52.i32(i52 %add_ln1192_1, i32 51)" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 289 'bitselect' 'tmp_50' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 290 [1/1] (2.88ns)   --->   "%add_ln703_1 = add i40 %X0_V_read, %trunc_ln1192_1" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 290 'add' 'add_ln703_1' <Predicate = true> <Delay = 2.88> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_55 : Operation 291 [1/1] (0.00ns)   --->   "%tmp_51 = call i1 @_ssdm_op_BitSelect.i1.i40.i32(i40 %add_ln703_1, i32 39)" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 291 'bitselect' 'tmp_51' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 292 [1/1] (0.00ns)   --->   "%tmp_9 = call i12 @_ssdm_op_PartSelect.i12.i52.i32.i32(i52 %add_ln1192_1, i32 40, i32 51)" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 292 'partselect' 'tmp_9' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 293 [1/1] (1.92ns)   --->   "%icmp_ln785_1 = icmp ne i12 %tmp_9, 0" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 293 'icmp' 'icmp_ln785_1' <Predicate = true> <Delay = 1.92> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.92> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_55 : Operation 294 [1/1] (1.92ns)   --->   "%icmp_ln786_1 = icmp ne i12 %tmp_9, -1" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 294 'icmp' 'icmp_ln786_1' <Predicate = true> <Delay = 1.92> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.92> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_55 : Operation 295 [1/1] (3.24ns)   --->   "%add_ln1192_2 = add i52 %sext_ln78, %mul_ln1118_2" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 295 'add' 'add_ln1192_2' <Predicate = true> <Delay = 3.24> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_55 : Operation 296 [1/1] (0.00ns)   --->   "%tmp_52 = call i1 @_ssdm_op_BitSelect.i1.i52.i32(i52 %add_ln1192_2, i32 51)" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 296 'bitselect' 'tmp_52' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 297 [1/1] (2.88ns)   --->   "%add_ln703_2 = add i40 %X0_V_read, %trunc_ln1192_2" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 297 'add' 'add_ln703_2' <Predicate = true> <Delay = 2.88> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_55 : Operation 298 [1/1] (0.00ns)   --->   "%tmp_53 = call i1 @_ssdm_op_BitSelect.i1.i40.i32(i40 %add_ln703_2, i32 39)" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 298 'bitselect' 'tmp_53' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 299 [1/1] (0.00ns)   --->   "%tmp_s = call i12 @_ssdm_op_PartSelect.i12.i52.i32.i32(i52 %add_ln1192_2, i32 40, i32 51)" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 299 'partselect' 'tmp_s' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 300 [1/1] (1.92ns)   --->   "%icmp_ln785_2 = icmp ne i12 %tmp_s, 0" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 300 'icmp' 'icmp_ln785_2' <Predicate = true> <Delay = 1.92> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.92> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_55 : Operation 301 [1/1] (1.92ns)   --->   "%icmp_ln786_2 = icmp ne i12 %tmp_s, -1" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 301 'icmp' 'icmp_ln786_2' <Predicate = true> <Delay = 1.92> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.92> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_55 : Operation 302 [1/1] (3.24ns)   --->   "%add_ln1192_3 = add i52 %sext_ln78, %mul_ln1118_3" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 302 'add' 'add_ln1192_3' <Predicate = true> <Delay = 3.24> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_55 : Operation 303 [1/1] (0.00ns)   --->   "%tmp_54 = call i1 @_ssdm_op_BitSelect.i1.i52.i32(i52 %add_ln1192_3, i32 51)" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 303 'bitselect' 'tmp_54' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 304 [1/1] (2.88ns)   --->   "%add_ln703_3 = add i40 %X0_V_read, %trunc_ln1192_3" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 304 'add' 'add_ln703_3' <Predicate = true> <Delay = 2.88> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_55 : Operation 305 [1/1] (0.00ns)   --->   "%tmp_55 = call i1 @_ssdm_op_BitSelect.i1.i40.i32(i40 %add_ln703_3, i32 39)" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 305 'bitselect' 'tmp_55' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 306 [1/1] (0.00ns)   --->   "%tmp_10 = call i12 @_ssdm_op_PartSelect.i12.i52.i32.i32(i52 %add_ln1192_3, i32 40, i32 51)" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 306 'partselect' 'tmp_10' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 307 [1/1] (1.92ns)   --->   "%icmp_ln785_3 = icmp ne i12 %tmp_10, 0" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 307 'icmp' 'icmp_ln785_3' <Predicate = true> <Delay = 1.92> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.92> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_55 : Operation 308 [1/1] (1.92ns)   --->   "%icmp_ln786_3 = icmp ne i12 %tmp_10, -1" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 308 'icmp' 'icmp_ln786_3' <Predicate = true> <Delay = 1.92> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.92> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_55 : Operation 309 [1/1] (3.24ns)   --->   "%add_ln1192_4 = add i52 %sext_ln78, %mul_ln1118_4" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 309 'add' 'add_ln1192_4' <Predicate = true> <Delay = 3.24> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_55 : Operation 310 [1/1] (0.00ns)   --->   "%tmp_56 = call i1 @_ssdm_op_BitSelect.i1.i52.i32(i52 %add_ln1192_4, i32 51)" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 310 'bitselect' 'tmp_56' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 311 [1/1] (2.88ns)   --->   "%add_ln703_4 = add i40 %X0_V_read, %trunc_ln1192_4" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 311 'add' 'add_ln703_4' <Predicate = true> <Delay = 2.88> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_55 : Operation 312 [1/1] (0.00ns)   --->   "%tmp_57 = call i1 @_ssdm_op_BitSelect.i1.i40.i32(i40 %add_ln703_4, i32 39)" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 312 'bitselect' 'tmp_57' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 313 [1/1] (0.00ns)   --->   "%tmp_11 = call i12 @_ssdm_op_PartSelect.i12.i52.i32.i32(i52 %add_ln1192_4, i32 40, i32 51)" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 313 'partselect' 'tmp_11' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 314 [1/1] (1.92ns)   --->   "%icmp_ln785_4 = icmp ne i12 %tmp_11, 0" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 314 'icmp' 'icmp_ln785_4' <Predicate = true> <Delay = 1.92> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.92> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_55 : Operation 315 [1/1] (1.92ns)   --->   "%icmp_ln786_4 = icmp ne i12 %tmp_11, -1" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 315 'icmp' 'icmp_ln786_4' <Predicate = true> <Delay = 1.92> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.92> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_55 : Operation 316 [1/1] (3.24ns)   --->   "%add_ln1192_5 = add i52 %sext_ln78, %mul_ln1118_5" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 316 'add' 'add_ln1192_5' <Predicate = true> <Delay = 3.24> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_55 : Operation 317 [1/1] (0.00ns)   --->   "%tmp_58 = call i1 @_ssdm_op_BitSelect.i1.i52.i32(i52 %add_ln1192_5, i32 51)" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 317 'bitselect' 'tmp_58' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 318 [1/1] (2.88ns)   --->   "%add_ln703_5 = add i40 %X0_V_read, %trunc_ln1192_5" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 318 'add' 'add_ln703_5' <Predicate = true> <Delay = 2.88> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_55 : Operation 319 [1/1] (0.00ns)   --->   "%tmp_59 = call i1 @_ssdm_op_BitSelect.i1.i40.i32(i40 %add_ln703_5, i32 39)" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 319 'bitselect' 'tmp_59' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 320 [1/1] (0.00ns)   --->   "%tmp_12 = call i12 @_ssdm_op_PartSelect.i12.i52.i32.i32(i52 %add_ln1192_5, i32 40, i32 51)" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 320 'partselect' 'tmp_12' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 321 [1/1] (1.92ns)   --->   "%icmp_ln785_5 = icmp ne i12 %tmp_12, 0" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 321 'icmp' 'icmp_ln785_5' <Predicate = true> <Delay = 1.92> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.92> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_55 : Operation 322 [1/1] (1.92ns)   --->   "%icmp_ln786_5 = icmp ne i12 %tmp_12, -1" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 322 'icmp' 'icmp_ln786_5' <Predicate = true> <Delay = 1.92> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.92> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_55 : Operation 323 [1/1] (3.24ns)   --->   "%add_ln1192_6 = add i52 %sext_ln78, %mul_ln1118_6" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 323 'add' 'add_ln1192_6' <Predicate = true> <Delay = 3.24> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_55 : Operation 324 [1/1] (0.00ns)   --->   "%tmp_60 = call i1 @_ssdm_op_BitSelect.i1.i52.i32(i52 %add_ln1192_6, i32 51)" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 324 'bitselect' 'tmp_60' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 325 [1/1] (2.88ns)   --->   "%add_ln703_6 = add i40 %X0_V_read, %trunc_ln1192_6" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 325 'add' 'add_ln703_6' <Predicate = true> <Delay = 2.88> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_55 : Operation 326 [1/1] (0.00ns)   --->   "%tmp_61 = call i1 @_ssdm_op_BitSelect.i1.i40.i32(i40 %add_ln703_6, i32 39)" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 326 'bitselect' 'tmp_61' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 327 [1/1] (0.00ns)   --->   "%tmp_13 = call i12 @_ssdm_op_PartSelect.i12.i52.i32.i32(i52 %add_ln1192_6, i32 40, i32 51)" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 327 'partselect' 'tmp_13' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 328 [1/1] (1.92ns)   --->   "%icmp_ln785_6 = icmp ne i12 %tmp_13, 0" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 328 'icmp' 'icmp_ln785_6' <Predicate = true> <Delay = 1.92> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.92> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_55 : Operation 329 [1/1] (1.92ns)   --->   "%icmp_ln786_6 = icmp ne i12 %tmp_13, -1" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 329 'icmp' 'icmp_ln786_6' <Predicate = true> <Delay = 1.92> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.92> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_55 : Operation 330 [1/1] (3.24ns)   --->   "%add_ln1192_7 = add i52 %sext_ln78, %mul_ln1118_7" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 330 'add' 'add_ln1192_7' <Predicate = true> <Delay = 3.24> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_55 : Operation 331 [1/1] (0.00ns)   --->   "%tmp_62 = call i1 @_ssdm_op_BitSelect.i1.i52.i32(i52 %add_ln1192_7, i32 51)" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 331 'bitselect' 'tmp_62' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 332 [1/1] (2.88ns)   --->   "%add_ln703_7 = add i40 %X0_V_read, %trunc_ln1192_7" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 332 'add' 'add_ln703_7' <Predicate = true> <Delay = 2.88> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_55 : Operation 333 [1/1] (0.00ns)   --->   "%tmp_63 = call i1 @_ssdm_op_BitSelect.i1.i40.i32(i40 %add_ln703_7, i32 39)" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 333 'bitselect' 'tmp_63' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 334 [1/1] (0.00ns)   --->   "%tmp_14 = call i12 @_ssdm_op_PartSelect.i12.i52.i32.i32(i52 %add_ln1192_7, i32 40, i32 51)" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 334 'partselect' 'tmp_14' <Predicate = true> <Delay = 0.00>
ST_55 : Operation 335 [1/1] (1.92ns)   --->   "%icmp_ln785_7 = icmp ne i12 %tmp_14, 0" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 335 'icmp' 'icmp_ln785_7' <Predicate = true> <Delay = 1.92> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.92> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_55 : Operation 336 [1/1] (1.92ns)   --->   "%icmp_ln786_7 = icmp ne i12 %tmp_14, -1" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 336 'icmp' 'icmp_ln786_7' <Predicate = true> <Delay = 1.92> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.92> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 56 <SV = 55> <Delay = 3.12>
ST_56 : Operation 337 [1/1] (0.00ns) (grouped into LUT with out node and_ln785)   --->   "%or_ln785 = or i1 %tmp_49, %icmp_ln785" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 337 'or' 'or_ln785' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 338 [1/1] (0.00ns) (grouped into LUT with out node and_ln785)   --->   "%xor_ln785 = xor i1 %tmp_48, true" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 338 'xor' 'xor_ln785' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 339 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln785 = and i1 %or_ln785, %xor_ln785" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 339 'and' 'and_ln785' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 340 [1/1] (0.00ns) (grouped into LUT with out node and_ln786)   --->   "%xor_ln786_8 = xor i1 %tmp_49, true" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 340 'xor' 'xor_ln786_8' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 341 [1/1] (0.00ns) (grouped into LUT with out node and_ln786)   --->   "%or_ln786 = or i1 %icmp_ln786, %xor_ln786_8" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 341 'or' 'or_ln786' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 342 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln786 = and i1 %or_ln786, %tmp_48" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 342 'and' 'and_ln786' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 343 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_8)   --->   "%or_ln340_20 = or i1 %and_ln786, %and_ln785" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 343 'or' 'or_ln340_20' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 344 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_18)   --->   "%xor_ln340_5 = xor i1 %and_ln786, true" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 344 'xor' 'xor_ln340_5' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 345 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_18)   --->   "%or_ln340_21 = or i1 %and_ln785, %xor_ln340_5" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 345 'or' 'or_ln340_21' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 346 [1/1] (1.07ns) (out node of the LUT)   --->   "%select_ln340_8 = select i1 %or_ln340_20, i40 549755813887, i40 %add_ln703" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 346 'select' 'select_ln340_8' <Predicate = true> <Delay = 1.07> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.07> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_56 : Operation 347 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_18)   --->   "%select_ln388_8 = select i1 %and_ln786, i40 -549755813888, i40 %add_ln703" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 347 'select' 'select_ln388_8' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.07> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_56 : Operation 348 [1/1] (1.07ns) (out node of the LUT)   --->   "%select_ln340_18 = select i1 %or_ln340_21, i40 %select_ln340_8, i40 %select_ln388_8" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 348 'select' 'select_ln340_18' <Predicate = true> <Delay = 1.07> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.07> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_56 : Operation 349 [1/1] (0.00ns) (grouped into LUT with out node and_ln785_1)   --->   "%or_ln785_6 = or i1 %tmp_51, %icmp_ln785_1" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 349 'or' 'or_ln785_6' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 350 [1/1] (0.00ns) (grouped into LUT with out node and_ln785_1)   --->   "%xor_ln785_11 = xor i1 %tmp_50, true" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 350 'xor' 'xor_ln785_11' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 351 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln785_1 = and i1 %or_ln785_6, %xor_ln785_11" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 351 'and' 'and_ln785_1' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 352 [1/1] (0.00ns) (grouped into LUT with out node and_ln786_12)   --->   "%xor_ln786_9 = xor i1 %tmp_51, true" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 352 'xor' 'xor_ln786_9' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 353 [1/1] (0.00ns) (grouped into LUT with out node and_ln786_12)   --->   "%or_ln786_1 = or i1 %icmp_ln786_1, %xor_ln786_9" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 353 'or' 'or_ln786_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 354 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln786_12 = and i1 %or_ln786_1, %tmp_50" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 354 'and' 'and_ln786_12' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 355 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_9)   --->   "%or_ln340_22 = or i1 %and_ln786_12, %and_ln785_1" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 355 'or' 'or_ln340_22' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 356 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_19)   --->   "%xor_ln340_6 = xor i1 %and_ln786_12, true" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 356 'xor' 'xor_ln340_6' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 357 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_19)   --->   "%or_ln340_23 = or i1 %and_ln785_1, %xor_ln340_6" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 357 'or' 'or_ln340_23' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 358 [1/1] (1.07ns) (out node of the LUT)   --->   "%select_ln340_9 = select i1 %or_ln340_22, i40 549755813887, i40 %add_ln703_1" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 358 'select' 'select_ln340_9' <Predicate = true> <Delay = 1.07> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.07> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_56 : Operation 359 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_19)   --->   "%select_ln388_9 = select i1 %and_ln786_12, i40 -549755813888, i40 %add_ln703_1" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 359 'select' 'select_ln388_9' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.07> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_56 : Operation 360 [1/1] (1.07ns) (out node of the LUT)   --->   "%select_ln340_19 = select i1 %or_ln340_23, i40 %select_ln340_9, i40 %select_ln388_9" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 360 'select' 'select_ln340_19' <Predicate = true> <Delay = 1.07> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.07> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_56 : Operation 361 [1/1] (0.00ns) (grouped into LUT with out node and_ln785_2)   --->   "%or_ln785_7 = or i1 %tmp_53, %icmp_ln785_2" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 361 'or' 'or_ln785_7' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 362 [1/1] (0.00ns) (grouped into LUT with out node and_ln785_2)   --->   "%xor_ln785_12 = xor i1 %tmp_52, true" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 362 'xor' 'xor_ln785_12' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 363 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln785_2 = and i1 %or_ln785_7, %xor_ln785_12" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 363 'and' 'and_ln785_2' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 364 [1/1] (0.00ns) (grouped into LUT with out node and_ln786_13)   --->   "%xor_ln786_10 = xor i1 %tmp_53, true" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 364 'xor' 'xor_ln786_10' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 365 [1/1] (0.00ns) (grouped into LUT with out node and_ln786_13)   --->   "%or_ln786_2 = or i1 %icmp_ln786_2, %xor_ln786_10" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 365 'or' 'or_ln786_2' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 366 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln786_13 = and i1 %or_ln786_2, %tmp_52" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 366 'and' 'and_ln786_13' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 367 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_10)   --->   "%or_ln340_24 = or i1 %and_ln786_13, %and_ln785_2" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 367 'or' 'or_ln340_24' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 368 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_20)   --->   "%xor_ln340_7 = xor i1 %and_ln786_13, true" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 368 'xor' 'xor_ln340_7' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 369 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_20)   --->   "%or_ln340_25 = or i1 %and_ln785_2, %xor_ln340_7" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 369 'or' 'or_ln340_25' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 370 [1/1] (1.07ns) (out node of the LUT)   --->   "%select_ln340_10 = select i1 %or_ln340_24, i40 549755813887, i40 %add_ln703_2" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 370 'select' 'select_ln340_10' <Predicate = true> <Delay = 1.07> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.07> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_56 : Operation 371 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_20)   --->   "%select_ln388_10 = select i1 %and_ln786_13, i40 -549755813888, i40 %add_ln703_2" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 371 'select' 'select_ln388_10' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.07> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_56 : Operation 372 [1/1] (1.07ns) (out node of the LUT)   --->   "%select_ln340_20 = select i1 %or_ln340_25, i40 %select_ln340_10, i40 %select_ln388_10" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 372 'select' 'select_ln340_20' <Predicate = true> <Delay = 1.07> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.07> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_56 : Operation 373 [1/1] (0.00ns) (grouped into LUT with out node and_ln785_3)   --->   "%or_ln785_8 = or i1 %tmp_55, %icmp_ln785_3" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 373 'or' 'or_ln785_8' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 374 [1/1] (0.00ns) (grouped into LUT with out node and_ln785_3)   --->   "%xor_ln785_13 = xor i1 %tmp_54, true" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 374 'xor' 'xor_ln785_13' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 375 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln785_3 = and i1 %or_ln785_8, %xor_ln785_13" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 375 'and' 'and_ln785_3' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 376 [1/1] (0.00ns) (grouped into LUT with out node and_ln786_14)   --->   "%xor_ln786_11 = xor i1 %tmp_55, true" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 376 'xor' 'xor_ln786_11' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 377 [1/1] (0.00ns) (grouped into LUT with out node and_ln786_14)   --->   "%or_ln786_3 = or i1 %icmp_ln786_3, %xor_ln786_11" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 377 'or' 'or_ln786_3' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 378 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln786_14 = and i1 %or_ln786_3, %tmp_54" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 378 'and' 'and_ln786_14' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 379 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_11)   --->   "%or_ln340_26 = or i1 %and_ln786_14, %and_ln785_3" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 379 'or' 'or_ln340_26' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 380 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_21)   --->   "%xor_ln340_8 = xor i1 %and_ln786_14, true" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 380 'xor' 'xor_ln340_8' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 381 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_21)   --->   "%or_ln340_27 = or i1 %and_ln785_3, %xor_ln340_8" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 381 'or' 'or_ln340_27' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 382 [1/1] (1.07ns) (out node of the LUT)   --->   "%select_ln340_11 = select i1 %or_ln340_26, i40 549755813887, i40 %add_ln703_3" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 382 'select' 'select_ln340_11' <Predicate = true> <Delay = 1.07> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.07> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_56 : Operation 383 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_21)   --->   "%select_ln388_11 = select i1 %and_ln786_14, i40 -549755813888, i40 %add_ln703_3" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 383 'select' 'select_ln388_11' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.07> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_56 : Operation 384 [1/1] (1.07ns) (out node of the LUT)   --->   "%select_ln340_21 = select i1 %or_ln340_27, i40 %select_ln340_11, i40 %select_ln388_11" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 384 'select' 'select_ln340_21' <Predicate = true> <Delay = 1.07> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.07> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_56 : Operation 385 [1/1] (0.00ns) (grouped into LUT with out node and_ln785_4)   --->   "%or_ln785_9 = or i1 %tmp_57, %icmp_ln785_4" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 385 'or' 'or_ln785_9' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 386 [1/1] (0.00ns) (grouped into LUT with out node and_ln785_4)   --->   "%xor_ln785_14 = xor i1 %tmp_56, true" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 386 'xor' 'xor_ln785_14' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 387 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln785_4 = and i1 %or_ln785_9, %xor_ln785_14" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 387 'and' 'and_ln785_4' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 388 [1/1] (0.00ns) (grouped into LUT with out node and_ln786_15)   --->   "%xor_ln786_12 = xor i1 %tmp_57, true" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 388 'xor' 'xor_ln786_12' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 389 [1/1] (0.00ns) (grouped into LUT with out node and_ln786_15)   --->   "%or_ln786_4 = or i1 %icmp_ln786_4, %xor_ln786_12" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 389 'or' 'or_ln786_4' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 390 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln786_15 = and i1 %or_ln786_4, %tmp_56" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 390 'and' 'and_ln786_15' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 391 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_12)   --->   "%or_ln340_28 = or i1 %and_ln786_15, %and_ln785_4" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 391 'or' 'or_ln340_28' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 392 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_22)   --->   "%xor_ln340_9 = xor i1 %and_ln786_15, true" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 392 'xor' 'xor_ln340_9' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 393 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_22)   --->   "%or_ln340_29 = or i1 %and_ln785_4, %xor_ln340_9" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 393 'or' 'or_ln340_29' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 394 [1/1] (1.07ns) (out node of the LUT)   --->   "%select_ln340_12 = select i1 %or_ln340_28, i40 549755813887, i40 %add_ln703_4" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 394 'select' 'select_ln340_12' <Predicate = true> <Delay = 1.07> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.07> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_56 : Operation 395 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_22)   --->   "%select_ln388_12 = select i1 %and_ln786_15, i40 -549755813888, i40 %add_ln703_4" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 395 'select' 'select_ln388_12' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.07> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_56 : Operation 396 [1/1] (1.07ns) (out node of the LUT)   --->   "%select_ln340_22 = select i1 %or_ln340_29, i40 %select_ln340_12, i40 %select_ln388_12" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 396 'select' 'select_ln340_22' <Predicate = true> <Delay = 1.07> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.07> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_56 : Operation 397 [1/1] (0.00ns) (grouped into LUT with out node and_ln785_5)   --->   "%or_ln785_10 = or i1 %tmp_59, %icmp_ln785_5" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 397 'or' 'or_ln785_10' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 398 [1/1] (0.00ns) (grouped into LUT with out node and_ln785_5)   --->   "%xor_ln785_15 = xor i1 %tmp_58, true" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 398 'xor' 'xor_ln785_15' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 399 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln785_5 = and i1 %or_ln785_10, %xor_ln785_15" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 399 'and' 'and_ln785_5' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 400 [1/1] (0.00ns) (grouped into LUT with out node and_ln786_16)   --->   "%xor_ln786_13 = xor i1 %tmp_59, true" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 400 'xor' 'xor_ln786_13' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 401 [1/1] (0.00ns) (grouped into LUT with out node and_ln786_16)   --->   "%or_ln786_5 = or i1 %icmp_ln786_5, %xor_ln786_13" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 401 'or' 'or_ln786_5' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 402 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln786_16 = and i1 %or_ln786_5, %tmp_58" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 402 'and' 'and_ln786_16' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 403 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_13)   --->   "%or_ln340_30 = or i1 %and_ln786_16, %and_ln785_5" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 403 'or' 'or_ln340_30' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 404 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_23)   --->   "%xor_ln340_10 = xor i1 %and_ln786_16, true" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 404 'xor' 'xor_ln340_10' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 405 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_23)   --->   "%or_ln340_31 = or i1 %and_ln785_5, %xor_ln340_10" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 405 'or' 'or_ln340_31' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 406 [1/1] (1.07ns) (out node of the LUT)   --->   "%select_ln340_13 = select i1 %or_ln340_30, i40 549755813887, i40 %add_ln703_5" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 406 'select' 'select_ln340_13' <Predicate = true> <Delay = 1.07> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.07> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_56 : Operation 407 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_23)   --->   "%select_ln388_13 = select i1 %and_ln786_16, i40 -549755813888, i40 %add_ln703_5" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 407 'select' 'select_ln388_13' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.07> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_56 : Operation 408 [1/1] (1.07ns) (out node of the LUT)   --->   "%select_ln340_23 = select i1 %or_ln340_31, i40 %select_ln340_13, i40 %select_ln388_13" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 408 'select' 'select_ln340_23' <Predicate = true> <Delay = 1.07> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.07> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_56 : Operation 409 [1/1] (0.00ns) (grouped into LUT with out node and_ln785_6)   --->   "%or_ln785_11 = or i1 %tmp_61, %icmp_ln785_6" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 409 'or' 'or_ln785_11' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 410 [1/1] (0.00ns) (grouped into LUT with out node and_ln785_6)   --->   "%xor_ln785_16 = xor i1 %tmp_60, true" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 410 'xor' 'xor_ln785_16' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 411 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln785_6 = and i1 %or_ln785_11, %xor_ln785_16" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 411 'and' 'and_ln785_6' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 412 [1/1] (0.00ns) (grouped into LUT with out node and_ln786_17)   --->   "%xor_ln786_14 = xor i1 %tmp_61, true" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 412 'xor' 'xor_ln786_14' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 413 [1/1] (0.00ns) (grouped into LUT with out node and_ln786_17)   --->   "%or_ln786_6 = or i1 %icmp_ln786_6, %xor_ln786_14" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 413 'or' 'or_ln786_6' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 414 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln786_17 = and i1 %or_ln786_6, %tmp_60" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 414 'and' 'and_ln786_17' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 415 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_14)   --->   "%or_ln340_32 = or i1 %and_ln786_17, %and_ln785_6" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 415 'or' 'or_ln340_32' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 416 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_24)   --->   "%xor_ln340_11 = xor i1 %and_ln786_17, true" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 416 'xor' 'xor_ln340_11' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 417 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_24)   --->   "%or_ln340_33 = or i1 %and_ln785_6, %xor_ln340_11" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 417 'or' 'or_ln340_33' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 418 [1/1] (1.07ns) (out node of the LUT)   --->   "%select_ln340_14 = select i1 %or_ln340_32, i40 549755813887, i40 %add_ln703_6" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 418 'select' 'select_ln340_14' <Predicate = true> <Delay = 1.07> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.07> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_56 : Operation 419 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_24)   --->   "%select_ln388_14 = select i1 %and_ln786_17, i40 -549755813888, i40 %add_ln703_6" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 419 'select' 'select_ln388_14' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.07> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_56 : Operation 420 [1/1] (1.07ns) (out node of the LUT)   --->   "%select_ln340_24 = select i1 %or_ln340_33, i40 %select_ln340_14, i40 %select_ln388_14" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 420 'select' 'select_ln340_24' <Predicate = true> <Delay = 1.07> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.07> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_56 : Operation 421 [1/1] (0.00ns) (grouped into LUT with out node and_ln785_7)   --->   "%or_ln785_12 = or i1 %tmp_63, %icmp_ln785_7" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 421 'or' 'or_ln785_12' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 422 [1/1] (0.00ns) (grouped into LUT with out node and_ln785_7)   --->   "%xor_ln785_17 = xor i1 %tmp_62, true" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 422 'xor' 'xor_ln785_17' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 423 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln785_7 = and i1 %or_ln785_12, %xor_ln785_17" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 423 'and' 'and_ln785_7' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 424 [1/1] (0.00ns) (grouped into LUT with out node and_ln786_18)   --->   "%xor_ln786_15 = xor i1 %tmp_63, true" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 424 'xor' 'xor_ln786_15' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 425 [1/1] (0.00ns) (grouped into LUT with out node and_ln786_18)   --->   "%or_ln786_7 = or i1 %icmp_ln786_7, %xor_ln786_15" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 425 'or' 'or_ln786_7' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 426 [1/1] (0.97ns) (out node of the LUT)   --->   "%and_ln786_18 = and i1 %or_ln786_7, %tmp_62" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 426 'and' 'and_ln786_18' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 427 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_15)   --->   "%or_ln340_34 = or i1 %and_ln786_18, %and_ln785_7" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 427 'or' 'or_ln340_34' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 428 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_25)   --->   "%xor_ln340_12 = xor i1 %and_ln786_18, true" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 428 'xor' 'xor_ln340_12' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 429 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_25)   --->   "%or_ln340_35 = or i1 %and_ln785_7, %xor_ln340_12" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 429 'or' 'or_ln340_35' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_56 : Operation 430 [1/1] (1.07ns) (out node of the LUT)   --->   "%select_ln340_15 = select i1 %or_ln340_34, i40 549755813887, i40 %add_ln703_7" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 430 'select' 'select_ln340_15' <Predicate = true> <Delay = 1.07> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.07> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_56 : Operation 431 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_25)   --->   "%select_ln388_15 = select i1 %and_ln786_18, i40 -549755813888, i40 %add_ln703_7" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 431 'select' 'select_ln388_15' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.07> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_56 : Operation 432 [1/1] (1.07ns) (out node of the LUT)   --->   "%select_ln340_25 = select i1 %or_ln340_35, i40 %select_ln340_15, i40 %select_ln388_15" [mandelbrotHLS/mandel.cpp:81]   --->   Operation 432 'select' 'select_ln340_25' <Predicate = true> <Delay = 1.07> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.07> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 57 <SV = 56> <Delay = 5.25>
ST_57 : Operation 433 [2/2] (5.25ns)   --->   "%tmp2 = call fastcc i16 @mandel_calc(i40 %select_ln340_18, i40 %p_Val2_30, i16 %maxIter_read)" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 433 'call' 'tmp2' <Predicate = true> <Delay = 5.25> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_57 : Operation 434 [2/2] (5.25ns)   --->   "%tmp_1 = call fastcc i16 @mandel_calc(i40 %select_ln340_19, i40 %p_Val2_30, i16 %maxIter_read)" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 434 'call' 'tmp_1' <Predicate = true> <Delay = 5.25> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_57 : Operation 435 [2/2] (5.25ns)   --->   "%tmp_2 = call fastcc i16 @mandel_calc(i40 %select_ln340_20, i40 %p_Val2_30, i16 %maxIter_read)" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 435 'call' 'tmp_2' <Predicate = true> <Delay = 5.25> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_57 : Operation 436 [2/2] (5.25ns)   --->   "%tmp_3 = call fastcc i16 @mandel_calc(i40 %select_ln340_21, i40 %p_Val2_30, i16 %maxIter_read)" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 436 'call' 'tmp_3' <Predicate = true> <Delay = 5.25> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_57 : Operation 437 [2/2] (5.25ns)   --->   "%tmp_4 = call fastcc i16 @mandel_calc(i40 %select_ln340_22, i40 %p_Val2_30, i16 %maxIter_read)" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 437 'call' 'tmp_4' <Predicate = true> <Delay = 5.25> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_57 : Operation 438 [2/2] (5.25ns)   --->   "%tmp_5 = call fastcc i16 @mandel_calc(i40 %select_ln340_23, i40 %p_Val2_30, i16 %maxIter_read)" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 438 'call' 'tmp_5' <Predicate = true> <Delay = 5.25> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_57 : Operation 439 [2/2] (5.25ns)   --->   "%tmp_6 = call fastcc i16 @mandel_calc(i40 %select_ln340_24, i40 %p_Val2_30, i16 %maxIter_read)" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 439 'call' 'tmp_6' <Predicate = true> <Delay = 5.25> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_57 : Operation 440 [2/2] (5.25ns)   --->   "%tmp_7 = call fastcc i16 @mandel_calc(i40 %select_ln340_25, i40 %p_Val2_30, i16 %maxIter_read)" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 440 'call' 'tmp_7' <Predicate = true> <Delay = 5.25> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 58 <SV = 57> <Delay = 5.25>
ST_58 : Operation 441 [1/2] (3.32ns)   --->   "%tmp2 = call fastcc i16 @mandel_calc(i40 %select_ln340_18, i40 %p_Val2_30, i16 %maxIter_read)" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 441 'call' 'tmp2' <Predicate = true> <Delay = 3.32> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_58 : Operation 442 [1/1] (5.25ns)   --->   "%buf_addr_req = call i1 @_ssdm_op_WriteReq.m_axi.i16P(i16* %buf_addr, i32 8)" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 442 'writereq' 'buf_addr_req' <Predicate = true> <Delay = 5.25> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_58 : Operation 443 [1/2] (3.32ns)   --->   "%tmp_1 = call fastcc i16 @mandel_calc(i40 %select_ln340_19, i40 %p_Val2_30, i16 %maxIter_read)" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 443 'call' 'tmp_1' <Predicate = true> <Delay = 3.32> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_58 : Operation 444 [1/2] (3.32ns)   --->   "%tmp_2 = call fastcc i16 @mandel_calc(i40 %select_ln340_20, i40 %p_Val2_30, i16 %maxIter_read)" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 444 'call' 'tmp_2' <Predicate = true> <Delay = 3.32> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_58 : Operation 445 [1/2] (3.32ns)   --->   "%tmp_3 = call fastcc i16 @mandel_calc(i40 %select_ln340_21, i40 %p_Val2_30, i16 %maxIter_read)" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 445 'call' 'tmp_3' <Predicate = true> <Delay = 3.32> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_58 : Operation 446 [1/2] (3.32ns)   --->   "%tmp_4 = call fastcc i16 @mandel_calc(i40 %select_ln340_22, i40 %p_Val2_30, i16 %maxIter_read)" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 446 'call' 'tmp_4' <Predicate = true> <Delay = 3.32> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_58 : Operation 447 [1/2] (3.32ns)   --->   "%tmp_5 = call fastcc i16 @mandel_calc(i40 %select_ln340_23, i40 %p_Val2_30, i16 %maxIter_read)" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 447 'call' 'tmp_5' <Predicate = true> <Delay = 3.32> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_58 : Operation 448 [1/2] (3.32ns)   --->   "%tmp_6 = call fastcc i16 @mandel_calc(i40 %select_ln340_24, i40 %p_Val2_30, i16 %maxIter_read)" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 448 'call' 'tmp_6' <Predicate = true> <Delay = 3.32> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_58 : Operation 449 [1/2] (3.32ns)   --->   "%tmp_7 = call fastcc i16 @mandel_calc(i40 %select_ln340_25, i40 %p_Val2_30, i16 %maxIter_read)" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 449 'call' 'tmp_7' <Predicate = true> <Delay = 3.32> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 59 <SV = 58> <Delay = 5.25>
ST_59 : Operation 450 [1/1] (5.25ns)   --->   "call void @_ssdm_op_Write.m_axi.i16P(i16* %buf_addr, i16 %tmp2, i2 -1)" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 450 'write' <Predicate = true> <Delay = 5.25> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 60 <SV = 59> <Delay = 5.25>
ST_60 : Operation 451 [1/1] (5.25ns)   --->   "call void @_ssdm_op_Write.m_axi.i16P(i16* %buf_addr, i16 %tmp_1, i2 -1)" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 451 'write' <Predicate = true> <Delay = 5.25> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 61 <SV = 60> <Delay = 5.25>
ST_61 : Operation 452 [1/1] (5.25ns)   --->   "call void @_ssdm_op_Write.m_axi.i16P(i16* %buf_addr, i16 %tmp_2, i2 -1)" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 452 'write' <Predicate = true> <Delay = 5.25> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 62 <SV = 61> <Delay = 5.25>
ST_62 : Operation 453 [1/1] (5.25ns)   --->   "call void @_ssdm_op_Write.m_axi.i16P(i16* %buf_addr, i16 %tmp_3, i2 -1)" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 453 'write' <Predicate = true> <Delay = 5.25> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 63 <SV = 62> <Delay = 5.25>
ST_63 : Operation 454 [1/1] (5.25ns)   --->   "call void @_ssdm_op_Write.m_axi.i16P(i16* %buf_addr, i16 %tmp_4, i2 -1)" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 454 'write' <Predicate = true> <Delay = 5.25> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 64 <SV = 63> <Delay = 5.25>
ST_64 : Operation 455 [1/1] (5.25ns)   --->   "call void @_ssdm_op_Write.m_axi.i16P(i16* %buf_addr, i16 %tmp_5, i2 -1)" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 455 'write' <Predicate = true> <Delay = 5.25> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 65 <SV = 64> <Delay = 5.25>
ST_65 : Operation 456 [1/1] (5.25ns)   --->   "call void @_ssdm_op_Write.m_axi.i16P(i16* %buf_addr, i16 %tmp_6, i2 -1)" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 456 'write' <Predicate = true> <Delay = 5.25> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 66 <SV = 65> <Delay = 5.25>
ST_66 : Operation 457 [1/1] (5.25ns)   --->   "call void @_ssdm_op_Write.m_axi.i16P(i16* %buf_addr, i16 %tmp_7, i2 -1)" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 457 'write' <Predicate = true> <Delay = 5.25> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 67 <SV = 66> <Delay = 5.25>
ST_67 : Operation 458 [5/5] (5.25ns)   --->   "%buf_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i16P(i16* %buf_addr)" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 458 'writeresp' 'buf_addr_resp' <Predicate = true> <Delay = 5.25> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 68 <SV = 67> <Delay = 5.25>
ST_68 : Operation 459 [4/5] (5.25ns)   --->   "%buf_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i16P(i16* %buf_addr)" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 459 'writeresp' 'buf_addr_resp' <Predicate = true> <Delay = 5.25> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 69 <SV = 68> <Delay = 5.25>
ST_69 : Operation 460 [3/5] (5.25ns)   --->   "%buf_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i16P(i16* %buf_addr)" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 460 'writeresp' 'buf_addr_resp' <Predicate = true> <Delay = 5.25> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 70 <SV = 69> <Delay = 5.25>
ST_70 : Operation 461 [2/5] (5.25ns)   --->   "%buf_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i16P(i16* %buf_addr)" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 461 'writeresp' 'buf_addr_resp' <Predicate = true> <Delay = 5.25> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 71 <SV = 70> <Delay = 5.25>
ST_71 : Operation 462 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([6 x i8]* @p_str8) nounwind" [mandelbrotHLS/mandel.cpp:79]   --->   Operation 462 'specloopname' <Predicate = true> <Delay = 0.00>
ST_71 : Operation 463 [1/5] (5.25ns)   --->   "%buf_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i16P(i16* %buf_addr)" [mandelbrotHLS/mandel.cpp:85]   --->   Operation 463 'writeresp' 'buf_addr_resp' <Predicate = true> <Delay = 5.25> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_71 : Operation 464 [1/1] (0.00ns)   --->   "br label %2" [mandelbrotHLS/mandel.cpp:79]   --->   Operation 464 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 6ns, clock uncertainty: 0.75ns.

 <State 1>: 3.88ns
The critical path consists of the following:
	s_axi read on port 'X1_V' (mandelbrotHLS/mandel.cpp:57) [22]  (1 ns)
	'sub' operation ('ret.V', mandelbrotHLS/mandel.cpp:59) [38]  (2.88 ns)

 <State 2>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:59) [40]  (4.41 ns)

 <State 3>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:59) [40]  (4.41 ns)

 <State 4>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:59) [40]  (4.41 ns)

 <State 5>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:59) [40]  (4.41 ns)

 <State 6>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:59) [40]  (4.41 ns)

 <State 7>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:59) [40]  (4.41 ns)

 <State 8>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:59) [40]  (4.41 ns)

 <State 9>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:59) [40]  (4.41 ns)

 <State 10>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:59) [40]  (4.41 ns)

 <State 11>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:59) [40]  (4.41 ns)

 <State 12>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:59) [40]  (4.41 ns)

 <State 13>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:59) [40]  (4.41 ns)

 <State 14>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:59) [40]  (4.41 ns)

 <State 15>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:59) [40]  (4.41 ns)

 <State 16>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:59) [40]  (4.41 ns)

 <State 17>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:59) [40]  (4.41 ns)

 <State 18>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:59) [40]  (4.41 ns)

 <State 19>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:59) [40]  (4.41 ns)

 <State 20>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:59) [40]  (4.41 ns)

 <State 21>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:59) [40]  (4.41 ns)

 <State 22>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:59) [40]  (4.41 ns)

 <State 23>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:59) [40]  (4.41 ns)

 <State 24>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:59) [40]  (4.41 ns)

 <State 25>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:59) [40]  (4.41 ns)

 <State 26>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:59) [40]  (4.41 ns)

 <State 27>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:59) [40]  (4.41 ns)

 <State 28>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:59) [40]  (4.41 ns)

 <State 29>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:59) [40]  (4.41 ns)

 <State 30>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:59) [40]  (4.41 ns)

 <State 31>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:59) [40]  (4.41 ns)

 <State 32>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:59) [40]  (4.41 ns)

 <State 33>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:59) [40]  (4.41 ns)

 <State 34>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:59) [40]  (4.41 ns)

 <State 35>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:59) [40]  (4.41 ns)

 <State 36>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:59) [40]  (4.41 ns)

 <State 37>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:59) [40]  (4.41 ns)

 <State 38>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:59) [40]  (4.41 ns)

 <State 39>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:59) [40]  (4.41 ns)

 <State 40>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:59) [40]  (4.41 ns)

 <State 41>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:59) [40]  (4.41 ns)

 <State 42>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:59) [40]  (4.41 ns)

 <State 43>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:59) [40]  (4.41 ns)

 <State 44>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:59) [40]  (4.41 ns)

 <State 45>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:59) [40]  (4.41 ns)

 <State 46>: 4.41ns
The critical path consists of the following:
	'sdiv' operation ('r.V', mandelbrotHLS/mandel.cpp:59) [40]  (4.41 ns)

 <State 47>: 2.15ns
The critical path consists of the following:
	'xor' operation ('xor_ln786', mandelbrotHLS/mandel.cpp:59) [44]  (0 ns)
	'and' operation ('underflow', mandelbrotHLS/mandel.cpp:59) [45]  (0 ns)
	'select' operation ('select_ln388', mandelbrotHLS/mandel.cpp:59) [50]  (1.07 ns)
	'select' operation ('__Val2__', mandelbrotHLS/mandel.cpp:59) [51]  (1.07 ns)

 <State 48>: 2.42ns
The critical path consists of the following:
	'phi' operation ('index') with incoming values : ('index', mandelbrotHLS/mandel.cpp:85) [68]  (0 ns)
	'add' operation ('index', mandelbrotHLS/mandel.cpp:85) [77]  (2.42 ns)

 <State 49>: 5.03ns
The critical path consists of the following:
	'sub' operation ('ret.V', mandelbrotHLS/mandel.cpp:90) [295]  (2.88 ns)
	'xor' operation ('xor_ln786_7', mandelbrotHLS/mandel.cpp:90) [299]  (0 ns)
	'and' operation ('underflow', mandelbrotHLS/mandel.cpp:90) [300]  (0 ns)
	'select' operation ('select_ln388_7', mandelbrotHLS/mandel.cpp:90) [305]  (1.07 ns)
	'select' operation ('select_ln340_17', mandelbrotHLS/mandel.cpp:90) [306]  (1.07 ns)

 <State 50>: 3.9ns
The critical path consists of the following:
	'mul' operation ('mul_ln1118', mandelbrotHLS/mandel.cpp:81) [88]  (3.9 ns)

 <State 51>: 3.9ns
The critical path consists of the following:
	'mul' operation ('mul_ln1118', mandelbrotHLS/mandel.cpp:81) [88]  (3.9 ns)

 <State 52>: 3.9ns
The critical path consists of the following:
	'mul' operation ('mul_ln1118', mandelbrotHLS/mandel.cpp:81) [88]  (3.9 ns)

 <State 53>: 3.9ns
The critical path consists of the following:
	'mul' operation ('mul_ln1118', mandelbrotHLS/mandel.cpp:81) [88]  (3.9 ns)

 <State 54>: 3.9ns
The critical path consists of the following:
	'mul' operation ('mul_ln1118', mandelbrotHLS/mandel.cpp:81) [88]  (3.9 ns)

 <State 55>: 5.17ns
The critical path consists of the following:
	'add' operation ('add_ln1192', mandelbrotHLS/mandel.cpp:81) [90]  (3.25 ns)
	'icmp' operation ('icmp_ln785', mandelbrotHLS/mandel.cpp:81) [95]  (1.93 ns)

 <State 56>: 3.13ns
The critical path consists of the following:
	'or' operation ('or_ln785', mandelbrotHLS/mandel.cpp:81) [96]  (0 ns)
	'and' operation ('and_ln785', mandelbrotHLS/mandel.cpp:81) [98]  (0.978 ns)
	'or' operation ('or_ln340_20', mandelbrotHLS/mandel.cpp:81) [103]  (0 ns)
	'select' operation ('select_ln340_8', mandelbrotHLS/mandel.cpp:81) [106]  (1.07 ns)
	'select' operation ('select_ln340_18', mandelbrotHLS/mandel.cpp:81) [108]  (1.07 ns)

 <State 57>: 5.25ns
The critical path consists of the following:
	'call' operation ('tmp2', mandelbrotHLS/mandel.cpp:85) to 'mandel_calc' [109]  (5.25 ns)

 <State 58>: 5.25ns
The critical path consists of the following:
	bus request on port 'buf_r' (mandelbrotHLS/mandel.cpp:85) [112]  (5.25 ns)

 <State 59>: 5.25ns
The critical path consists of the following:
	bus write on port 'buf_r' (mandelbrotHLS/mandel.cpp:85) [113]  (5.25 ns)

 <State 60>: 5.25ns
The critical path consists of the following:
	bus write on port 'buf_r' (mandelbrotHLS/mandel.cpp:85) [138]  (5.25 ns)

 <State 61>: 5.25ns
The critical path consists of the following:
	bus write on port 'buf_r' (mandelbrotHLS/mandel.cpp:85) [163]  (5.25 ns)

 <State 62>: 5.25ns
The critical path consists of the following:
	bus write on port 'buf_r' (mandelbrotHLS/mandel.cpp:85) [188]  (5.25 ns)

 <State 63>: 5.25ns
The critical path consists of the following:
	bus write on port 'buf_r' (mandelbrotHLS/mandel.cpp:85) [213]  (5.25 ns)

 <State 64>: 5.25ns
The critical path consists of the following:
	bus write on port 'buf_r' (mandelbrotHLS/mandel.cpp:85) [238]  (5.25 ns)

 <State 65>: 5.25ns
The critical path consists of the following:
	bus write on port 'buf_r' (mandelbrotHLS/mandel.cpp:85) [263]  (5.25 ns)

 <State 66>: 5.25ns
The critical path consists of the following:
	bus write on port 'buf_r' (mandelbrotHLS/mandel.cpp:85) [289]  (5.25 ns)

 <State 67>: 5.25ns
The critical path consists of the following:
	bus access on port 'buf_r' (mandelbrotHLS/mandel.cpp:85) [290]  (5.25 ns)

 <State 68>: 5.25ns
The critical path consists of the following:
	bus access on port 'buf_r' (mandelbrotHLS/mandel.cpp:85) [290]  (5.25 ns)

 <State 69>: 5.25ns
The critical path consists of the following:
	bus access on port 'buf_r' (mandelbrotHLS/mandel.cpp:85) [290]  (5.25 ns)

 <State 70>: 5.25ns
The critical path consists of the following:
	bus access on port 'buf_r' (mandelbrotHLS/mandel.cpp:85) [290]  (5.25 ns)

 <State 71>: 5.25ns
The critical path consists of the following:
	bus access on port 'buf_r' (mandelbrotHLS/mandel.cpp:85) [290]  (5.25 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48
	State 49
	State 50
	State 51
	State 52
	State 53
	State 54
	State 55
	State 56
	State 57
	State 58
	State 59
	State 60
	State 61
	State 62
	State 63
	State 64
	State 65
	State 66
	State 67
	State 68
	State 69
	State 70
	State 71


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
