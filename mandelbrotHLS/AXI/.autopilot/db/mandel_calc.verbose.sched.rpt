

================================================================
== Vivado HLS Report for 'mandel_calc'
================================================================
* Date:           Tue Jun  4 11:19:26 2019

* Version:        2019.1 (Build 2552052 on Fri May 24 15:28:33 MDT 2019)
* Project:        mandelbrotHLS
* Solution:       AXI
* Product family: artix7
* Target device:  xc7a100t-csg324-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   8.00|     6.427|        1.50|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-------+-----+-------+---------+
    |   Latency   |   Interval  | Pipeline|
    | min |  max  | min |  max  |   Type  |
    +-----+-------+-----+-------+---------+
    |   13|  26026|   13|  26026|   none  |
    +-----+-------+-----+-------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------------+-----+-------+----------+-----------+-----------+----------+----------+
        |                    |   Latency   | Iteration|  Initiation Interval  |   Trip   |          |
        |      Loop Name     | min |  max  |  Latency |  achieved |   target  |   Count  | Pipelined|
        +--------------------+-----+-------+----------+-----------+-----------+----------+----------+
        |- mandel_calc_loop  |    0|  26012|        13|          -|          -| 0 ~ 2000 |    no    |
        +--------------------+-----+-------+----------+-----------+-----------+----------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 15
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 15 3 
3 --> 4 15 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 15 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 3 

* FSM state operations: 

State 1 <SV = 0> <Delay = 5.69>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%y_in_V_read = call i36 @_ssdm_op_Read.ap_auto.i36(i36 %y_in_V)" [mandelbrotHLS/mandel.cpp:19]   --->   Operation 16 'read' 'y_in_V_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%x_in_V_read = call i36 @_ssdm_op_Read.ap_auto.i36(i36 %x_in_V)" [mandelbrotHLS/mandel.cpp:19]   --->   Operation 17 'read' 'x_in_V_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [2/2] (5.69ns)   --->   "%tmp = call fastcc i1 @pretest(i36 %x_in_V_read, i36 %y_in_V_read)" [mandelbrotHLS/mandel.cpp:26]   --->   Operation 18 'call' 'tmp' <Predicate = true> <Delay = 5.69> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 2 <SV = 1> <Delay = 5.56>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%maxIter_read = call i16 @_ssdm_op_Read.ap_auto.i16(i16 %maxIter)" [mandelbrotHLS/mandel.cpp:19]   --->   Operation 19 'read' 'maxIter_read' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 20 [1/2] (3.89ns)   --->   "%tmp = call fastcc i1 @pretest(i36 %x_in_V_read, i36 %y_in_V_read)" [mandelbrotHLS/mandel.cpp:26]   --->   Operation 20 'call' 'tmp' <Predicate = true> <Delay = 3.89> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 21 [1/1] (1.66ns)   --->   "br i1 %tmp, label %.loopexit, label %.preheader" [mandelbrotHLS/mandel.cpp:26]   --->   Operation 21 'br' <Predicate = true> <Delay = 1.66>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%rhs_V_2 = sext i36 %x_in_V_read to i38" [mandelbrotHLS/mandel.cpp:36]   --->   Operation 22 'sext' 'rhs_V_2' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%rhs_V_3 = call i68 @_ssdm_op_BitConcatenate.i68.i36.i32(i36 %y_in_V_read, i32 0)" [mandelbrotHLS/mandel.cpp:37]   --->   Operation 23 'bitconcatenate' 'rhs_V_3' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%sext_ln728 = sext i68 %rhs_V_3 to i73" [mandelbrotHLS/mandel.cpp:37]   --->   Operation 24 'sext' 'sext_ln728' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (1.66ns)   --->   "br label %1" [mandelbrotHLS/mandel.cpp:29]   --->   Operation 25 'br' <Predicate = (!tmp)> <Delay = 1.66>

State 3 <SV = 2> <Delay = 5.69>
ST_3 : Operation 26 [1/1] (0.00ns)   --->   "%y_0 = phi i36 [ 0, %.preheader ], [ %y_V, %mandel_calc_loop_end ]"   --->   Operation 26 'phi' 'y_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 27 [1/1] (0.00ns)   --->   "%x_0 = phi i36 [ 0, %.preheader ], [ %x_V, %mandel_calc_loop_end ]"   --->   Operation 27 'phi' 'x_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 28 [1/1] (0.00ns)   --->   "%iter_0 = phi i16 [ 0, %.preheader ], [ %iter, %mandel_calc_loop_end ]"   --->   Operation 28 'phi' 'iter_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 29 [1/1] (2.38ns)   --->   "%icmp_ln29 = icmp ult i16 %iter_0, %maxIter_read" [mandelbrotHLS/mandel.cpp:29]   --->   Operation 29 'icmp' 'icmp_ln29' <Predicate = true> <Delay = 2.38> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 30 [1/1] (2.14ns)   --->   "%iter = add i16 %iter_0, 1" [mandelbrotHLS/mandel.cpp:29]   --->   Operation 30 'add' 'iter' <Predicate = true> <Delay = 2.14> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 31 [1/1] (1.66ns)   --->   "br i1 %icmp_ln29, label %mandel_calc_loop_begin, label %.loopexit.loopexit" [mandelbrotHLS/mandel.cpp:29]   --->   Operation 31 'br' <Predicate = true> <Delay = 1.66>
ST_3 : Operation 32 [1/1] (0.00ns)   --->   "%r_V = sext i36 %x_0 to i72" [mandelbrotHLS/mandel.cpp:30]   --->   Operation 32 'sext' 'r_V' <Predicate = (icmp_ln29)> <Delay = 0.00>
ST_3 : Operation 33 [3/3] (5.69ns)   --->   "%r_V_17 = mul nsw i72 %r_V, %r_V" [mandelbrotHLS/mandel.cpp:30]   --->   Operation 33 'mul' 'r_V_17' <Predicate = (icmp_ln29)> <Delay = 5.69> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 5.69> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 34 [1/1] (0.00ns)   --->   "%r_V_13 = sext i36 %y_0 to i72" [mandelbrotHLS/mandel.cpp:31]   --->   Operation 34 'sext' 'r_V_13' <Predicate = (icmp_ln29)> <Delay = 0.00>
ST_3 : Operation 35 [3/3] (5.69ns)   --->   "%r_V_18 = mul nsw i72 %r_V_13, %r_V_13" [mandelbrotHLS/mandel.cpp:31]   --->   Operation 35 'mul' 'r_V_18' <Predicate = (icmp_ln29)> <Delay = 5.69> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 5.69> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 5.69>
ST_4 : Operation 36 [2/3] (5.69ns)   --->   "%r_V_17 = mul nsw i72 %r_V, %r_V" [mandelbrotHLS/mandel.cpp:30]   --->   Operation 36 'mul' 'r_V_17' <Predicate = true> <Delay = 5.69> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 5.69> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 37 [2/3] (5.69ns)   --->   "%r_V_18 = mul nsw i72 %r_V_13, %r_V_13" [mandelbrotHLS/mandel.cpp:31]   --->   Operation 37 'mul' 'r_V_18' <Predicate = true> <Delay = 5.69> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 5.69> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 5.69>
ST_5 : Operation 38 [1/3] (5.69ns)   --->   "%r_V_17 = mul nsw i72 %r_V, %r_V" [mandelbrotHLS/mandel.cpp:30]   --->   Operation 38 'mul' 'r_V_17' <Predicate = true> <Delay = 5.69> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 5.69> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 39 [1/1] (0.00ns)   --->   "%p_Result_s = call i1 @_ssdm_op_BitSelect.i1.i72.i32(i72 %r_V_17, i32 71)" [mandelbrotHLS/mandel.cpp:30]   --->   Operation 39 'bitselect' 'p_Result_s' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 40 [1/1] (0.00ns)   --->   "%trunc_ln718 = trunc i72 %r_V_17 to i31" [mandelbrotHLS/mandel.cpp:30]   --->   Operation 40 'trunc' 'trunc_ln718' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 41 [1/1] (0.00ns)   --->   "%p_Result_s_16 = call i3 @_ssdm_op_PartSelect.i3.i72.i32.i32(i72 %r_V_17, i32 69, i32 71)" [mandelbrotHLS/mandel.cpp:30]   --->   Operation 41 'partselect' 'p_Result_s_16' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 42 [1/1] (0.00ns)   --->   "%p_Result_5 = call i4 @_ssdm_op_PartSelect.i4.i72.i32.i32(i72 %r_V_17, i32 68, i32 71)" [mandelbrotHLS/mandel.cpp:30]   --->   Operation 42 'partselect' 'p_Result_5' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 43 [1/3] (5.69ns)   --->   "%r_V_18 = mul nsw i72 %r_V_13, %r_V_13" [mandelbrotHLS/mandel.cpp:31]   --->   Operation 43 'mul' 'r_V_18' <Predicate = true> <Delay = 5.69> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 5.69> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 44 [1/1] (0.00ns)   --->   "%p_Result_13 = call i1 @_ssdm_op_BitSelect.i1.i72.i32(i72 %r_V_18, i32 71)" [mandelbrotHLS/mandel.cpp:31]   --->   Operation 44 'bitselect' 'p_Result_13' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 45 [1/1] (0.00ns)   --->   "%trunc_ln718_2 = trunc i72 %r_V_18 to i31" [mandelbrotHLS/mandel.cpp:31]   --->   Operation 45 'trunc' 'trunc_ln718_2' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 46 [1/1] (0.00ns)   --->   "%p_Result_7 = call i3 @_ssdm_op_PartSelect.i3.i72.i32.i32(i72 %r_V_18, i32 69, i32 71)" [mandelbrotHLS/mandel.cpp:31]   --->   Operation 46 'partselect' 'p_Result_7' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 47 [1/1] (0.00ns)   --->   "%p_Result_8 = call i4 @_ssdm_op_PartSelect.i4.i72.i32.i32(i72 %r_V_18, i32 68, i32 71)" [mandelbrotHLS/mandel.cpp:31]   --->   Operation 47 'partselect' 'p_Result_8' <Predicate = true> <Delay = 0.00>

State 6 <SV = 5> <Delay = 2.43>
ST_6 : Operation 48 [1/1] (2.43ns)   --->   "%r_4 = icmp ne i31 %trunc_ln718, 0" [mandelbrotHLS/mandel.cpp:30]   --->   Operation 48 'icmp' 'r_4' <Predicate = true> <Delay = 2.43> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 49 [1/1] (1.18ns)   --->   "%Range2_all_ones = icmp eq i3 %p_Result_s_16, -1" [mandelbrotHLS/mandel.cpp:30]   --->   Operation 49 'icmp' 'Range2_all_ones' <Predicate = true> <Delay = 1.18> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 50 [1/1] (1.44ns)   --->   "%Range1_all_ones = icmp eq i4 %p_Result_5, -1" [mandelbrotHLS/mandel.cpp:30]   --->   Operation 50 'icmp' 'Range1_all_ones' <Predicate = true> <Delay = 1.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 51 [1/1] (1.44ns)   --->   "%Range1_all_zeros = icmp eq i4 %p_Result_5, 0" [mandelbrotHLS/mandel.cpp:30]   --->   Operation 51 'icmp' 'Range1_all_zeros' <Predicate = true> <Delay = 1.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 52 [1/1] (2.43ns)   --->   "%r_5 = icmp ne i31 %trunc_ln718_2, 0" [mandelbrotHLS/mandel.cpp:31]   --->   Operation 52 'icmp' 'r_5' <Predicate = true> <Delay = 2.43> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 53 [1/1] (1.18ns)   --->   "%Range2_all_ones_2 = icmp eq i3 %p_Result_7, -1" [mandelbrotHLS/mandel.cpp:31]   --->   Operation 53 'icmp' 'Range2_all_ones_2' <Predicate = true> <Delay = 1.18> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 54 [1/1] (1.44ns)   --->   "%Range1_all_ones_3 = icmp eq i4 %p_Result_8, -1" [mandelbrotHLS/mandel.cpp:31]   --->   Operation 54 'icmp' 'Range1_all_ones_3' <Predicate = true> <Delay = 1.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 55 [1/1] (1.44ns)   --->   "%Range1_all_zeros_2 = icmp eq i4 %p_Result_8, 0" [mandelbrotHLS/mandel.cpp:31]   --->   Operation 55 'icmp' 'Range1_all_zeros_2' <Predicate = true> <Delay = 1.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 5.74>
ST_7 : Operation 56 [1/1] (0.00ns) (grouped into LUT with out node x2_V_1)   --->   "%x2_V = call i36 @_ssdm_op_PartSelect.i36.i72.i32.i32(i72 %r_V_17, i32 32, i32 67)" [mandelbrotHLS/mandel.cpp:30]   --->   Operation 56 'partselect' 'x2_V' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 57 [1/1] (0.00ns) (grouped into LUT with out node x2_V_1)   --->   "%tmp_22 = call i1 @_ssdm_op_BitSelect.i1.i72.i32(i72 %r_V_17, i32 32)" [mandelbrotHLS/mandel.cpp:30]   --->   Operation 57 'bitselect' 'tmp_22' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 58 [1/1] (0.00ns) (grouped into LUT with out node carry_4)   --->   "%p_Result_11 = call i1 @_ssdm_op_BitSelect.i1.i72.i32(i72 %r_V_17, i32 67)" [mandelbrotHLS/mandel.cpp:30]   --->   Operation 58 'bitselect' 'p_Result_11' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 59 [1/1] (0.00ns) (grouped into LUT with out node x2_V_1)   --->   "%r = or i1 %r_4, %tmp_22" [mandelbrotHLS/mandel.cpp:30]   --->   Operation 59 'or' 'r' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 60 [1/1] (0.00ns) (grouped into LUT with out node x2_V_1)   --->   "%tmp_24 = call i1 @_ssdm_op_BitSelect.i1.i72.i32(i72 %r_V_17, i32 31)" [mandelbrotHLS/mandel.cpp:30]   --->   Operation 60 'bitselect' 'tmp_24' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 61 [1/1] (0.00ns) (grouped into LUT with out node x2_V_1)   --->   "%and_ln412 = and i1 %tmp_24, %r" [mandelbrotHLS/mandel.cpp:30]   --->   Operation 61 'and' 'and_ln412' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 62 [1/1] (0.00ns) (grouped into LUT with out node x2_V_1)   --->   "%zext_ln415 = zext i1 %and_ln412 to i36" [mandelbrotHLS/mandel.cpp:30]   --->   Operation 62 'zext' 'zext_ln415' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 63 [1/1] (2.79ns) (out node of the LUT)   --->   "%x2_V_1 = add nsw i36 %x2_V, %zext_ln415" [mandelbrotHLS/mandel.cpp:30]   --->   Operation 63 'add' 'x2_V_1' <Predicate = true> <Delay = 2.79> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 64 [1/1] (0.00ns) (grouped into LUT with out node carry_4)   --->   "%tmp_25 = call i1 @_ssdm_op_BitSelect.i1.i36.i32(i36 %x2_V_1, i32 35)" [mandelbrotHLS/mandel.cpp:30]   --->   Operation 64 'bitselect' 'tmp_25' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 65 [1/1] (0.00ns) (grouped into LUT with out node carry_4)   --->   "%xor_ln416 = xor i1 %tmp_25, true" [mandelbrotHLS/mandel.cpp:30]   --->   Operation 65 'xor' 'xor_ln416' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 66 [1/1] (0.97ns) (out node of the LUT)   --->   "%carry_4 = and i1 %p_Result_11, %xor_ln416" [mandelbrotHLS/mandel.cpp:30]   --->   Operation 66 'and' 'carry_4' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 67 [1/1] (0.00ns)   --->   "%p_Result_12 = call i1 @_ssdm_op_BitSelect.i1.i36.i32(i36 %x2_V_1, i32 35)" [mandelbrotHLS/mandel.cpp:30]   --->   Operation 67 'bitselect' 'p_Result_12' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 68 [1/1] (0.00ns) (grouped into LUT with out node and_ln786)   --->   "%tmp_27 = call i1 @_ssdm_op_BitSelect.i1.i72.i32(i72 %r_V_17, i32 68)" [mandelbrotHLS/mandel.cpp:30]   --->   Operation 68 'bitselect' 'tmp_27' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 69 [1/1] (0.00ns) (grouped into LUT with out node and_ln786)   --->   "%xor_ln779 = xor i1 %tmp_27, true" [mandelbrotHLS/mandel.cpp:30]   --->   Operation 69 'xor' 'xor_ln779' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 70 [1/1] (0.00ns) (grouped into LUT with out node and_ln786)   --->   "%and_ln779 = and i1 %Range2_all_ones, %xor_ln779" [mandelbrotHLS/mandel.cpp:30]   --->   Operation 70 'and' 'and_ln779' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 71 [1/1] (0.00ns) (grouped into LUT with out node and_ln786)   --->   "%deleted_ones = select i1 %carry_4, i1 %and_ln779, i1 %Range1_all_ones" [mandelbrotHLS/mandel.cpp:30]   --->   Operation 71 'select' 'deleted_ones' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.93> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_7 : Operation 72 [1/1] (0.97ns)   --->   "%and_ln781 = and i1 %carry_4, %Range1_all_ones" [mandelbrotHLS/mandel.cpp:30]   --->   Operation 72 'and' 'and_ln781' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 73 [1/1] (0.97ns)   --->   "%xor_ln785_5 = xor i1 %p_Result_s, true" [mandelbrotHLS/mandel.cpp:30]   --->   Operation 73 'xor' 'xor_ln785_5' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 74 [1/1] (0.99ns) (out node of the LUT)   --->   "%and_ln786 = and i1 %p_Result_12, %deleted_ones" [mandelbrotHLS/mandel.cpp:30]   --->   Operation 74 'and' 'and_ln786' <Predicate = true> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 75 [1/1] (0.00ns) (grouped into LUT with out node underflow)   --->   "%or_ln786_2 = or i1 %and_ln781, %and_ln786" [mandelbrotHLS/mandel.cpp:30]   --->   Operation 75 'or' 'or_ln786_2' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 76 [1/1] (0.00ns) (grouped into LUT with out node underflow)   --->   "%xor_ln786 = xor i1 %or_ln786_2, true" [mandelbrotHLS/mandel.cpp:30]   --->   Operation 76 'xor' 'xor_ln786' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 77 [1/1] (0.97ns) (out node of the LUT)   --->   "%underflow = and i1 %p_Result_s, %xor_ln786" [mandelbrotHLS/mandel.cpp:30]   --->   Operation 77 'and' 'underflow' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 78 [1/1] (0.00ns) (grouped into LUT with out node y2_V_2)   --->   "%y2_V = call i36 @_ssdm_op_PartSelect.i36.i72.i32.i32(i72 %r_V_18, i32 32, i32 67)" [mandelbrotHLS/mandel.cpp:31]   --->   Operation 78 'partselect' 'y2_V' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 79 [1/1] (0.00ns) (grouped into LUT with out node y2_V_2)   --->   "%tmp_29 = call i1 @_ssdm_op_BitSelect.i1.i72.i32(i72 %r_V_18, i32 32)" [mandelbrotHLS/mandel.cpp:31]   --->   Operation 79 'bitselect' 'tmp_29' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 80 [1/1] (0.00ns) (grouped into LUT with out node carry_6)   --->   "%p_Result_14 = call i1 @_ssdm_op_BitSelect.i1.i72.i32(i72 %r_V_18, i32 67)" [mandelbrotHLS/mandel.cpp:31]   --->   Operation 80 'bitselect' 'p_Result_14' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 81 [1/1] (0.00ns) (grouped into LUT with out node y2_V_2)   --->   "%or_ln412 = or i1 %r_5, %tmp_29" [mandelbrotHLS/mandel.cpp:31]   --->   Operation 81 'or' 'or_ln412' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 82 [1/1] (0.00ns) (grouped into LUT with out node y2_V_2)   --->   "%tmp_31 = call i1 @_ssdm_op_BitSelect.i1.i72.i32(i72 %r_V_18, i32 31)" [mandelbrotHLS/mandel.cpp:31]   --->   Operation 82 'bitselect' 'tmp_31' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 83 [1/1] (0.00ns) (grouped into LUT with out node y2_V_2)   --->   "%and_ln412_2 = and i1 %tmp_31, %or_ln412" [mandelbrotHLS/mandel.cpp:31]   --->   Operation 83 'and' 'and_ln412_2' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 84 [1/1] (0.00ns) (grouped into LUT with out node y2_V_2)   --->   "%zext_ln415_2 = zext i1 %and_ln412_2 to i36" [mandelbrotHLS/mandel.cpp:31]   --->   Operation 84 'zext' 'zext_ln415_2' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 85 [1/1] (2.79ns) (out node of the LUT)   --->   "%y2_V_2 = add nsw i36 %y2_V, %zext_ln415_2" [mandelbrotHLS/mandel.cpp:31]   --->   Operation 85 'add' 'y2_V_2' <Predicate = true> <Delay = 2.79> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 86 [1/1] (0.00ns) (grouped into LUT with out node carry_6)   --->   "%tmp_32 = call i1 @_ssdm_op_BitSelect.i1.i36.i32(i36 %y2_V_2, i32 35)" [mandelbrotHLS/mandel.cpp:31]   --->   Operation 86 'bitselect' 'tmp_32' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 87 [1/1] (0.00ns) (grouped into LUT with out node carry_6)   --->   "%xor_ln416_2 = xor i1 %tmp_32, true" [mandelbrotHLS/mandel.cpp:31]   --->   Operation 87 'xor' 'xor_ln416_2' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 88 [1/1] (0.97ns) (out node of the LUT)   --->   "%carry_6 = and i1 %p_Result_14, %xor_ln416_2" [mandelbrotHLS/mandel.cpp:31]   --->   Operation 88 'and' 'carry_6' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 89 [1/1] (0.00ns)   --->   "%p_Result_15 = call i1 @_ssdm_op_BitSelect.i1.i36.i32(i36 %y2_V_2, i32 35)" [mandelbrotHLS/mandel.cpp:31]   --->   Operation 89 'bitselect' 'p_Result_15' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 90 [1/1] (0.00ns) (grouped into LUT with out node and_ln786_7)   --->   "%tmp_34 = call i1 @_ssdm_op_BitSelect.i1.i72.i32(i72 %r_V_18, i32 68)" [mandelbrotHLS/mandel.cpp:31]   --->   Operation 90 'bitselect' 'tmp_34' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 91 [1/1] (0.00ns) (grouped into LUT with out node and_ln786_7)   --->   "%xor_ln779_2 = xor i1 %tmp_34, true" [mandelbrotHLS/mandel.cpp:31]   --->   Operation 91 'xor' 'xor_ln779_2' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 92 [1/1] (0.00ns) (grouped into LUT with out node and_ln786_7)   --->   "%and_ln779_2 = and i1 %Range2_all_ones_2, %xor_ln779_2" [mandelbrotHLS/mandel.cpp:31]   --->   Operation 92 'and' 'and_ln779_2' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 93 [1/1] (0.00ns) (grouped into LUT with out node and_ln786_7)   --->   "%deleted_ones_3 = select i1 %carry_6, i1 %and_ln779_2, i1 %Range1_all_ones_3" [mandelbrotHLS/mandel.cpp:31]   --->   Operation 93 'select' 'deleted_ones_3' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.93> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_7 : Operation 94 [1/1] (0.97ns)   --->   "%and_ln781_2 = and i1 %carry_6, %Range1_all_ones_3" [mandelbrotHLS/mandel.cpp:31]   --->   Operation 94 'and' 'and_ln781_2' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 95 [1/1] (0.97ns)   --->   "%xor_ln785_7 = xor i1 %p_Result_13, true" [mandelbrotHLS/mandel.cpp:31]   --->   Operation 95 'xor' 'xor_ln785_7' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 96 [1/1] (0.99ns) (out node of the LUT)   --->   "%and_ln786_7 = and i1 %p_Result_15, %deleted_ones_3" [mandelbrotHLS/mandel.cpp:31]   --->   Operation 96 'and' 'and_ln786_7' <Predicate = true> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 97 [1/1] (0.00ns) (grouped into LUT with out node underflow_4)   --->   "%or_ln786_3 = or i1 %and_ln781_2, %and_ln786_7" [mandelbrotHLS/mandel.cpp:31]   --->   Operation 97 'or' 'or_ln786_3' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 98 [1/1] (0.00ns) (grouped into LUT with out node underflow_4)   --->   "%xor_ln786_4 = xor i1 %or_ln786_3, true" [mandelbrotHLS/mandel.cpp:31]   --->   Operation 98 'xor' 'xor_ln786_4' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 99 [1/1] (0.97ns) (out node of the LUT)   --->   "%underflow_4 = and i1 %p_Result_13, %xor_ln786_4" [mandelbrotHLS/mandel.cpp:31]   --->   Operation 99 'and' 'underflow_4' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 5.69>
ST_8 : Operation 100 [1/1] (0.00ns) (grouped into LUT with out node or_ln340)   --->   "%deleted_zeros = select i1 %carry_4, i1 %Range1_all_ones, i1 %Range1_all_zeros" [mandelbrotHLS/mandel.cpp:30]   --->   Operation 100 'select' 'deleted_zeros' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.93> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 101 [1/1] (0.00ns) (grouped into LUT with out node or_ln340)   --->   "%xor_ln785 = xor i1 %deleted_zeros, true" [mandelbrotHLS/mandel.cpp:30]   --->   Operation 101 'xor' 'xor_ln785' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 102 [1/1] (0.00ns) (grouped into LUT with out node or_ln340)   --->   "%or_ln785 = or i1 %p_Result_12, %xor_ln785" [mandelbrotHLS/mandel.cpp:30]   --->   Operation 102 'or' 'or_ln785' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 103 [1/1] (0.00ns) (grouped into LUT with out node or_ln340)   --->   "%overflow = and i1 %or_ln785, %xor_ln785_5" [mandelbrotHLS/mandel.cpp:30]   --->   Operation 103 'and' 'overflow' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 104 [1/1] (0.99ns) (out node of the LUT)   --->   "%or_ln340 = or i1 %underflow, %overflow" [mandelbrotHLS/mandel.cpp:30]   --->   Operation 104 'or' 'or_ln340' <Predicate = true> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 105 [1/1] (0.00ns) (grouped into LUT with out node p_Val2_20)   --->   "%or_ln340_9 = or i1 %and_ln786, %xor_ln785_5" [mandelbrotHLS/mandel.cpp:30]   --->   Operation 105 'or' 'or_ln340_9' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 106 [1/1] (0.00ns) (grouped into LUT with out node p_Val2_20)   --->   "%or_ln340_10 = or i1 %or_ln340_9, %and_ln781" [mandelbrotHLS/mandel.cpp:30]   --->   Operation 106 'or' 'or_ln340_10' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 107 [1/1] (0.93ns) (out node of the LUT)   --->   "%select_ln340 = select i1 %or_ln340, i36 34359738367, i36 %x2_V_1" [mandelbrotHLS/mandel.cpp:30]   --->   Operation 107 'select' 'select_ln340' <Predicate = true> <Delay = 0.93> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.93> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 108 [1/1] (0.00ns) (grouped into LUT with out node p_Val2_20)   --->   "%select_ln388 = select i1 %underflow, i36 -34359738368, i36 %x2_V_1" [mandelbrotHLS/mandel.cpp:30]   --->   Operation 108 'select' 'select_ln388' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.93> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 109 [1/1] (0.97ns) (out node of the LUT)   --->   "%p_Val2_20 = select i1 %or_ln340_10, i36 %select_ln340, i36 %select_ln388" [mandelbrotHLS/mandel.cpp:30]   --->   Operation 109 'select' 'p_Val2_20' <Predicate = true> <Delay = 0.97> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.93> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 110 [1/1] (0.00ns) (grouped into LUT with out node or_ln340_11)   --->   "%deleted_zeros_2 = select i1 %carry_6, i1 %Range1_all_ones_3, i1 %Range1_all_zeros_2" [mandelbrotHLS/mandel.cpp:31]   --->   Operation 110 'select' 'deleted_zeros_2' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.93> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 111 [1/1] (0.00ns) (grouped into LUT with out node or_ln340_11)   --->   "%xor_ln785_6 = xor i1 %deleted_zeros_2, true" [mandelbrotHLS/mandel.cpp:31]   --->   Operation 111 'xor' 'xor_ln785_6' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 112 [1/1] (0.00ns) (grouped into LUT with out node or_ln340_11)   --->   "%or_ln785_3 = or i1 %p_Result_15, %xor_ln785_6" [mandelbrotHLS/mandel.cpp:31]   --->   Operation 112 'or' 'or_ln785_3' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 113 [1/1] (0.00ns) (grouped into LUT with out node or_ln340_11)   --->   "%overflow_3 = and i1 %or_ln785_3, %xor_ln785_7" [mandelbrotHLS/mandel.cpp:31]   --->   Operation 113 'and' 'overflow_3' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 114 [1/1] (0.99ns) (out node of the LUT)   --->   "%or_ln340_11 = or i1 %underflow_4, %overflow_3" [mandelbrotHLS/mandel.cpp:31]   --->   Operation 114 'or' 'or_ln340_11' <Predicate = true> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 115 [1/1] (0.00ns) (grouped into LUT with out node p_Val2_21)   --->   "%or_ln340_12 = or i1 %and_ln786_7, %xor_ln785_7" [mandelbrotHLS/mandel.cpp:31]   --->   Operation 115 'or' 'or_ln340_12' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 116 [1/1] (0.00ns) (grouped into LUT with out node p_Val2_21)   --->   "%or_ln340_13 = or i1 %or_ln340_12, %and_ln781_2" [mandelbrotHLS/mandel.cpp:31]   --->   Operation 116 'or' 'or_ln340_13' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 117 [1/1] (0.93ns) (out node of the LUT)   --->   "%select_ln340_4 = select i1 %or_ln340_11, i36 34359738367, i36 %y2_V_2" [mandelbrotHLS/mandel.cpp:31]   --->   Operation 117 'select' 'select_ln340_4' <Predicate = true> <Delay = 0.93> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.93> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 118 [1/1] (0.00ns) (grouped into LUT with out node p_Val2_21)   --->   "%select_ln388_4 = select i1 %underflow_4, i36 -34359738368, i36 %y2_V_2" [mandelbrotHLS/mandel.cpp:31]   --->   Operation 118 'select' 'select_ln388_4' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.93> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 119 [1/1] (0.97ns) (out node of the LUT)   --->   "%p_Val2_21 = select i1 %or_ln340_13, i36 %select_ln340_4, i36 %select_ln388_4" [mandelbrotHLS/mandel.cpp:31]   --->   Operation 119 'select' 'p_Val2_21' <Predicate = true> <Delay = 0.97> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.93> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 120 [1/1] (0.00ns)   --->   "%lhs_V = sext i36 %p_Val2_20 to i37" [mandelbrotHLS/mandel.cpp:34]   --->   Operation 120 'sext' 'lhs_V' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 121 [1/1] (0.00ns)   --->   "%rhs_V = sext i36 %p_Val2_21 to i37" [mandelbrotHLS/mandel.cpp:34]   --->   Operation 121 'sext' 'rhs_V' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 122 [1/1] (2.79ns)   --->   "%ret_V = add nsw i37 %rhs_V, %lhs_V" [mandelbrotHLS/mandel.cpp:34]   --->   Operation 122 'add' 'ret_V' <Predicate = true> <Delay = 2.79> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 5.69>
ST_9 : Operation 123 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([17 x i8]* @p_str) nounwind" [mandelbrotHLS/mandel.cpp:29]   --->   Operation 123 'specloopname' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 124 [1/1] (0.00ns)   --->   "%tmp_1 = call i32 (...)* @_ssdm_op_SpecRegionBegin([17 x i8]* @p_str)" [mandelbrotHLS/mandel.cpp:29]   --->   Operation 124 'specregionbegin' 'tmp_1' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 125 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopTripCount(i32 0, i32 2000, i32 50, [1 x i8]* @p_str2) nounwind" [mandelbrotHLS/mandel.cpp:30]   --->   Operation 125 'speclooptripcount' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 126 [1/1] (2.56ns)   --->   "%icmp_ln1497 = icmp sgt i37 %ret_V, 17179869184" [mandelbrotHLS/mandel.cpp:34]   --->   Operation 126 'icmp' 'icmp_ln1497' <Predicate = true> <Delay = 2.56> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 127 [1/1] (1.66ns)   --->   "br i1 %icmp_ln1497, label %.loopexit.loopexit, label %_ZN13ap_fixed_baseILi37ELi5ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEC1ILi36ELi4ELb1ELS0_4ELS1_0ELi0EEERKS_IXT_EXT0_EXT1_EXT2_EXT3_EXT4_EE.exit9.i_ifconv" [mandelbrotHLS/mandel.cpp:34]   --->   Operation 127 'br' <Predicate = true> <Delay = 1.66>
ST_9 : Operation 128 [1/1] (2.79ns)   --->   "%ret_V_11 = sub nsw i37 %lhs_V, %rhs_V" [mandelbrotHLS/mandel.cpp:36]   --->   Operation 128 'sub' 'ret_V_11' <Predicate = (!icmp_ln1497)> <Delay = 2.79> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 129 [1/1] (0.00ns)   --->   "%lhs_V_2 = sext i37 %ret_V_11 to i38" [mandelbrotHLS/mandel.cpp:36]   --->   Operation 129 'sext' 'lhs_V_2' <Predicate = (!icmp_ln1497)> <Delay = 0.00>
ST_9 : Operation 130 [1/1] (0.00ns)   --->   "%trunc_ln1192 = trunc i37 %ret_V_11 to i36" [mandelbrotHLS/mandel.cpp:36]   --->   Operation 130 'trunc' 'trunc_ln1192' <Predicate = (!icmp_ln1497)> <Delay = 0.00>
ST_9 : Operation 131 [1/1] (2.81ns)   --->   "%ret_V_12 = add nsw i38 %rhs_V_2, %lhs_V_2" [mandelbrotHLS/mandel.cpp:36]   --->   Operation 131 'add' 'ret_V_12' <Predicate = (!icmp_ln1497)> <Delay = 2.81> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 132 [1/1] (0.00ns)   --->   "%p_Result_16 = call i1 @_ssdm_op_BitSelect.i1.i38.i32(i38 %ret_V_12, i32 37)" [mandelbrotHLS/mandel.cpp:36]   --->   Operation 132 'bitselect' 'p_Result_16' <Predicate = (!icmp_ln1497)> <Delay = 0.00>
ST_9 : Operation 133 [1/1] (2.79ns)   --->   "%xtemp_V = add i36 %x_in_V_read, %trunc_ln1192" [mandelbrotHLS/mandel.cpp:36]   --->   Operation 133 'add' 'xtemp_V' <Predicate = (!icmp_ln1497)> <Delay = 2.79> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 134 [1/1] (0.00ns)   --->   "%p_Result_17 = call i1 @_ssdm_op_BitSelect.i1.i36.i32(i36 %xtemp_V, i32 35)" [mandelbrotHLS/mandel.cpp:36]   --->   Operation 134 'bitselect' 'p_Result_17' <Predicate = (!icmp_ln1497)> <Delay = 0.00>
ST_9 : Operation 135 [1/1] (0.00ns)   --->   "%p_Result_9 = call i2 @_ssdm_op_PartSelect.i2.i38.i32.i32(i38 %ret_V_12, i32 36, i32 37)" [mandelbrotHLS/mandel.cpp:36]   --->   Operation 135 'partselect' 'p_Result_9' <Predicate = (!icmp_ln1497)> <Delay = 0.00>
ST_9 : Operation 136 [1/1] (0.00ns)   --->   "%r_V_15 = call i37 @_ssdm_op_BitConcatenate.i37.i36.i1(i36 %x_0, i1 false)" [mandelbrotHLS/mandel.cpp:37]   --->   Operation 136 'bitconcatenate' 'r_V_15' <Predicate = (!icmp_ln1497)> <Delay = 0.00>
ST_9 : Operation 137 [1/1] (0.00ns)   --->   "%sext_ln1116 = sext i37 %r_V_15 to i73" [mandelbrotHLS/mandel.cpp:37]   --->   Operation 137 'sext' 'sext_ln1116' <Predicate = (!icmp_ln1497)> <Delay = 0.00>
ST_9 : Operation 138 [1/1] (0.00ns)   --->   "%sext_ln1118 = sext i36 %y_0 to i73" [mandelbrotHLS/mandel.cpp:37]   --->   Operation 138 'sext' 'sext_ln1118' <Predicate = (!icmp_ln1497)> <Delay = 0.00>
ST_9 : Operation 139 [3/3] (5.69ns)   --->   "%r_V_19 = mul i73 %sext_ln1118, %sext_ln1116" [mandelbrotHLS/mandel.cpp:37]   --->   Operation 139 'mul' 'r_V_19' <Predicate = (!icmp_ln1497)> <Delay = 5.69> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 5.69> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 10 <SV = 9> <Delay = 6.41>
ST_10 : Operation 140 [1/1] (0.93ns)   --->   "%icmp_ln785 = icmp ne i2 %p_Result_9, 0" [mandelbrotHLS/mandel.cpp:36]   --->   Operation 140 'icmp' 'icmp_ln785' <Predicate = true> <Delay = 0.93> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 141 [1/1] (0.00ns) (grouped into LUT with out node overflow_4)   --->   "%or_ln785_4 = or i1 %p_Result_17, %icmp_ln785" [mandelbrotHLS/mandel.cpp:36]   --->   Operation 141 'or' 'or_ln785_4' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 142 [1/1] (0.00ns) (grouped into LUT with out node overflow_4)   --->   "%xor_ln785_8 = xor i1 %p_Result_16, true" [mandelbrotHLS/mandel.cpp:36]   --->   Operation 142 'xor' 'xor_ln785_8' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 143 [1/1] (0.97ns) (out node of the LUT)   --->   "%overflow_4 = and i1 %or_ln785_4, %xor_ln785_8" [mandelbrotHLS/mandel.cpp:36]   --->   Operation 143 'and' 'overflow_4' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 144 [1/1] (0.00ns) (grouped into LUT with out node underflow_5)   --->   "%xor_ln786_5 = xor i1 %p_Result_17, true" [mandelbrotHLS/mandel.cpp:36]   --->   Operation 144 'xor' 'xor_ln786_5' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 145 [1/1] (0.93ns)   --->   "%icmp_ln786 = icmp ne i2 %p_Result_9, -1" [mandelbrotHLS/mandel.cpp:36]   --->   Operation 145 'icmp' 'icmp_ln786' <Predicate = true> <Delay = 0.93> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 146 [1/1] (0.00ns) (grouped into LUT with out node underflow_5)   --->   "%or_ln786 = or i1 %icmp_ln786, %xor_ln786_5" [mandelbrotHLS/mandel.cpp:36]   --->   Operation 146 'or' 'or_ln786' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 147 [1/1] (0.97ns) (out node of the LUT)   --->   "%underflow_5 = and i1 %or_ln786, %p_Result_16" [mandelbrotHLS/mandel.cpp:36]   --->   Operation 147 'and' 'underflow_5' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 148 [1/1] (0.00ns) (grouped into LUT with out node select_ln340_5)   --->   "%or_ln340_14 = or i1 %underflow_5, %overflow_4" [mandelbrotHLS/mandel.cpp:36]   --->   Operation 148 'or' 'or_ln340_14' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 149 [1/1] (0.00ns) (grouped into LUT with out node x_V)   --->   "%xor_ln340 = xor i1 %underflow_5, true" [mandelbrotHLS/mandel.cpp:36]   --->   Operation 149 'xor' 'xor_ln340' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 150 [1/1] (0.00ns) (grouped into LUT with out node x_V)   --->   "%or_ln340_15 = or i1 %overflow_4, %xor_ln340" [mandelbrotHLS/mandel.cpp:36]   --->   Operation 150 'or' 'or_ln340_15' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 151 [1/1] (0.97ns) (out node of the LUT)   --->   "%select_ln340_5 = select i1 %or_ln340_14, i36 34359738367, i36 %xtemp_V" [mandelbrotHLS/mandel.cpp:36]   --->   Operation 151 'select' 'select_ln340_5' <Predicate = true> <Delay = 0.97> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.93> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 152 [1/1] (0.00ns) (grouped into LUT with out node x_V)   --->   "%select_ln388_5 = select i1 %underflow_5, i36 -34359738368, i36 %xtemp_V" [mandelbrotHLS/mandel.cpp:36]   --->   Operation 152 'select' 'select_ln388_5' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.93> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 153 [1/1] (0.97ns) (out node of the LUT)   --->   "%x_V = select i1 %or_ln340_15, i36 %select_ln340_5, i36 %select_ln388_5" [mandelbrotHLS/mandel.cpp:36]   --->   Operation 153 'select' 'x_V' <Predicate = true> <Delay = 0.97> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.93> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 154 [2/3] (5.69ns)   --->   "%r_V_19 = mul i73 %sext_ln1118, %sext_ln1116" [mandelbrotHLS/mandel.cpp:37]   --->   Operation 154 'mul' 'r_V_19' <Predicate = true> <Delay = 5.69> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 5.69> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 155 [1/1] (2.54ns)   --->   "%icmp_ln1498 = icmp eq i36 %x_0, %x_V" [mandelbrotHLS/mandel.cpp:38]   --->   Operation 155 'icmp' 'icmp_ln1498' <Predicate = true> <Delay = 2.54> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 11 <SV = 10> <Delay = 5.69>
ST_11 : Operation 156 [1/3] (5.69ns)   --->   "%r_V_19 = mul i73 %sext_ln1118, %sext_ln1116" [mandelbrotHLS/mandel.cpp:37]   --->   Operation 156 'mul' 'r_V_19' <Predicate = true> <Delay = 5.69> <Core = "MulnS">   --->   Core 17 'MulnS' <Latency = 2> <II = 1> <Delay = 5.69> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 157 [1/1] (0.00ns)   --->   "%trunc_ln718_3 = trunc i73 %r_V_19 to i31" [mandelbrotHLS/mandel.cpp:37]   --->   Operation 157 'trunc' 'trunc_ln718_3' <Predicate = true> <Delay = 0.00>

State 12 <SV = 11> <Delay = 5.26>
ST_12 : Operation 158 [1/1] (3.81ns)   --->   "%ret_V_13 = add i73 %r_V_19, %sext_ln728" [mandelbrotHLS/mandel.cpp:37]   --->   Operation 158 'add' 'ret_V_13' <Predicate = true> <Delay = 3.81> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 159 [1/1] (0.00ns)   --->   "%p_Result_18 = call i1 @_ssdm_op_BitSelect.i1.i73.i32(i73 %ret_V_13, i32 72)" [mandelbrotHLS/mandel.cpp:37]   --->   Operation 159 'bitselect' 'p_Result_18' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 160 [1/1] (2.43ns)   --->   "%r_6 = icmp ne i31 %trunc_ln718_3, 0" [mandelbrotHLS/mandel.cpp:37]   --->   Operation 160 'icmp' 'r_6' <Predicate = true> <Delay = 2.43> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 161 [1/1] (0.00ns)   --->   "%tmp_3 = call i4 @_ssdm_op_PartSelect.i4.i73.i32.i32(i73 %ret_V_13, i32 69, i32 72)" [mandelbrotHLS/mandel.cpp:37]   --->   Operation 161 'partselect' 'tmp_3' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 162 [1/1] (1.44ns)   --->   "%Range2_all_ones_3 = icmp eq i4 %tmp_3, -1" [mandelbrotHLS/mandel.cpp:37]   --->   Operation 162 'icmp' 'Range2_all_ones_3' <Predicate = true> <Delay = 1.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 163 [1/1] (0.00ns)   --->   "%tmp_4 = call i5 @_ssdm_op_PartSelect.i5.i73.i32.i32(i73 %ret_V_13, i32 68, i32 72)" [mandelbrotHLS/mandel.cpp:37]   --->   Operation 163 'partselect' 'tmp_4' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 164 [1/1] (1.44ns)   --->   "%Range1_all_ones_4 = icmp eq i5 %tmp_4, -1" [mandelbrotHLS/mandel.cpp:37]   --->   Operation 164 'icmp' 'Range1_all_ones_4' <Predicate = true> <Delay = 1.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 165 [1/1] (1.44ns)   --->   "%Range1_all_zeros_3 = icmp eq i5 %tmp_4, 0" [mandelbrotHLS/mandel.cpp:37]   --->   Operation 165 'icmp' 'Range1_all_zeros_3' <Predicate = true> <Delay = 1.44> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 13 <SV = 12> <Delay = 4.76>
ST_13 : Operation 166 [1/1] (0.00ns) (grouped into LUT with out node ytemp_V_1)   --->   "%ytemp_V = call i36 @_ssdm_op_PartSelect.i36.i73.i32.i32(i73 %ret_V_13, i32 32, i32 67)" [mandelbrotHLS/mandel.cpp:37]   --->   Operation 166 'partselect' 'ytemp_V' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 167 [1/1] (0.00ns) (grouped into LUT with out node ytemp_V_1)   --->   "%tmp_38 = call i1 @_ssdm_op_BitSelect.i1.i73.i32(i73 %ret_V_13, i32 32)" [mandelbrotHLS/mandel.cpp:37]   --->   Operation 167 'bitselect' 'tmp_38' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 168 [1/1] (0.00ns) (grouped into LUT with out node carry_8)   --->   "%p_Result_19 = call i1 @_ssdm_op_BitSelect.i1.i73.i32(i73 %ret_V_13, i32 67)" [mandelbrotHLS/mandel.cpp:37]   --->   Operation 168 'bitselect' 'p_Result_19' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 169 [1/1] (0.00ns) (grouped into LUT with out node ytemp_V_1)   --->   "%or_ln412_1 = or i1 %r_6, %tmp_38" [mandelbrotHLS/mandel.cpp:37]   --->   Operation 169 'or' 'or_ln412_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 170 [1/1] (0.00ns) (grouped into LUT with out node ytemp_V_1)   --->   "%tmp_40 = call i1 @_ssdm_op_BitSelect.i1.i73.i32(i73 %r_V_19, i32 31)" [mandelbrotHLS/mandel.cpp:37]   --->   Operation 170 'bitselect' 'tmp_40' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 171 [1/1] (0.00ns) (grouped into LUT with out node ytemp_V_1)   --->   "%and_ln412_3 = and i1 %tmp_40, %or_ln412_1" [mandelbrotHLS/mandel.cpp:37]   --->   Operation 171 'and' 'and_ln412_3' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 172 [1/1] (0.00ns) (grouped into LUT with out node ytemp_V_1)   --->   "%zext_ln415_3 = zext i1 %and_ln412_3 to i36" [mandelbrotHLS/mandel.cpp:37]   --->   Operation 172 'zext' 'zext_ln415_3' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 173 [1/1] (2.79ns) (out node of the LUT)   --->   "%ytemp_V_1 = add nsw i36 %zext_ln415_3, %ytemp_V" [mandelbrotHLS/mandel.cpp:37]   --->   Operation 173 'add' 'ytemp_V_1' <Predicate = true> <Delay = 2.79> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 174 [1/1] (0.00ns) (grouped into LUT with out node carry_8)   --->   "%tmp_41 = call i1 @_ssdm_op_BitSelect.i1.i36.i32(i36 %ytemp_V_1, i32 35)" [mandelbrotHLS/mandel.cpp:37]   --->   Operation 174 'bitselect' 'tmp_41' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 175 [1/1] (0.00ns) (grouped into LUT with out node carry_8)   --->   "%xor_ln416_3 = xor i1 %tmp_41, true" [mandelbrotHLS/mandel.cpp:37]   --->   Operation 175 'xor' 'xor_ln416_3' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 176 [1/1] (0.97ns) (out node of the LUT)   --->   "%carry_8 = and i1 %p_Result_19, %xor_ln416_3" [mandelbrotHLS/mandel.cpp:37]   --->   Operation 176 'and' 'carry_8' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 177 [1/1] (0.00ns)   --->   "%p_Result_20 = call i1 @_ssdm_op_BitSelect.i1.i36.i32(i36 %ytemp_V_1, i32 35)" [mandelbrotHLS/mandel.cpp:37]   --->   Operation 177 'bitselect' 'p_Result_20' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 178 [1/1] (0.00ns) (grouped into LUT with out node and_ln786_10)   --->   "%tmp_43 = call i1 @_ssdm_op_BitSelect.i1.i73.i32(i73 %ret_V_13, i32 68)" [mandelbrotHLS/mandel.cpp:37]   --->   Operation 178 'bitselect' 'tmp_43' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 179 [1/1] (0.00ns) (grouped into LUT with out node and_ln786_10)   --->   "%xor_ln779_3 = xor i1 %tmp_43, true" [mandelbrotHLS/mandel.cpp:37]   --->   Operation 179 'xor' 'xor_ln779_3' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 180 [1/1] (0.00ns) (grouped into LUT with out node and_ln786_10)   --->   "%and_ln779_3 = and i1 %Range2_all_ones_3, %xor_ln779_3" [mandelbrotHLS/mandel.cpp:37]   --->   Operation 180 'and' 'and_ln779_3' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 181 [1/1] (0.00ns) (grouped into LUT with out node and_ln786_10)   --->   "%deleted_ones_4 = select i1 %carry_8, i1 %and_ln779_3, i1 %Range1_all_ones_4" [mandelbrotHLS/mandel.cpp:37]   --->   Operation 181 'select' 'deleted_ones_4' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.93> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_13 : Operation 182 [1/1] (0.97ns)   --->   "%and_ln781_3 = and i1 %carry_8, %Range1_all_ones_4" [mandelbrotHLS/mandel.cpp:37]   --->   Operation 182 'and' 'and_ln781_3' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 183 [1/1] (0.99ns) (out node of the LUT)   --->   "%and_ln786_10 = and i1 %p_Result_20, %deleted_ones_4" [mandelbrotHLS/mandel.cpp:37]   --->   Operation 183 'and' 'and_ln786_10' <Predicate = true> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 14 <SV = 13> <Delay = 6.42>
ST_14 : Operation 184 [1/1] (0.00ns) (grouped into LUT with out node or_ln340_16)   --->   "%deleted_zeros_3 = select i1 %carry_8, i1 %Range1_all_ones_4, i1 %Range1_all_zeros_3" [mandelbrotHLS/mandel.cpp:37]   --->   Operation 184 'select' 'deleted_zeros_3' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.93> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_14 : Operation 185 [1/1] (0.00ns) (grouped into LUT with out node or_ln340_16)   --->   "%xor_ln785_9 = xor i1 %deleted_zeros_3, true" [mandelbrotHLS/mandel.cpp:37]   --->   Operation 185 'xor' 'xor_ln785_9' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 186 [1/1] (0.00ns) (grouped into LUT with out node or_ln340_16)   --->   "%or_ln785_5 = or i1 %p_Result_20, %xor_ln785_9" [mandelbrotHLS/mandel.cpp:37]   --->   Operation 186 'or' 'or_ln785_5' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 187 [1/1] (0.97ns)   --->   "%xor_ln785_10 = xor i1 %p_Result_18, true" [mandelbrotHLS/mandel.cpp:37]   --->   Operation 187 'xor' 'xor_ln785_10' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 188 [1/1] (0.00ns) (grouped into LUT with out node or_ln340_16)   --->   "%overflow_5 = and i1 %or_ln785_5, %xor_ln785_10" [mandelbrotHLS/mandel.cpp:37]   --->   Operation 188 'and' 'overflow_5' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 189 [1/1] (0.00ns) (grouped into LUT with out node underflow_6)   --->   "%or_ln786_4 = or i1 %and_ln781_3, %and_ln786_10" [mandelbrotHLS/mandel.cpp:37]   --->   Operation 189 'or' 'or_ln786_4' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 190 [1/1] (0.00ns) (grouped into LUT with out node underflow_6)   --->   "%xor_ln786_6 = xor i1 %or_ln786_4, true" [mandelbrotHLS/mandel.cpp:37]   --->   Operation 190 'xor' 'xor_ln786_6' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 191 [1/1] (0.97ns) (out node of the LUT)   --->   "%underflow_6 = and i1 %p_Result_18, %xor_ln786_6" [mandelbrotHLS/mandel.cpp:37]   --->   Operation 191 'and' 'underflow_6' <Predicate = true> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 192 [1/1] (0.99ns) (out node of the LUT)   --->   "%or_ln340_16 = or i1 %underflow_6, %overflow_5" [mandelbrotHLS/mandel.cpp:37]   --->   Operation 192 'or' 'or_ln340_16' <Predicate = true> <Delay = 0.99> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 193 [1/1] (0.00ns) (grouped into LUT with out node y_V)   --->   "%or_ln340_17 = or i1 %and_ln786_10, %xor_ln785_10" [mandelbrotHLS/mandel.cpp:37]   --->   Operation 193 'or' 'or_ln340_17' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 194 [1/1] (0.00ns) (grouped into LUT with out node y_V)   --->   "%or_ln340_18 = or i1 %or_ln340_17, %and_ln781_3" [mandelbrotHLS/mandel.cpp:37]   --->   Operation 194 'or' 'or_ln340_18' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 195 [1/1] (0.93ns) (out node of the LUT)   --->   "%select_ln340_6 = select i1 %or_ln340_16, i36 34359738367, i36 %ytemp_V_1" [mandelbrotHLS/mandel.cpp:37]   --->   Operation 195 'select' 'select_ln340_6' <Predicate = true> <Delay = 0.93> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.93> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_14 : Operation 196 [1/1] (0.00ns) (grouped into LUT with out node y_V)   --->   "%select_ln388_6 = select i1 %underflow_6, i36 -34359738368, i36 %ytemp_V_1" [mandelbrotHLS/mandel.cpp:37]   --->   Operation 196 'select' 'select_ln388_6' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.93> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_14 : Operation 197 [1/1] (0.97ns) (out node of the LUT)   --->   "%y_V = select i1 %or_ln340_18, i36 %select_ln340_6, i36 %select_ln388_6" [mandelbrotHLS/mandel.cpp:37]   --->   Operation 197 'select' 'y_V' <Predicate = true> <Delay = 0.97> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.93> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_14 : Operation 198 [1/1] (2.54ns)   --->   "%icmp_ln1498_1 = icmp eq i36 %y_0, %y_V" [mandelbrotHLS/mandel.cpp:38]   --->   Operation 198 'icmp' 'icmp_ln1498_1' <Predicate = true> <Delay = 2.54> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.54> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 15 <SV = 14> <Delay = 4.30>
ST_15 : Operation 199 [1/1] (0.97ns)   --->   "%and_ln38 = and i1 %icmp_ln1498, %icmp_ln1498_1" [mandelbrotHLS/mandel.cpp:38]   --->   Operation 199 'and' 'and_ln38' <Predicate = (!tmp & icmp_ln29 & !icmp_ln1497)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 200 [1/1] (1.66ns)   --->   "br i1 %and_ln38, label %.loopexit.loopexit, label %mandel_calc_loop_end" [mandelbrotHLS/mandel.cpp:38]   --->   Operation 200 'br' <Predicate = (!tmp & icmp_ln29 & !icmp_ln1497)> <Delay = 1.66>
ST_15 : Operation 201 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecRegionEnd([17 x i8]* @p_str, i32 %tmp_1)" [mandelbrotHLS/mandel.cpp:51]   --->   Operation 201 'specregionend' 'empty' <Predicate = (!tmp & icmp_ln29 & !icmp_ln1497 & !and_ln38)> <Delay = 0.00>
ST_15 : Operation 202 [1/1] (0.00ns)   --->   "br label %1" [mandelbrotHLS/mandel.cpp:29]   --->   Operation 202 'br' <Predicate = (!tmp & icmp_ln29 & !icmp_ln1497 & !and_ln38)> <Delay = 0.00>
ST_15 : Operation 203 [1/1] (0.00ns)   --->   "%iter_2_ph = phi i16 [ %iter_0, %1 ], [ %iter_0, %mandel_calc_loop_begin ], [ %maxIter_read, %_ZN13ap_fixed_baseILi37ELi5ELb1EL9ap_q_mode5EL9ap_o_mode3ELi0EEC1ILi36ELi4ELb1ELS0_4ELS1_0ELi0EEERKS_IXT_EXT0_EXT1_EXT2_EXT3_EXT4_EE.exit9.i_ifconv ]" [mandelbrotHLS/mandel.cpp:29]   --->   Operation 203 'phi' 'iter_2_ph' <Predicate = (!tmp & and_ln38) | (!tmp & icmp_ln1497) | (!tmp & !icmp_ln29)> <Delay = 0.00>
ST_15 : Operation 204 [1/1] (1.66ns)   --->   "br label %.loopexit"   --->   Operation 204 'br' <Predicate = (!tmp & and_ln38) | (!tmp & icmp_ln1497) | (!tmp & !icmp_ln29)> <Delay = 1.66>
ST_15 : Operation 205 [1/1] (0.00ns)   --->   "%iter_2 = phi i16 [ %maxIter_read, %0 ], [ %iter_2_ph, %.loopexit.loopexit ]" [mandelbrotHLS/mandel.cpp:19]   --->   Operation 205 'phi' 'iter_2' <Predicate = (and_ln38) | (icmp_ln1497) | (!icmp_ln29) | (tmp)> <Delay = 0.00>
ST_15 : Operation 206 [1/1] (0.00ns)   --->   "ret i16 %iter_2" [mandelbrotHLS/mandel.cpp:53]   --->   Operation 206 'ret' <Predicate = (and_ln38) | (icmp_ln1497) | (!icmp_ln29) | (tmp)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 8ns, clock uncertainty: 1.5ns.

 <State 1>: 5.69ns
The critical path consists of the following:
	wire read on port 'y_in_V' (mandelbrotHLS/mandel.cpp:19) [5]  (0 ns)
	'call' operation ('tmp', mandelbrotHLS/mandel.cpp:26) to 'pretest' [7]  (5.69 ns)

 <State 2>: 5.56ns
The critical path consists of the following:
	'call' operation ('tmp', mandelbrotHLS/mandel.cpp:26) to 'pretest' [7]  (3.9 ns)
	multiplexor before 'phi' operation ('iter_2', mandelbrotHLS/mandel.cpp:19) with incoming values : ('maxIter', mandelbrotHLS/mandel.cpp:19) ('iter', mandelbrotHLS/mandel.cpp:29) [193]  (1.66 ns)

 <State 3>: 5.69ns
The critical path consists of the following:
	'phi' operation ('y.V') with incoming values : ('y.V', mandelbrotHLS/mandel.cpp:37) [15]  (0 ns)
	'mul' operation ('r.V', mandelbrotHLS/mandel.cpp:31) [68]  (5.69 ns)

 <State 4>: 5.69ns
The critical path consists of the following:
	'mul' operation ('r.V', mandelbrotHLS/mandel.cpp:30) [26]  (5.69 ns)

 <State 5>: 5.69ns
The critical path consists of the following:
	'mul' operation ('r.V', mandelbrotHLS/mandel.cpp:30) [26]  (5.69 ns)

 <State 6>: 2.43ns
The critical path consists of the following:
	'icmp' operation ('r', mandelbrotHLS/mandel.cpp:30) [31]  (2.43 ns)

 <State 7>: 5.74ns
The critical path consists of the following:
	'add' operation ('x2.V', mandelbrotHLS/mandel.cpp:30) [37]  (2.79 ns)
	'xor' operation ('xor_ln416', mandelbrotHLS/mandel.cpp:30) [39]  (0 ns)
	'and' operation ('carry', mandelbrotHLS/mandel.cpp:30) [40]  (0.978 ns)
	'select' operation ('deleted_ones', mandelbrotHLS/mandel.cpp:30) [51]  (0 ns)
	'and' operation ('and_ln786', mandelbrotHLS/mandel.cpp:30) [57]  (0.993 ns)
	'or' operation ('or_ln786_2', mandelbrotHLS/mandel.cpp:30) [58]  (0 ns)
	'xor' operation ('xor_ln786', mandelbrotHLS/mandel.cpp:30) [59]  (0 ns)
	'and' operation ('underflow', mandelbrotHLS/mandel.cpp:30) [60]  (0.978 ns)

 <State 8>: 5.7ns
The critical path consists of the following:
	'select' operation ('deleted_zeros', mandelbrotHLS/mandel.cpp:30) [47]  (0 ns)
	'xor' operation ('xor_ln785', mandelbrotHLS/mandel.cpp:30) [53]  (0 ns)
	'or' operation ('or_ln785', mandelbrotHLS/mandel.cpp:30) [54]  (0 ns)
	'and' operation ('overflow', mandelbrotHLS/mandel.cpp:30) [56]  (0 ns)
	'or' operation ('or_ln340', mandelbrotHLS/mandel.cpp:30) [61]  (0.993 ns)
	'select' operation ('select_ln340', mandelbrotHLS/mandel.cpp:30) [64]  (0.935 ns)
	'select' operation ('__Val2__', mandelbrotHLS/mandel.cpp:30) [66]  (0.978 ns)
	'add' operation ('ret.V', mandelbrotHLS/mandel.cpp:34) [111]  (2.79 ns)

 <State 9>: 5.69ns
The critical path consists of the following:
	'mul' operation ('r.V', mandelbrotHLS/mandel.cpp:37) [140]  (5.69 ns)

 <State 10>: 6.41ns
The critical path consists of the following:
	'icmp' operation ('icmp_ln785', mandelbrotHLS/mandel.cpp:36) [123]  (0.937 ns)
	'or' operation ('or_ln785_4', mandelbrotHLS/mandel.cpp:36) [124]  (0 ns)
	'and' operation ('overflow', mandelbrotHLS/mandel.cpp:36) [126]  (0.978 ns)
	'or' operation ('or_ln340_14', mandelbrotHLS/mandel.cpp:36) [131]  (0 ns)
	'select' operation ('select_ln340_5', mandelbrotHLS/mandel.cpp:36) [134]  (0.978 ns)
	'select' operation ('x.V', mandelbrotHLS/mandel.cpp:36) [136]  (0.978 ns)
	'icmp' operation ('icmp_ln1498', mandelbrotHLS/mandel.cpp:38) [182]  (2.54 ns)

 <State 11>: 5.69ns
The critical path consists of the following:
	'mul' operation ('r.V', mandelbrotHLS/mandel.cpp:37) [140]  (5.69 ns)

 <State 12>: 5.27ns
The critical path consists of the following:
	'add' operation ('ret.V', mandelbrotHLS/mandel.cpp:37) [141]  (3.82 ns)
	'icmp' operation ('Range1_all_ones', mandelbrotHLS/mandel.cpp:37) [160]  (1.45 ns)

 <State 13>: 4.76ns
The critical path consists of the following:
	'add' operation ('ytemp.V', mandelbrotHLS/mandel.cpp:37) [152]  (2.79 ns)
	'xor' operation ('xor_ln416_3', mandelbrotHLS/mandel.cpp:37) [154]  (0 ns)
	'and' operation ('carry', mandelbrotHLS/mandel.cpp:37) [155]  (0.978 ns)
	'select' operation ('deleted_ones', mandelbrotHLS/mandel.cpp:37) [166]  (0 ns)
	'and' operation ('and_ln786_10', mandelbrotHLS/mandel.cpp:37) [172]  (0.993 ns)

 <State 14>: 6.43ns
The critical path consists of the following:
	'xor' operation ('xor_ln785_10', mandelbrotHLS/mandel.cpp:37) [170]  (0.978 ns)
	'and' operation ('overflow', mandelbrotHLS/mandel.cpp:37) [171]  (0 ns)
	'or' operation ('or_ln340_16', mandelbrotHLS/mandel.cpp:37) [176]  (0.993 ns)
	'select' operation ('select_ln340_6', mandelbrotHLS/mandel.cpp:37) [179]  (0.935 ns)
	'select' operation ('y.V', mandelbrotHLS/mandel.cpp:37) [181]  (0.978 ns)
	'icmp' operation ('icmp_ln1498_1', mandelbrotHLS/mandel.cpp:38) [183]  (2.54 ns)

 <State 15>: 4.31ns
The critical path consists of the following:
	'and' operation ('and_ln38', mandelbrotHLS/mandel.cpp:38) [184]  (0.978 ns)
	multiplexor before 'phi' operation ('iter_2_ph', mandelbrotHLS/mandel.cpp:29) with incoming values : ('maxIter', mandelbrotHLS/mandel.cpp:19) ('iter', mandelbrotHLS/mandel.cpp:29) [190]  (1.66 ns)
	'phi' operation ('iter_2_ph', mandelbrotHLS/mandel.cpp:29) with incoming values : ('maxIter', mandelbrotHLS/mandel.cpp:19) ('iter', mandelbrotHLS/mandel.cpp:29) [190]  (0 ns)
	multiplexor before 'phi' operation ('iter_2', mandelbrotHLS/mandel.cpp:19) with incoming values : ('maxIter', mandelbrotHLS/mandel.cpp:19) ('iter', mandelbrotHLS/mandel.cpp:29) [193]  (1.66 ns)
	'phi' operation ('iter_2', mandelbrotHLS/mandel.cpp:19) with incoming values : ('maxIter', mandelbrotHLS/mandel.cpp:19) ('iter', mandelbrotHLS/mandel.cpp:29) [193]  (0 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
