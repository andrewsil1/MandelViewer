// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module pretest (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        x_V,
        y_V,
        ap_return
);

parameter    ap_ST_fsm_state1 = 20'd1;
parameter    ap_ST_fsm_state2 = 20'd2;
parameter    ap_ST_fsm_state3 = 20'd4;
parameter    ap_ST_fsm_state4 = 20'd8;
parameter    ap_ST_fsm_state5 = 20'd16;
parameter    ap_ST_fsm_state6 = 20'd32;
parameter    ap_ST_fsm_state7 = 20'd64;
parameter    ap_ST_fsm_state8 = 20'd128;
parameter    ap_ST_fsm_state9 = 20'd256;
parameter    ap_ST_fsm_state10 = 20'd512;
parameter    ap_ST_fsm_state11 = 20'd1024;
parameter    ap_ST_fsm_state12 = 20'd2048;
parameter    ap_ST_fsm_state13 = 20'd4096;
parameter    ap_ST_fsm_state14 = 20'd8192;
parameter    ap_ST_fsm_state15 = 20'd16384;
parameter    ap_ST_fsm_state16 = 20'd32768;
parameter    ap_ST_fsm_state17 = 20'd65536;
parameter    ap_ST_fsm_state18 = 20'd131072;
parameter    ap_ST_fsm_state19 = 20'd262144;
parameter    ap_ST_fsm_state20 = 20'd524288;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [39:0] x_V;
input  [39:0] y_V;
output  [0:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [19:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [0:0] p_Result_9_reg_867;
wire    ap_CS_fsm_state2;
wire  signed [39:0] grp_fu_150_p3;
reg  signed [39:0] p_Val2_13_reg_879;
reg   [0:0] tmp_20_reg_891;
wire   [0:0] grp_fu_415_p3;
reg   [0:0] p_Result_10_reg_897;
wire  signed [79:0] r_V_2_fu_274_p1;
reg  signed [79:0] reg_903;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state9;
reg   [4:0] reg_914;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state10;
wire   [33:0] trunc_ln718_fu_300_p1;
reg   [39:0] reg_929;
wire    ap_CS_fsm_state12;
wire   [33:0] trunc_ln718_1_fu_540_p1;
wire   [79:0] grp_fu_92_p2;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state11;
reg   [0:0] p_Result_s_reg_935;
wire   [0:0] grp_fu_687_p2;
reg   [0:0] Range2_all_ones_reg_951;
wire    ap_CS_fsm_state7;
wire   [0:0] grp_fu_568_p2;
reg   [0:0] r_1_reg_956;
wire   [0:0] grp_fu_677_p2;
reg   [0:0] Range1_all_zeros_reg_961;
wire   [0:0] grp_fu_682_p2;
reg   [0:0] Range1_all_ones_reg_968;
wire   [0:0] p_Result_3_fu_669_p3;
reg   [0:0] p_Result_3_reg_979;
wire   [0:0] carry_1_fu_409_p2;
reg   [0:0] carry_1_reg_985;
wire   [0:0] and_ln786_fu_448_p2;
reg   [0:0] and_ln786_reg_990;
wire   [79:0] grp_fu_277_p2;
reg   [80:0] reg_1002;
wire  signed [79:0] r_V_7_fu_283_p1;
wire  signed [80:0] r_V_4_fu_828_p1;
wire    ap_CS_fsm_state14;
reg   [0:0] r_2_reg_1026;
reg   [0:0] p_Result_6_reg_1032;
reg   [3:0] reg_1037;
reg   [0:0] p_Result_8_reg_1059;
wire   [0:0] carry_3_fu_663_p2;
reg   [0:0] carry_3_reg_1065;
reg   [0:0] Range1_all_zeros_1_reg_1070;
reg   [0:0] Range1_all_ones_2_reg_1076;
wire   [0:0] grp_fu_851_p2;
reg   [0:0] icmp_ln1497_1_reg_1081;
wire   [0:0] and_ln786_3_fu_719_p2;
reg   [0:0] and_ln786_3_reg_1087;
wire   [80:0] grp_fu_82_p2;
reg   [80:0] reg_1113;
wire  signed [79:0] r_V_fu_78_p1;
wire    ap_CS_fsm_state19;
wire   [79:0] grp_fu_389_p2;
wire    ap_CS_fsm_state13;
wire  signed [80:0] sext_ln1118_fu_831_p1;
reg  signed [40:0] grp_fu_82_p0;
reg  signed [39:0] grp_fu_82_p1;
wire  signed [39:0] lhs_V_fu_88_p0;
reg   [79:0] grp_fu_92_p0;
wire  signed [79:0] sext_ln728_fu_551_p1;
reg  signed [79:0] grp_fu_92_p1;
wire   [39:0] zext_ln415_1_fu_639_p1;
wire   [39:0] zext_ln415_fu_385_p1;
wire   [40:0] ret_V_5_fu_188_p2;
wire   [39:0] p_Result_5_fu_112_p1;
wire   [0:0] p_Result_5_fu_112_p3;
wire   [0:0] p_Result_4_fu_98_p3;
wire   [0:0] xor_ln786_1_fu_120_p2;
wire   [0:0] xor_ln340_1_fu_138_p2;
reg   [0:0] grp_fu_150_p0;
wire   [0:0] or_ln340_3_fu_144_p2;
wire   [0:0] or_ln340_8_fu_246_p2;
wire   [0:0] or_ln340_1_fu_512_p2;
wire   [0:0] or_ln340_6_fu_788_p2;
wire   [39:0] grp_fu_794_p3;
wire   [39:0] grp_fu_454_p3;
wire  signed [40:0] lhs_V_fu_88_p1;
wire   [40:0] ret_V_7_fu_174_p2;
wire   [39:0] grp_fu_194_p1;
wire   [0:0] or_ln785_2_fu_210_p2;
wire   [0:0] xor_ln785_4_fu_214_p2;
wire   [0:0] and_ln786_5_fu_225_p2;
wire   [0:0] xor_ln786_3_fu_229_p2;
wire   [0:0] underflow_3_fu_235_p2;
wire   [0:0] overflow_2_fu_219_p2;
wire  signed [39:0] grp_fu_277_p0;
wire  signed [39:0] grp_fu_277_p1;
wire   [39:0] r_V_7_fu_283_p0;
wire   [79:0] p_Result_s_fu_292_p1;
wire   [79:0] trunc_ln718_fu_300_p0;
wire   [79:0] p_Result_s_15_fu_304_p1;
wire   [79:0] p_Result_1_fu_314_p1;
wire   [79:0] y2_V_fu_344_p1;
wire   [79:0] tmp_3_fu_353_p1;
wire   [79:0] p_Result_2_fu_360_p1;
wire   [0:0] tmp_3_fu_353_p3;
wire   [79:0] tmp_5_fu_372_p1;
wire   [0:0] tmp_5_fu_372_p3;
wire   [0:0] r_fu_367_p2;
wire   [0:0] and_ln412_fu_379_p2;
reg  signed [79:0] grp_fu_389_p0;
wire  signed [40:0] lhs_V_1_fu_816_p1;
reg  signed [79:0] grp_fu_389_p1;
wire  signed [40:0] rhs_V_1_fu_819_p1;
wire   [0:0] p_Result_2_fu_360_p3;
wire   [0:0] grp_fu_657_p2;
wire   [39:0] grp_fu_415_p1;
wire   [79:0] tmp_8_fu_423_p1;
wire   [0:0] tmp_8_fu_423_p3;
wire   [0:0] xor_ln779_fu_430_p2;
wire   [0:0] and_ln779_fu_436_p2;
wire   [0:0] deleted_ones_fu_441_p3;
reg   [0:0] grp_fu_454_p0;
wire   [0:0] underflow_1_fu_126_p2;
wire   [0:0] underflow_2_fu_772_p2;
wire   [0:0] underflow_fu_496_p2;
reg   [39:0] grp_fu_454_p2;
wire   [0:0] deleted_zeros_fu_252_p3;
wire   [0:0] xor_ln785_fu_463_p2;
wire   [0:0] or_ln785_fu_469_p2;
wire   [0:0] xor_ln785_1_fu_474_p2;
wire   [0:0] and_ln781_fu_459_p2;
wire   [0:0] or_ln786_fu_485_p2;
wire   [0:0] xor_ln786_fu_490_p2;
wire   [0:0] overflow_fu_479_p2;
wire   [0:0] or_ln340_2_fu_507_p2;
wire   [79:0] trunc_ln718_1_fu_540_p0;
wire   [39:0] rhs_V_fu_544_p1;
wire   [74:0] rhs_V_fu_544_p3;
wire   [33:0] grp_fu_568_p0;
wire   [79:0] q_V_fu_598_p1;
wire   [79:0] tmp_12_fu_607_p1;
wire   [79:0] p_Result_7_fu_614_p1;
wire   [0:0] tmp_12_fu_607_p3;
wire   [79:0] tmp_14_fu_626_p1;
wire   [0:0] tmp_14_fu_626_p3;
wire   [0:0] r_3_fu_621_p2;
wire   [0:0] and_ln412_1_fu_633_p2;
wire   [0:0] grp_fu_194_p3;
wire   [0:0] p_Result_7_fu_614_p3;
wire   [39:0] p_Result_3_fu_669_p1;
wire   [79:0] tmp_17_fu_692_p1;
wire   [0:0] tmp_17_fu_692_p3;
wire   [0:0] xor_ln779_1_fu_699_p2;
wire   [0:0] and_ln779_1_fu_705_p2;
wire   [0:0] deleted_ones_2_fu_711_p3;
wire   [0:0] deleted_zeros_1_fu_730_p3;
wire   [0:0] xor_ln785_2_fu_739_p2;
wire   [0:0] or_ln785_1_fu_745_p2;
wire   [0:0] xor_ln785_3_fu_750_p2;
wire   [0:0] and_ln781_1_fu_735_p2;
wire   [0:0] or_ln786_1_fu_761_p2;
wire   [0:0] xor_ln786_2_fu_766_p2;
wire   [0:0] overflow_1_fu_755_p2;
wire   [0:0] or_ln340_5_fu_783_p2;
reg   [0:0] grp_fu_794_p0;
wire   [0:0] or_ln340_7_fu_240_p2;
wire   [0:0] xor_ln340_fu_132_p2;
wire   [0:0] or_ln340_4_fu_777_p2;
wire   [0:0] or_ln340_fu_501_p2;
reg   [39:0] grp_fu_794_p2;
wire  signed [39:0] lhs_V_1_fu_816_p0;
wire  signed [39:0] r_V_4_fu_828_p0;
wire   [40:0] sext_ln1118_fu_831_p0;
wire   [39:0] r_V_6_fu_840_p1;
wire    ap_CS_fsm_state20;
wire   [72:0] r_V_6_fu_840_p3;
reg   [80:0] grp_fu_851_p0;
wire  signed [80:0] sext_ln1497_fu_847_p1;
reg   [80:0] grp_fu_851_p1;
wire   [0:0] xor_ln1497_fu_856_p2;
reg   [19:0] ap_NS_fsm;
wire   [39:0] grp_fu_92_p01;
wire   [39:0] grp_fu_92_p03;
wire   [79:0] p_Result_5_fu_112_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 20'd1;
end

calc_mul_41s_40s_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 41 ),
    .din1_WIDTH( 40 ),
    .dout_WIDTH( 81 ))
calc_mul_41s_40s_bkb_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_82_p0),
    .din1(grp_fu_82_p1),
    .ce(1'b1),
    .dout(grp_fu_82_p2)
);

calc_mul_40s_40s_cud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 40 ),
    .din1_WIDTH( 40 ),
    .dout_WIDTH( 80 ))
calc_mul_40s_40s_cud_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_277_p0),
    .din1(grp_fu_277_p1),
    .ce(1'b1),
    .dout(grp_fu_277_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        reg_1002 <= grp_fu_92_p2;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        reg_1002 <= r_V_4_fu_828_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        reg_1002 <= r_V_7_fu_283_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        reg_1002 <= grp_fu_277_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        reg_1037 <= {{grp_fu_92_p2[79:76]}};
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        reg_1037 <= {{p_Result_s_15_fu_304_p1[79:76]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        reg_1113 <= sext_ln1118_fu_831_p1;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state13))) begin
        reg_1113 <= grp_fu_389_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        reg_1113 <= r_V_fu_78_p1;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state19))) begin
        reg_1113 <= grp_fu_82_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state3))) begin
        reg_903 <= grp_fu_150_p3;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        reg_903 <= r_V_2_fu_274_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        reg_914 <= {{grp_fu_92_p2[79:75]}};
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        reg_914 <= {{p_Result_1_fu_314_p1[79:75]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state11))) begin
        reg_929 <= grp_fu_92_p2;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        reg_929 <= trunc_ln718_1_fu_540_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        reg_929 <= grp_fu_150_p3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        reg_929 <= trunc_ln718_fu_300_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        Range1_all_ones_2_reg_1076 <= grp_fu_682_p2;
        Range1_all_zeros_1_reg_1070 <= grp_fu_677_p2;
        and_ln786_3_reg_1087 <= and_ln786_3_fu_719_p2;
        carry_3_reg_1065 <= carry_3_fu_663_p2;
        icmp_ln1497_1_reg_1081 <= grp_fu_851_p2;
        p_Result_8_reg_1059 <= grp_fu_415_p1[32'd39];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        Range1_all_ones_reg_968 <= grp_fu_682_p2;
        Range1_all_zeros_reg_961 <= grp_fu_677_p2;
        Range2_all_ones_reg_951 <= grp_fu_687_p2;
        r_1_reg_956 <= grp_fu_568_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        and_ln786_reg_990 <= and_ln786_fu_448_p2;
        carry_1_reg_985 <= carry_1_fu_409_p2;
        p_Result_3_reg_979 <= p_Result_3_fu_669_p1[32'd39];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        p_Result_10_reg_897 <= grp_fu_415_p1[32'd39];
        p_Result_9_reg_867 <= ret_V_7_fu_174_p2[32'd40];
        p_Val2_13_reg_879 <= grp_fu_150_p3;
        tmp_20_reg_891 <= ret_V_7_fu_174_p2[32'd40];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        p_Result_6_reg_1032 <= grp_fu_92_p2[32'd79];
        r_2_reg_1026 <= grp_fu_568_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        p_Result_s_reg_935 <= p_Result_s_fu_292_p1[32'd79];
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_150_p0 = or_ln340_6_fu_788_p2;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_150_p0 = or_ln340_1_fu_512_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_150_p0 = or_ln340_8_fu_246_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_150_p0 = or_ln340_3_fu_144_p2;
    end else begin
        grp_fu_150_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_389_p0 = lhs_V_1_fu_816_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_389_p0 = sext_ln728_fu_551_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_389_p0 = 40'd1090921693184;
    end else begin
        grp_fu_389_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_389_p1 = rhs_V_1_fu_819_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_389_p1 = reg_1002;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_389_p1 = x_V;
    end else begin
        grp_fu_389_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_454_p0 = underflow_2_fu_772_p2;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_454_p0 = underflow_fu_496_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_454_p0 = underflow_3_fu_235_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_454_p0 = underflow_1_fu_126_p2;
    end else begin
        grp_fu_454_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state3))) begin
        grp_fu_454_p2 = reg_929;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_454_p2 = grp_fu_389_p2;
    end else begin
        grp_fu_454_p2 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_794_p0 = or_ln340_4_fu_777_p2;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_794_p0 = or_ln340_fu_501_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_794_p0 = or_ln340_7_fu_240_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_794_p0 = xor_ln340_fu_132_p2;
    end else begin
        grp_fu_794_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state3))) begin
        grp_fu_794_p2 = reg_929;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_794_p2 = grp_fu_389_p2;
    end else begin
        grp_fu_794_p2 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_82_p0 = sext_ln1118_fu_831_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_82_p0 = r_V_2_fu_274_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_fu_82_p0 = r_V_fu_78_p1;
    end else begin
        grp_fu_82_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_82_p1 = r_V_4_fu_828_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_82_p1 = r_V_2_fu_274_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_fu_82_p1 = r_V_fu_78_p1;
    end else begin
        grp_fu_82_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_851_p0 = sext_ln1497_fu_847_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_851_p0 = reg_1113;
    end else begin
        grp_fu_851_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_fu_851_p1 = reg_1113;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_851_p1 = 80'd73786976294838206465;
    end else begin
        grp_fu_851_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_92_p0 = grp_fu_92_p03;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_92_p0 = sext_ln728_fu_551_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_92_p0 = grp_fu_92_p01;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_92_p0 = 40'd34359738368;
    end else begin
        grp_fu_92_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_92_p1 = zext_ln415_1_fu_639_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_92_p1 = reg_1113;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_92_p1 = zext_ln415_fu_385_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_92_p1 = x_V;
    end else begin
        grp_fu_92_p1 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln412_1_fu_633_p2 = (tmp_14_fu_626_p3 & r_3_fu_621_p2);

assign and_ln412_fu_379_p2 = (tmp_5_fu_372_p3 & r_fu_367_p2);

assign and_ln779_1_fu_705_p2 = (xor_ln779_1_fu_699_p2 & grp_fu_687_p2);

assign and_ln779_fu_436_p2 = (xor_ln779_fu_430_p2 & Range2_all_ones_reg_951);

assign and_ln781_1_fu_735_p2 = (carry_3_reg_1065 & Range1_all_ones_2_reg_1076);

assign and_ln781_fu_459_p2 = (carry_1_reg_985 & Range1_all_ones_reg_968);

assign and_ln786_3_fu_719_p2 = (grp_fu_415_p3 & deleted_ones_2_fu_711_p3);

assign and_ln786_5_fu_225_p2 = (tmp_20_reg_891 & p_Result_10_reg_897);

assign and_ln786_fu_448_p2 = (p_Result_3_fu_669_p3 & deleted_ones_fu_441_p3);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_return = (xor_ln1497_fu_856_p2 | icmp_ln1497_1_reg_1081);

assign carry_1_fu_409_p2 = (p_Result_2_fu_360_p3 & grp_fu_657_p2);

assign carry_3_fu_663_p2 = (p_Result_7_fu_614_p3 & grp_fu_657_p2);

assign deleted_ones_2_fu_711_p3 = ((carry_3_fu_663_p2[0:0] === 1'b1) ? and_ln779_1_fu_705_p2 : grp_fu_682_p2);

assign deleted_ones_fu_441_p3 = ((carry_1_fu_409_p2[0:0] === 1'b1) ? and_ln779_fu_436_p2 : Range1_all_ones_reg_968);

assign deleted_zeros_1_fu_730_p3 = ((carry_3_reg_1065[0:0] === 1'b1) ? Range1_all_ones_2_reg_1076 : Range1_all_zeros_1_reg_1070);

assign deleted_zeros_fu_252_p3 = ((carry_1_reg_985[0:0] === 1'b1) ? Range1_all_ones_reg_968 : Range1_all_zeros_reg_961);

assign grp_fu_150_p3 = ((grp_fu_150_p0[0:0] === 1'b1) ? grp_fu_794_p3 : grp_fu_454_p3);

assign grp_fu_194_p1 = grp_fu_92_p2;

assign grp_fu_194_p3 = grp_fu_194_p1[32'd39];

assign grp_fu_277_p0 = r_V_7_fu_283_p1;

assign grp_fu_277_p1 = r_V_7_fu_283_p1;

assign grp_fu_389_p2 = ($signed(grp_fu_389_p0) + $signed(grp_fu_389_p1));

assign grp_fu_415_p1 = grp_fu_92_p2;

assign grp_fu_415_p3 = grp_fu_415_p1[32'd39];

assign grp_fu_454_p3 = ((grp_fu_454_p0[0:0] === 1'b1) ? 40'd549755813888 : grp_fu_454_p2);

assign grp_fu_568_p0 = reg_929;

assign grp_fu_568_p2 = ((grp_fu_568_p0 != 34'd0) ? 1'b1 : 1'b0);

assign grp_fu_657_p2 = (grp_fu_194_p3 ^ 1'd1);

assign grp_fu_677_p2 = ((reg_914 == 5'd0) ? 1'b1 : 1'b0);

assign grp_fu_682_p2 = ((reg_914 == 5'd31) ? 1'b1 : 1'b0);

assign grp_fu_687_p2 = ((reg_1037 == 4'd15) ? 1'b1 : 1'b0);

assign grp_fu_794_p3 = ((grp_fu_794_p0[0:0] === 1'b1) ? 40'd549755813887 : grp_fu_794_p2);

assign grp_fu_851_p2 = (($signed(grp_fu_851_p0) < $signed(grp_fu_851_p1)) ? 1'b1 : 1'b0);

assign grp_fu_92_p01 = {{y2_V_fu_344_p1[74:35]}};

assign grp_fu_92_p03 = {{q_V_fu_598_p1[74:35]}};

assign grp_fu_92_p2 = ($signed(grp_fu_92_p0) + $signed(grp_fu_92_p1));

assign lhs_V_1_fu_816_p0 = reg_929;

assign lhs_V_1_fu_816_p1 = lhs_V_1_fu_816_p0;

assign lhs_V_fu_88_p0 = x_V;

assign lhs_V_fu_88_p1 = lhs_V_fu_88_p0;

assign or_ln340_1_fu_512_p2 = (or_ln340_2_fu_507_p2 | and_ln781_fu_459_p2);

assign or_ln340_2_fu_507_p2 = (xor_ln785_1_fu_474_p2 | and_ln786_reg_990);

assign or_ln340_3_fu_144_p2 = (xor_ln340_1_fu_138_p2 | p_Result_5_fu_112_p3);

assign or_ln340_4_fu_777_p2 = (underflow_2_fu_772_p2 | overflow_1_fu_755_p2);

assign or_ln340_5_fu_783_p2 = (xor_ln785_3_fu_750_p2 | and_ln786_3_reg_1087);

assign or_ln340_6_fu_788_p2 = (or_ln340_5_fu_783_p2 | and_ln781_1_fu_735_p2);

assign or_ln340_7_fu_240_p2 = (underflow_3_fu_235_p2 | overflow_2_fu_219_p2);

assign or_ln340_8_fu_246_p2 = (xor_ln785_4_fu_214_p2 | and_ln786_5_fu_225_p2);

assign or_ln340_fu_501_p2 = (underflow_fu_496_p2 | overflow_fu_479_p2);

assign or_ln785_1_fu_745_p2 = (xor_ln785_2_fu_739_p2 | p_Result_8_reg_1059);

assign or_ln785_2_fu_210_p2 = (tmp_20_reg_891 | p_Result_10_reg_897);

assign or_ln785_fu_469_p2 = (xor_ln785_fu_463_p2 | p_Result_3_reg_979);

assign or_ln786_1_fu_761_p2 = (and_ln786_3_reg_1087 | and_ln781_1_fu_735_p2);

assign or_ln786_fu_485_p2 = (and_ln786_reg_990 | and_ln781_fu_459_p2);

assign overflow_1_fu_755_p2 = (xor_ln785_3_fu_750_p2 & or_ln785_1_fu_745_p2);

assign overflow_2_fu_219_p2 = (xor_ln785_4_fu_214_p2 & or_ln785_2_fu_210_p2);

assign overflow_fu_479_p2 = (xor_ln785_1_fu_474_p2 & or_ln785_fu_469_p2);

assign p_Result_1_fu_314_p1 = grp_fu_82_p2;

assign p_Result_2_fu_360_p1 = reg_1113;

assign p_Result_2_fu_360_p3 = p_Result_2_fu_360_p1[32'd74];

assign p_Result_3_fu_669_p1 = grp_fu_92_p2;

assign p_Result_3_fu_669_p3 = p_Result_3_fu_669_p1[32'd39];

assign p_Result_4_fu_98_p3 = ret_V_5_fu_188_p2[32'd40];

assign p_Result_5_fu_112_p1 = p_Result_5_fu_112_p10;

assign p_Result_5_fu_112_p10 = ($signed(grp_fu_389_p0) + $signed(grp_fu_389_p1));

assign p_Result_5_fu_112_p3 = p_Result_5_fu_112_p1[32'd39];

assign p_Result_7_fu_614_p1 = reg_1002;

assign p_Result_7_fu_614_p3 = p_Result_7_fu_614_p1[32'd74];

assign p_Result_s_15_fu_304_p1 = grp_fu_82_p2;

assign p_Result_s_fu_292_p1 = grp_fu_82_p2;

assign q_V_fu_598_p1 = reg_1002;

assign r_3_fu_621_p2 = (tmp_12_fu_607_p3 | r_2_reg_1026);

assign r_V_2_fu_274_p1 = p_Val2_13_reg_879;

assign r_V_4_fu_828_p0 = reg_929;

assign r_V_4_fu_828_p1 = r_V_4_fu_828_p0;

assign r_V_6_fu_840_p1 = reg_903;

assign r_V_6_fu_840_p3 = {{r_V_6_fu_840_p1}, {33'd0}};

assign r_V_7_fu_283_p0 = reg_903;

assign r_V_7_fu_283_p1 = $signed(r_V_7_fu_283_p0);

assign r_V_fu_78_p1 = $signed(y_V);

assign r_fu_367_p2 = (tmp_3_fu_353_p3 | r_1_reg_956);

assign ret_V_5_fu_188_p2 = ($signed(41'd2190433320960) + $signed(lhs_V_fu_88_p1));

assign ret_V_7_fu_174_p2 = ($signed(41'd34359738368) + $signed(lhs_V_fu_88_p1));

assign rhs_V_1_fu_819_p1 = p_Val2_13_reg_879;

assign rhs_V_fu_544_p1 = reg_903;

assign rhs_V_fu_544_p3 = {{rhs_V_fu_544_p1}, {35'd0}};

assign sext_ln1118_fu_831_p0 = reg_1113;

assign sext_ln1118_fu_831_p1 = $signed(sext_ln1118_fu_831_p0);

assign sext_ln1497_fu_847_p1 = $signed(r_V_6_fu_840_p3);

assign sext_ln728_fu_551_p1 = $signed(rhs_V_fu_544_p3);

assign tmp_12_fu_607_p1 = reg_1002;

assign tmp_12_fu_607_p3 = tmp_12_fu_607_p1[32'd35];

assign tmp_14_fu_626_p1 = reg_1002;

assign tmp_14_fu_626_p3 = tmp_14_fu_626_p1[32'd34];

assign tmp_17_fu_692_p1 = reg_1002;

assign tmp_17_fu_692_p3 = tmp_17_fu_692_p1[32'd75];

assign tmp_3_fu_353_p1 = reg_1113;

assign tmp_3_fu_353_p3 = tmp_3_fu_353_p1[32'd35];

assign tmp_5_fu_372_p1 = reg_1113;

assign tmp_5_fu_372_p3 = tmp_5_fu_372_p1[32'd34];

assign tmp_8_fu_423_p1 = reg_1113;

assign tmp_8_fu_423_p3 = tmp_8_fu_423_p1[32'd75];

assign trunc_ln718_1_fu_540_p0 = grp_fu_82_p2;

assign trunc_ln718_1_fu_540_p1 = trunc_ln718_1_fu_540_p0[33:0];

assign trunc_ln718_fu_300_p0 = grp_fu_82_p2;

assign trunc_ln718_fu_300_p1 = trunc_ln718_fu_300_p0[33:0];

assign underflow_1_fu_126_p2 = (xor_ln786_1_fu_120_p2 & p_Result_4_fu_98_p3);

assign underflow_2_fu_772_p2 = (xor_ln786_2_fu_766_p2 & p_Result_6_reg_1032);

assign underflow_3_fu_235_p2 = (xor_ln786_3_fu_229_p2 & p_Result_9_reg_867);

assign underflow_fu_496_p2 = (xor_ln786_fu_490_p2 & p_Result_s_reg_935);

assign xor_ln1497_fu_856_p2 = (grp_fu_851_p2 ^ 1'd1);

assign xor_ln340_1_fu_138_p2 = (p_Result_4_fu_98_p3 ^ 1'd1);

assign xor_ln340_fu_132_p2 = (p_Result_5_fu_112_p3 ^ p_Result_4_fu_98_p3);

assign xor_ln779_1_fu_699_p2 = (tmp_17_fu_692_p3 ^ 1'd1);

assign xor_ln779_fu_430_p2 = (tmp_8_fu_423_p3 ^ 1'd1);

assign xor_ln785_1_fu_474_p2 = (p_Result_s_reg_935 ^ 1'd1);

assign xor_ln785_2_fu_739_p2 = (deleted_zeros_1_fu_730_p3 ^ 1'd1);

assign xor_ln785_3_fu_750_p2 = (p_Result_6_reg_1032 ^ 1'd1);

assign xor_ln785_4_fu_214_p2 = (p_Result_9_reg_867 ^ 1'd1);

assign xor_ln785_fu_463_p2 = (deleted_zeros_fu_252_p3 ^ 1'd1);

assign xor_ln786_1_fu_120_p2 = (p_Result_5_fu_112_p3 ^ 1'd1);

assign xor_ln786_2_fu_766_p2 = (or_ln786_1_fu_761_p2 ^ 1'd1);

assign xor_ln786_3_fu_229_p2 = (1'd1 ^ and_ln786_5_fu_225_p2);

assign xor_ln786_fu_490_p2 = (or_ln786_fu_485_p2 ^ 1'd1);

assign y2_V_fu_344_p1 = reg_1113;

assign zext_ln415_1_fu_639_p1 = and_ln412_1_fu_633_p2;

assign zext_ln415_fu_385_p1 = and_ln412_fu_379_p2;

endmodule //pretest
