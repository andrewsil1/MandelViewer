// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module pretest (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        x_V,
        y_V,
        ap_return
);

parameter    ap_ST_fsm_state1 = 12'd1;
parameter    ap_ST_fsm_state2 = 12'd2;
parameter    ap_ST_fsm_state3 = 12'd4;
parameter    ap_ST_fsm_state4 = 12'd8;
parameter    ap_ST_fsm_state5 = 12'd16;
parameter    ap_ST_fsm_state6 = 12'd32;
parameter    ap_ST_fsm_state7 = 12'd64;
parameter    ap_ST_fsm_state8 = 12'd128;
parameter    ap_ST_fsm_state9 = 12'd256;
parameter    ap_ST_fsm_state10 = 12'd512;
parameter    ap_ST_fsm_state11 = 12'd1024;
parameter    ap_ST_fsm_state12 = 12'd2048;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [35:0] x_V;
input  [35:0] y_V;
output  [0:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [11:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [0:0] p_Result_9_reg_867;
wire  signed [35:0] grp_fu_533_p3;
reg  signed [35:0] p_Val2_13_reg_879;
reg   [0:0] tmp_20_reg_891;
wire   [0:0] grp_fu_194_p3;
reg   [0:0] p_Result_10_reg_897;
reg   [3:0] p_Result_1_reg_903;
wire    ap_CS_fsm_state3;
wire  signed [72:0] r_V_4_fu_828_p1;
reg  signed [72:0] reg_908;
wire    ap_CS_fsm_state9;
wire  signed [35:0] p_Val2_12_fu_807_p3;
wire    ap_CS_fsm_state8;
wire  signed [71:0] r_V_fu_78_p1;
wire  signed [71:0] r_V_2_fu_306_p1;
wire   [72:0] grp_fu_309_p2;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state11;
wire   [71:0] grp_fu_106_p2;
wire    ap_CS_fsm_state6;
wire  signed [72:0] sext_ln1118_fu_831_p1;
reg  signed [72:0] reg_917;
wire   [30:0] trunc_ln718_fu_282_p1;
wire   [71:0] grp_fu_92_p2;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state7;
wire   [30:0] trunc_ln718_1_fu_541_p1;
reg   [0:0] p_Result_s_reg_923;
reg   [2:0] p_Result_s_15_reg_939;
reg   [0:0] p_Result_3_reg_957;
wire   [0:0] carry_1_fu_395_p2;
reg   [0:0] carry_1_reg_964;
wire   [0:0] Range1_all_ones_fu_409_p2;
reg   [0:0] Range1_all_ones_reg_970;
wire   [0:0] Range2_all_ones_fu_414_p2;
reg   [0:0] Range2_all_ones_reg_975;
reg   [71:0] reg_982;
wire  signed [71:0] r_V_7_fu_315_p1;
wire    ap_CS_fsm_state2;
wire   [0:0] Range1_all_zeros_fu_419_p2;
reg   [0:0] Range1_all_zeros_reg_987;
wire   [0:0] grp_fu_569_p2;
reg   [0:0] r_2_reg_1017;
reg   [0:0] p_Result_6_reg_1023;
wire   [0:0] Range1_all_ones_2_fu_584_p2;
reg   [0:0] Range1_all_ones_2_reg_1028;
wire   [0:0] Range2_all_ones_1_fu_600_p2;
reg   [0:0] Range2_all_ones_1_reg_1033;
wire   [0:0] Range1_all_zeros_1_fu_606_p2;
reg   [0:0] Range1_all_zeros_1_reg_1045;
wire   [0:0] p_Result_8_fu_688_p3;
reg   [0:0] p_Result_8_reg_1056;
wire   [0:0] carry_3_fu_682_p2;
reg   [0:0] carry_3_reg_1061;
wire   [0:0] xor_ln785_3_fu_726_p2;
reg   [0:0] xor_ln785_3_reg_1066;
wire   [0:0] and_ln781_1_fu_721_p2;
reg   [0:0] and_ln781_1_reg_1071;
wire   [0:0] underflow_2_fu_749_p2;
reg   [0:0] underflow_2_reg_1077;
wire   [0:0] and_ln786_3_fu_731_p2;
reg   [0:0] and_ln786_3_reg_1082;
wire   [0:0] grp_fu_851_p2;
reg   [0:0] icmp_ln1497_1_reg_1088;
wire   [71:0] grp_fu_82_p2;
reg   [71:0] reg_1113;
reg  signed [35:0] grp_fu_82_p0;
reg  signed [35:0] grp_fu_82_p1;
wire  signed [35:0] lhs_V_fu_88_p0;
reg  signed [71:0] grp_fu_92_p0;
wire  signed [71:0] sext_ln728_fu_552_p1;
wire  signed [36:0] lhs_V_1_fu_815_p1;
reg   [71:0] grp_fu_92_p1;
wire   [35:0] zext_ln415_1_fu_658_p1;
wire   [35:0] zext_ln415_fu_371_p1;
wire  signed [36:0] rhs_V_1_fu_819_p1;
wire   [36:0] ret_V_5_fu_375_p2;
reg  signed [71:0] grp_fu_106_p0;
reg  signed [71:0] grp_fu_106_p1;
wire   [35:0] p_Result_5_fu_112_p1;
wire   [0:0] p_Result_5_fu_112_p3;
wire   [0:0] p_Result_4_fu_98_p3;
wire   [0:0] xor_ln786_1_fu_120_p2;
wire   [0:0] xor_ln340_1_fu_138_p2;
reg   [0:0] grp_fu_150_p0;
wire   [0:0] or_ln340_4_fu_780_p2;
wire   [0:0] or_ln340_fu_501_p2;
wire   [0:0] xor_ln340_fu_132_p2;
wire   [0:0] or_ln340_7_fu_240_p2;
reg   [35:0] grp_fu_150_p2;
reg   [0:0] grp_fu_158_p0;
wire   [0:0] underflow_fu_496_p2;
wire   [0:0] underflow_1_fu_126_p2;
wire   [0:0] underflow_3_fu_235_p2;
reg   [35:0] grp_fu_158_p2;
wire  signed [36:0] lhs_V_fu_88_p1;
wire   [36:0] ret_V_7_fu_174_p2;
wire   [35:0] grp_fu_194_p1;
wire   [0:0] or_ln785_2_fu_210_p2;
wire   [0:0] xor_ln785_4_fu_214_p2;
wire   [0:0] and_ln786_5_fu_225_p2;
wire   [0:0] xor_ln786_3_fu_229_p2;
wire   [0:0] overflow_2_fu_219_p2;
wire   [0:0] and_ln779_1_fu_709_p2;
reg  signed [36:0] grp_fu_309_p0;
reg  signed [35:0] grp_fu_309_p1;
wire   [35:0] r_V_7_fu_315_p0;
wire   [0:0] tmp_3_fu_333_p3;
wire   [0:0] tmp_5_fu_358_p3;
wire   [0:0] r_fu_352_p2;
wire   [0:0] and_ln412_fu_365_p2;
wire   [0:0] p_Result_2_fu_345_p3;
wire   [0:0] grp_fu_703_p2;
wire   [35:0] p_Result_3_fu_401_p1;
wire   [0:0] tmp_8_fu_429_p3;
wire   [0:0] xor_ln779_fu_436_p2;
wire   [0:0] and_ln779_fu_442_p2;
wire   [0:0] deleted_zeros_fu_424_p3;
wire   [0:0] xor_ln785_fu_457_p2;
wire   [0:0] or_ln785_fu_463_p2;
wire   [0:0] xor_ln785_1_fu_468_p2;
wire   [0:0] deleted_ones_fu_447_p3;
wire   [0:0] and_ln781_fu_453_p2;
wire   [0:0] and_ln786_fu_479_p2;
wire   [0:0] or_ln786_fu_484_p2;
wire   [0:0] xor_ln786_fu_490_p2;
wire   [0:0] overflow_fu_473_p2;
wire   [0:0] or_ln340_2_fu_507_p2;
reg   [0:0] grp_fu_533_p0;
wire   [0:0] or_ln340_3_fu_144_p2;
wire   [0:0] or_ln340_8_fu_246_p2;
wire   [0:0] or_ln340_1_fu_513_p2;
wire   [35:0] grp_fu_150_p3;
wire   [35:0] grp_fu_158_p3;
wire   [35:0] rhs_V_fu_545_p1;
wire   [67:0] rhs_V_fu_545_p3;
wire   [30:0] grp_fu_569_p0;
wire   [3:0] tmp_1_fu_590_p4;
wire   [2:0] tmp_fu_574_p4;
wire   [71:0] q_V_fu_617_p1;
wire   [71:0] tmp_12_fu_626_p1;
wire   [71:0] p_Result_7_fu_633_p1;
wire   [0:0] tmp_12_fu_626_p3;
wire   [0:0] tmp_14_fu_645_p3;
wire   [0:0] r_3_fu_640_p2;
wire   [0:0] and_ln412_1_fu_652_p2;
wire   [0:0] tmp_17_fu_696_p3;
wire   [0:0] p_Result_7_fu_633_p3;
wire   [35:0] p_Result_8_fu_688_p1;
wire   [71:0] tmp_17_fu_696_p1;
wire   [0:0] xor_ln779_1_fu_676_p2;
wire   [0:0] deleted_ones_2_fu_252_p3;
wire   [0:0] or_ln786_1_fu_737_p2;
wire   [0:0] xor_ln786_2_fu_743_p2;
wire   [0:0] deleted_zeros_1_fu_759_p3;
wire   [0:0] xor_ln785_2_fu_764_p2;
wire   [0:0] or_ln785_1_fu_770_p2;
wire   [0:0] overflow_1_fu_775_p2;
wire   [0:0] or_ln340_5_fu_785_p2;
wire   [0:0] or_ln340_6_fu_789_p2;
wire  signed [35:0] r_V_4_fu_828_p0;
wire   [36:0] sext_ln1118_fu_831_p0;
wire   [35:0] r_V_6_fu_840_p1;
wire    ap_CS_fsm_state12;
wire   [65:0] r_V_6_fu_840_p3;
reg   [72:0] grp_fu_851_p0;
wire  signed [72:0] sext_ln1497_fu_847_p1;
reg   [72:0] grp_fu_851_p1;
wire   [0:0] xor_ln1497_fu_856_p2;
reg   [11:0] ap_NS_fsm;
wire   [35:0] grp_fu_92_p01;
wire   [35:0] grp_fu_92_p03;
wire   [71:0] p_Result_5_fu_112_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 12'd1;
end

calc_mul_36s_36s_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 36 ),
    .dout_WIDTH( 72 ))
calc_mul_36s_36s_bkb_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_82_p0),
    .din1(grp_fu_82_p1),
    .ce(1'b1),
    .dout(grp_fu_82_p2)
);

calc_mul_37s_36s_cud #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 37 ),
    .din1_WIDTH( 36 ),
    .dout_WIDTH( 73 ))
calc_mul_37s_36s_cud_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_309_p0),
    .din1(grp_fu_309_p1),
    .ce(1'b1),
    .dout(grp_fu_309_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        reg_908 <= grp_fu_106_p2;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state5))) begin
        reg_908 <= grp_fu_309_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        reg_908 <= r_V_2_fu_306_p1;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        reg_908 <= r_V_fu_78_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        reg_908 <= p_Val2_12_fu_807_p3;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        reg_908 <= r_V_4_fu_828_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        reg_917 <= trunc_ln718_1_fu_541_p1;
    end else if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state8) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1)))) begin
        reg_917 <= grp_fu_92_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        reg_917 <= trunc_ln718_fu_282_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        reg_917 <= sext_ln1118_fu_831_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        reg_982 <= r_V_7_fu_315_p1;
    end else if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2))) begin
        reg_982 <= grp_fu_533_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        Range1_all_ones_2_reg_1028 <= Range1_all_ones_2_fu_584_p2;
        Range1_all_zeros_1_reg_1045 <= Range1_all_zeros_1_fu_606_p2;
        Range2_all_ones_1_reg_1033 <= Range2_all_ones_1_fu_600_p2;
        p_Result_6_reg_1023 <= grp_fu_92_p2[32'd71];
        r_2_reg_1017 <= grp_fu_569_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        Range1_all_ones_reg_970 <= Range1_all_ones_fu_409_p2;
        Range1_all_zeros_reg_987 <= Range1_all_zeros_fu_419_p2;
        Range2_all_ones_reg_975 <= Range2_all_ones_fu_414_p2;
        carry_1_reg_964 <= carry_1_fu_395_p2;
        p_Result_3_reg_957 <= p_Result_3_fu_401_p1[32'd35];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        and_ln781_1_reg_1071 <= and_ln781_1_fu_721_p2;
        and_ln786_3_reg_1082 <= and_ln786_3_fu_731_p2;
        carry_3_reg_1061 <= carry_3_fu_682_p2;
        icmp_ln1497_1_reg_1088 <= grp_fu_851_p2;
        p_Result_8_reg_1056 <= p_Result_8_fu_688_p1[32'd35];
        underflow_2_reg_1077 <= underflow_2_fu_749_p2;
        xor_ln785_3_reg_1066 <= xor_ln785_3_fu_726_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        p_Result_10_reg_897 <= grp_fu_194_p1[32'd35];
        p_Result_9_reg_867 <= ret_V_7_fu_174_p2[32'd36];
        p_Val2_13_reg_879 <= grp_fu_533_p3;
        tmp_20_reg_891 <= ret_V_7_fu_174_p2[32'd36];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        p_Result_1_reg_903 <= {{grp_fu_82_p2[71:68]}};
        p_Result_s_15_reg_939 <= {{grp_fu_82_p2[71:69]}};
        p_Result_s_reg_923 <= grp_fu_82_p2[32'd71];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state3))) begin
        reg_1113 <= grp_fu_82_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_106_p0 = sext_ln728_fu_552_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_fu_106_p0 = 36'd67645734912;
    end else begin
        grp_fu_106_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_106_p1 = reg_908;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_fu_106_p1 = x_V;
    end else begin
        grp_fu_106_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_150_p0 = or_ln340_4_fu_780_p2;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_150_p0 = or_ln340_fu_501_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_150_p0 = or_ln340_7_fu_240_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_fu_150_p0 = xor_ln340_fu_132_p2;
    end else begin
        grp_fu_150_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state2))) begin
        grp_fu_150_p2 = reg_917;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_fu_150_p2 = grp_fu_106_p2;
    end else begin
        grp_fu_150_p2 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_158_p0 = underflow_2_reg_1077;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_158_p0 = underflow_fu_496_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_158_p0 = underflow_3_fu_235_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_fu_158_p0 = underflow_1_fu_126_p2;
    end else begin
        grp_fu_158_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state2))) begin
        grp_fu_158_p2 = reg_917;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_fu_158_p2 = grp_fu_106_p2;
    end else begin
        grp_fu_158_p2 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_309_p0 = sext_ln1118_fu_831_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_309_p0 = r_V_7_fu_315_p1;
    end else begin
        grp_fu_309_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_309_p1 = r_V_4_fu_828_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_309_p1 = r_V_7_fu_315_p1;
    end else begin
        grp_fu_309_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_533_p0 = or_ln340_1_fu_513_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_533_p0 = or_ln340_8_fu_246_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_fu_533_p0 = or_ln340_3_fu_144_p2;
    end else begin
        grp_fu_533_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_82_p0 = r_V_2_fu_306_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_fu_82_p0 = r_V_fu_78_p1;
    end else begin
        grp_fu_82_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_82_p1 = r_V_2_fu_306_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_fu_82_p1 = r_V_fu_78_p1;
    end else begin
        grp_fu_82_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_851_p0 = sext_ln1497_fu_847_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_851_p0 = reg_908;
    end else begin
        grp_fu_851_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_851_p1 = reg_908;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_851_p1 = 72'd1152921504606846977;
    end else begin
        grp_fu_851_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_92_p0 = lhs_V_1_fu_815_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_92_p0 = grp_fu_92_p03;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_92_p0 = sext_ln728_fu_552_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_92_p0 = grp_fu_92_p01;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_fu_92_p0 = 36'd4294967296;
    end else begin
        grp_fu_92_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_92_p1 = rhs_V_1_fu_819_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_92_p1 = zext_ln415_1_fu_658_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_92_p1 = reg_1113;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_92_p1 = zext_ln415_fu_371_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_fu_92_p1 = x_V;
    end else begin
        grp_fu_92_p1 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Range1_all_ones_2_fu_584_p2 = ((tmp_1_fu_590_p4 == 4'd15) ? 1'b1 : 1'b0);

assign Range1_all_ones_fu_409_p2 = ((p_Result_1_reg_903 == 4'd15) ? 1'b1 : 1'b0);

assign Range1_all_zeros_1_fu_606_p2 = ((tmp_1_fu_590_p4 == 4'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_fu_419_p2 = ((p_Result_1_reg_903 == 4'd0) ? 1'b1 : 1'b0);

assign Range2_all_ones_1_fu_600_p2 = ((tmp_fu_574_p4 == 3'd7) ? 1'b1 : 1'b0);

assign Range2_all_ones_fu_414_p2 = ((p_Result_s_15_reg_939 == 3'd7) ? 1'b1 : 1'b0);

assign and_ln412_1_fu_652_p2 = (tmp_14_fu_645_p3 & r_3_fu_640_p2);

assign and_ln412_fu_365_p2 = (tmp_5_fu_358_p3 & r_fu_352_p2);

assign and_ln779_1_fu_709_p2 = (xor_ln779_1_fu_676_p2 & Range2_all_ones_1_reg_1033);

assign and_ln779_fu_442_p2 = (xor_ln779_fu_436_p2 & Range2_all_ones_reg_975);

assign and_ln781_1_fu_721_p2 = (carry_3_fu_682_p2 & Range1_all_ones_2_reg_1028);

assign and_ln781_fu_453_p2 = (carry_1_reg_964 & Range1_all_ones_reg_970);

assign and_ln786_3_fu_731_p2 = (p_Result_8_fu_688_p3 & deleted_ones_2_fu_252_p3);

assign and_ln786_5_fu_225_p2 = (tmp_20_reg_891 & p_Result_10_reg_897);

assign and_ln786_fu_479_p2 = (p_Result_3_reg_957 & deleted_ones_fu_447_p3);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_return = (xor_ln1497_fu_856_p2 | icmp_ln1497_1_reg_1088);

assign carry_1_fu_395_p2 = (p_Result_2_fu_345_p3 & grp_fu_703_p2);

assign carry_3_fu_682_p2 = (p_Result_7_fu_633_p3 & grp_fu_703_p2);

assign deleted_ones_2_fu_252_p3 = ((carry_3_fu_682_p2[0:0] === 1'b1) ? and_ln779_1_fu_709_p2 : Range1_all_ones_2_reg_1028);

assign deleted_ones_fu_447_p3 = ((carry_1_reg_964[0:0] === 1'b1) ? and_ln779_fu_442_p2 : Range1_all_ones_reg_970);

assign deleted_zeros_1_fu_759_p3 = ((carry_3_reg_1061[0:0] === 1'b1) ? Range1_all_ones_2_reg_1028 : Range1_all_zeros_1_reg_1045);

assign deleted_zeros_fu_424_p3 = ((carry_1_reg_964[0:0] === 1'b1) ? Range1_all_ones_reg_970 : Range1_all_zeros_reg_987);

assign grp_fu_106_p2 = ($signed(grp_fu_106_p0) + $signed(grp_fu_106_p1));

assign grp_fu_150_p3 = ((grp_fu_150_p0[0:0] === 1'b1) ? 36'd34359738367 : grp_fu_150_p2);

assign grp_fu_158_p3 = ((grp_fu_158_p0[0:0] === 1'b1) ? 36'd34359738368 : grp_fu_158_p2);

assign grp_fu_194_p1 = grp_fu_92_p2;

assign grp_fu_194_p3 = grp_fu_194_p1[32'd35];

assign grp_fu_533_p3 = ((grp_fu_533_p0[0:0] === 1'b1) ? grp_fu_150_p3 : grp_fu_158_p3);

assign grp_fu_569_p0 = reg_917;

assign grp_fu_569_p2 = ((grp_fu_569_p0 != 31'd0) ? 1'b1 : 1'b0);

assign grp_fu_703_p2 = (grp_fu_194_p3 ^ 1'd1);

assign grp_fu_851_p2 = (($signed(grp_fu_851_p0) < $signed(grp_fu_851_p1)) ? 1'b1 : 1'b0);

assign grp_fu_92_p01 = {{reg_1113[67:32]}};

assign grp_fu_92_p03 = {{q_V_fu_617_p1[67:32]}};

assign grp_fu_92_p2 = ($signed(grp_fu_92_p0) + $signed(grp_fu_92_p1));

assign lhs_V_1_fu_815_p1 = p_Val2_12_fu_807_p3;

assign lhs_V_fu_88_p0 = x_V;

assign lhs_V_fu_88_p1 = lhs_V_fu_88_p0;

assign or_ln340_1_fu_513_p2 = (or_ln340_2_fu_507_p2 | and_ln781_fu_453_p2);

assign or_ln340_2_fu_507_p2 = (xor_ln785_1_fu_468_p2 | and_ln786_fu_479_p2);

assign or_ln340_3_fu_144_p2 = (xor_ln340_1_fu_138_p2 | p_Result_5_fu_112_p3);

assign or_ln340_4_fu_780_p2 = (underflow_2_reg_1077 | overflow_1_fu_775_p2);

assign or_ln340_5_fu_785_p2 = (xor_ln785_3_reg_1066 | and_ln786_3_reg_1082);

assign or_ln340_6_fu_789_p2 = (or_ln340_5_fu_785_p2 | and_ln781_1_reg_1071);

assign or_ln340_7_fu_240_p2 = (underflow_3_fu_235_p2 | overflow_2_fu_219_p2);

assign or_ln340_8_fu_246_p2 = (xor_ln785_4_fu_214_p2 | and_ln786_5_fu_225_p2);

assign or_ln340_fu_501_p2 = (underflow_fu_496_p2 | overflow_fu_473_p2);

assign or_ln785_1_fu_770_p2 = (xor_ln785_2_fu_764_p2 | p_Result_8_reg_1056);

assign or_ln785_2_fu_210_p2 = (tmp_20_reg_891 | p_Result_10_reg_897);

assign or_ln785_fu_463_p2 = (xor_ln785_fu_457_p2 | p_Result_3_reg_957);

assign or_ln786_1_fu_737_p2 = (and_ln786_3_fu_731_p2 | and_ln781_1_fu_721_p2);

assign or_ln786_fu_484_p2 = (and_ln786_fu_479_p2 | and_ln781_fu_453_p2);

assign overflow_1_fu_775_p2 = (xor_ln785_3_reg_1066 & or_ln785_1_fu_770_p2);

assign overflow_2_fu_219_p2 = (xor_ln785_4_fu_214_p2 & or_ln785_2_fu_210_p2);

assign overflow_fu_473_p2 = (xor_ln785_1_fu_468_p2 & or_ln785_fu_463_p2);

assign p_Result_2_fu_345_p3 = reg_1113[32'd67];

assign p_Result_3_fu_401_p1 = grp_fu_92_p2;

assign p_Result_4_fu_98_p3 = ret_V_5_fu_375_p2[32'd36];

assign p_Result_5_fu_112_p1 = p_Result_5_fu_112_p10;

assign p_Result_5_fu_112_p10 = ($signed(grp_fu_106_p0) + $signed(grp_fu_106_p1));

assign p_Result_5_fu_112_p3 = p_Result_5_fu_112_p1[32'd35];

assign p_Result_7_fu_633_p1 = reg_917;

assign p_Result_7_fu_633_p3 = p_Result_7_fu_633_p1[32'd67];

assign p_Result_8_fu_688_p1 = grp_fu_92_p2;

assign p_Result_8_fu_688_p3 = p_Result_8_fu_688_p1[32'd35];

assign p_Val2_12_fu_807_p3 = ((or_ln340_6_fu_789_p2[0:0] === 1'b1) ? grp_fu_150_p3 : grp_fu_158_p3);

assign q_V_fu_617_p1 = reg_917;

assign r_3_fu_640_p2 = (tmp_12_fu_626_p3 | r_2_reg_1017);

assign r_V_2_fu_306_p1 = p_Val2_13_reg_879;

assign r_V_4_fu_828_p0 = reg_908;

assign r_V_4_fu_828_p1 = r_V_4_fu_828_p0;

assign r_V_6_fu_840_p1 = reg_982;

assign r_V_6_fu_840_p3 = {{r_V_6_fu_840_p1}, {30'd0}};

assign r_V_7_fu_315_p0 = reg_982;

assign r_V_7_fu_315_p1 = $signed(r_V_7_fu_315_p0);

assign r_V_fu_78_p1 = $signed(y_V);

assign r_fu_352_p2 = (tmp_3_fu_333_p3 | grp_fu_569_p2);

assign ret_V_5_fu_375_p2 = ($signed(37'd136365211648) + $signed(lhs_V_fu_88_p1));

assign ret_V_7_fu_174_p2 = ($signed(37'd4294967296) + $signed(lhs_V_fu_88_p1));

assign rhs_V_1_fu_819_p1 = p_Val2_13_reg_879;

assign rhs_V_fu_545_p1 = reg_982;

assign rhs_V_fu_545_p3 = {{rhs_V_fu_545_p1}, {32'd0}};

assign sext_ln1118_fu_831_p0 = reg_917;

assign sext_ln1118_fu_831_p1 = $signed(sext_ln1118_fu_831_p0);

assign sext_ln1497_fu_847_p1 = $signed(r_V_6_fu_840_p3);

assign sext_ln728_fu_552_p1 = $signed(rhs_V_fu_545_p3);

assign tmp_12_fu_626_p1 = reg_917;

assign tmp_12_fu_626_p3 = tmp_12_fu_626_p1[32'd32];

assign tmp_14_fu_645_p3 = reg_1113[32'd31];

assign tmp_17_fu_696_p1 = reg_917;

assign tmp_17_fu_696_p3 = tmp_17_fu_696_p1[32'd68];

assign tmp_1_fu_590_p4 = {{grp_fu_92_p2[71:68]}};

assign tmp_3_fu_333_p3 = reg_1113[32'd32];

assign tmp_5_fu_358_p3 = reg_1113[32'd31];

assign tmp_8_fu_429_p3 = reg_1113[32'd68];

assign tmp_fu_574_p4 = {{grp_fu_92_p2[71:69]}};

assign trunc_ln718_1_fu_541_p1 = grp_fu_82_p2[30:0];

assign trunc_ln718_fu_282_p1 = grp_fu_82_p2[30:0];

assign underflow_1_fu_126_p2 = (xor_ln786_1_fu_120_p2 & p_Result_4_fu_98_p3);

assign underflow_2_fu_749_p2 = (xor_ln786_2_fu_743_p2 & p_Result_6_reg_1023);

assign underflow_3_fu_235_p2 = (xor_ln786_3_fu_229_p2 & p_Result_9_reg_867);

assign underflow_fu_496_p2 = (xor_ln786_fu_490_p2 & p_Result_s_reg_923);

assign xor_ln1497_fu_856_p2 = (grp_fu_851_p2 ^ 1'd1);

assign xor_ln340_1_fu_138_p2 = (p_Result_4_fu_98_p3 ^ 1'd1);

assign xor_ln340_fu_132_p2 = (p_Result_5_fu_112_p3 ^ p_Result_4_fu_98_p3);

assign xor_ln779_1_fu_676_p2 = (tmp_17_fu_696_p3 ^ 1'd1);

assign xor_ln779_fu_436_p2 = (tmp_8_fu_429_p3 ^ 1'd1);

assign xor_ln785_1_fu_468_p2 = (p_Result_s_reg_923 ^ 1'd1);

assign xor_ln785_2_fu_764_p2 = (deleted_zeros_1_fu_759_p3 ^ 1'd1);

assign xor_ln785_3_fu_726_p2 = (p_Result_6_reg_1023 ^ 1'd1);

assign xor_ln785_4_fu_214_p2 = (p_Result_9_reg_867 ^ 1'd1);

assign xor_ln785_fu_457_p2 = (deleted_zeros_fu_424_p3 ^ 1'd1);

assign xor_ln786_1_fu_120_p2 = (p_Result_5_fu_112_p3 ^ 1'd1);

assign xor_ln786_2_fu_743_p2 = (or_ln786_1_fu_737_p2 ^ 1'd1);

assign xor_ln786_3_fu_229_p2 = (1'd1 ^ and_ln786_5_fu_225_p2);

assign xor_ln786_fu_490_p2 = (or_ln786_fu_484_p2 ^ 1'd1);

assign zext_ln415_1_fu_658_p1 = and_ln412_1_fu_652_p2;

assign zext_ln415_fu_371_p1 = and_ln412_fu_365_p2;

endmodule //pretest
