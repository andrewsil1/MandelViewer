-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.3
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity mandel_calc is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    x_in_V : IN STD_LOGIC_VECTOR (39 downto 0);
    y_in_V : IN STD_LOGIC_VECTOR (39 downto 0);
    maxIter : IN STD_LOGIC_VECTOR (15 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of mandel_calc is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (23 downto 0) := "000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (23 downto 0) := "000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (23 downto 0) := "000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (23 downto 0) := "000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (23 downto 0) := "000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (23 downto 0) := "000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (23 downto 0) := "000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (23 downto 0) := "000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (23 downto 0) := "000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (23 downto 0) := "001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (23 downto 0) := "010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (23 downto 0) := "100000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv40_0 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000000000000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv35_0 : STD_LOGIC_VECTOR (34 downto 0) := "00000000000000000000000000000000000";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_4C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001100";
    constant ap_const_lv32_4B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001011";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv34_0 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000000";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_4A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001010";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv40_8000000000 : STD_LOGIC_VECTOR (39 downto 0) := "1000000000000000000000000000000000000000";
    constant ap_const_lv41_2000000000 : STD_LOGIC_VECTOR (40 downto 0) := "00010000000000000000000000000000000000000";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv40_7FFFFFFFFF : STD_LOGIC_VECTOR (39 downto 0) := "0111111111111111111111111111111111111111";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv6_3F : STD_LOGIC_VECTOR (5 downto 0) := "111111";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal rhs_V_2_fu_195_p1 : STD_LOGIC_VECTOR (41 downto 0);
    signal rhs_V_2_reg_1174 : STD_LOGIC_VECTOR (41 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_reg_1180 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_pretest_fu_187_ap_return : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_pretest_fu_187_ap_ready : STD_LOGIC;
    signal grp_pretest_fu_187_ap_done : STD_LOGIC;
    signal rhs_V_5_cast_fu_205_p1 : STD_LOGIC_VECTOR (80 downto 0);
    signal rhs_V_5_cast_reg_1198 : STD_LOGIC_VECTOR (80 downto 0);
    signal iter_1_fu_389_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal iter_1_reg_1208 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal tmp_s_fu_209_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_reg_1212 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_11_fu_728_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal reg_1229 : STD_LOGIC_VECTOR (80 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal r_V_fu_220_p1 : STD_LOGIC_VECTOR (79 downto 0);
    signal rhs_V_fu_739_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal r_V_17_cast_fu_769_p1 : STD_LOGIC_VECTOR (80 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal tmp_22_fu_748_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_224_p2 : STD_LOGIC_VECTOR (80 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal grp_fu_1156_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal reg_1238 : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_fu_742_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal ret_V_11_fu_753_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal tmp_38_fu_248_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp_57_fu_910_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal p_Result_s_reg_1244 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_46_fu_280_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal tmp_46_reg_1269 : STD_LOGIC_VECTOR (33 downto 0);
    signal p_Result_13_reg_1275 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_2_reg_1280 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_Result_3_reg_1285 : STD_LOGIC_VECTOR (4 downto 0);
    signal Range2_all_ones_fu_309_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range2_all_ones_reg_1291 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal grp_fu_926_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_4_reg_1296 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_fu_319_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_reg_1301 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_fu_314_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_reg_1308 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range2_all_ones_2_fu_329_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range2_all_ones_2_reg_1313 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_5_fu_324_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_5_reg_1318 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_2_fu_339_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_2_reg_1323 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_3_fu_334_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_3_reg_1330 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_415_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_12_reg_1341 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_4_fu_409_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_4_reg_1347 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_1_reg_1352 : STD_LOGIC_VECTOR (4 downto 0);
    signal brmerge1001_demorgan_fu_519_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge1001_demorgan_reg_1358 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_15_fu_525_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_15_reg_1364 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_6_fu_448_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_6_reg_1370 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge1008_demorgan_fu_558_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge1008_demorgan_reg_1375 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_16_reg_1396 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_22_reg_1406 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_V_reg_1410 : STD_LOGIC_VECTOR (39 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal or_cond_fu_1169_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_reg_1420 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal underflow_5_fu_863_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_5_reg_1436 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_4_fu_839_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_4_reg_1442 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_28_fu_904_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_28_reg_1454 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal r_V_13_fu_230_p1 : STD_LOGIC_VECTOR (79 downto 0);
    signal reg_1459 : STD_LOGIC_VECTOR (80 downto 0);
    signal lhs_V_fu_736_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_fu_914_p2 : STD_LOGIC_VECTOR (80 downto 0);
    signal tmp_53_cast_fu_773_p1 : STD_LOGIC_VECTOR (80 downto 0);
    signal grp_fu_777_p2 : STD_LOGIC_VECTOR (79 downto 0);
    signal r_6_reg_1478 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_18_reg_1484 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_20_reg_1506 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_8_fu_1016_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal carry_8_reg_1512 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_3_fu_1040_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_zeros_3_reg_1517 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_4_fu_1035_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range1_all_ones_4_reg_1523 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_52_fu_757_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal reg_1528 : STD_LOGIC_VECTOR (39 downto 0);
    signal x_V_fu_890_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal brmerge1021_demorgan_fu_1072_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge1021_demorgan_reg_1534 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_pretest_fu_187_ap_start : STD_LOGIC;
    signal grp_pretest_fu_187_ap_idle : STD_LOGIC;
    signal grp_pretest_fu_187_y_V : STD_LOGIC_VECTOR (39 downto 0);
    signal y_reg_128 : STD_LOGIC_VECTOR (39 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal x_reg_140 : STD_LOGIC_VECTOR (39 downto 0);
    signal ap_phi_mux_iter_phi_fu_156_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal iter_reg_152 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_iter_2_ph_phi_fu_167_p6 : STD_LOGIC_VECTOR (15 downto 0);
    signal iter_2_ph_reg_164 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_iter_2_phi_fu_180_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal iter_2_reg_177 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_pretest_fu_187_ap_start_reg : STD_LOGIC := '0';
    signal rhs_V_2_fu_195_p0 : STD_LOGIC_VECTOR (39 downto 0);
    signal rhs_V_3_fu_198_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal rhs_V_3_fu_198_p3 : STD_LOGIC_VECTOR (74 downto 0);
    signal grp_fu_224_p0 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_fu_224_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal p_Result_s_fu_240_p1 : STD_LOGIC_VECTOR (79 downto 0);
    signal tmp_38_fu_248_p0 : STD_LOGIC_VECTOR (79 downto 0);
    signal p_Result_s_16_fu_252_p1 : STD_LOGIC_VECTOR (79 downto 0);
    signal p_Result_1_fu_262_p1 : STD_LOGIC_VECTOR (79 downto 0);
    signal x2_V_fu_344_p1 : STD_LOGIC_VECTOR (79 downto 0);
    signal tmp_34_fu_353_p1 : STD_LOGIC_VECTOR (79 downto 0);
    signal p_Result_11_fu_360_p1 : STD_LOGIC_VECTOR (79 downto 0);
    signal tmp_34_fu_353_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_40_fu_372_p1 : STD_LOGIC_VECTOR (79 downto 0);
    signal tmp_40_fu_372_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_fu_367_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_fu_379_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_16_fu_803_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_11_fu_360_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1052_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_415_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_43_fu_423_p1 : STD_LOGIC_VECTOR (79 downto 0);
    signal tmp_49_fu_505_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev5_fu_513_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_s_fu_436_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_14_fu_470_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev6_fu_430_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal y2_V_fu_454_p1 : STD_LOGIC_VECTOR (79 downto 0);
    signal tmp_45_fu_463_p1 : STD_LOGIC_VECTOR (79 downto 0);
    signal p_Result_14_fu_470_p1 : STD_LOGIC_VECTOR (79 downto 0);
    signal tmp_45_fu_463_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_fu_482_p1 : STD_LOGIC_VECTOR (79 downto 0);
    signal tmp_48_fu_482_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_assign_3_fu_477_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_fu_489_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_49_fu_505_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_43_fu_423_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_fu_441_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_15_fu_525_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_51_fu_533_p1 : STD_LOGIC_VECTOR (79 downto 0);
    signal tmp_51_fu_533_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev7_fu_540_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_6_fu_546_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_3_fu_551_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_fu_564_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not_fu_573_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_fu_579_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_fu_584_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal phitmp997_demorgan_fu_569_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp1_demorgan_fu_595_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp1_fu_600_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_fu_606_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_fu_589_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp2_fu_617_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_zeros_2_fu_650_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not7_fu_659_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge1_fu_665_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_fu_670_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal phitmp996_demorgan_fu_655_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp3_demorgan_fu_681_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp3_fu_686_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_4_fu_692_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_3_fu_675_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp4_fu_703_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_7_fu_721_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal p_1036_not_fu_708_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_mux4_fu_1142_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal p_7_fu_721_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal lhs_V_fu_736_p0 : STD_LOGIC_VECTOR (39 downto 0);
    signal rhs_V_fu_739_p0 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_fu_742_p0 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_25_fu_992_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal tmp_16_fu_385_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_fu_742_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal ret_V_11_fu_753_p0 : STD_LOGIC_VECTOR (40 downto 0);
    signal ret_V_11_fu_753_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal r_V_15_fu_761_p3 : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_fu_777_p0 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_fu_777_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal lhs_V_2_fu_783_p0 : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_fu_791_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal p_Result_16_fu_803_p1 : STD_LOGIC_VECTOR (41 downto 0);
    signal p_Result_4_fu_811_p1 : STD_LOGIC_VECTOR (41 downto 0);
    signal p_Result_4_fu_811_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_791_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not9_fu_821_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge3_fu_827_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_fu_403_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not1_fu_851_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge4_fu_857_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_1029_not_fu_873_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_883_p0 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge9_fu_611_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge5_fu_869_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge8_fu_1125_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_883_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal brmerge6_fu_878_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_883_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_fu_1078_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_fu_914_p0 : STD_LOGIC_VECTOR (80 downto 0);
    signal tmp_20_fu_495_p1 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_fu_914_p1 : STD_LOGIC_VECTOR (80 downto 0);
    signal lhs_V_2_fu_783_p1 : STD_LOGIC_VECTOR (41 downto 0);
    signal grp_fu_926_p0 : STD_LOGIC_VECTOR (33 downto 0);
    signal ytemp_V_fu_951_p1 : STD_LOGIC_VECTOR (80 downto 0);
    signal tmp_56_fu_960_p1 : STD_LOGIC_VECTOR (80 downto 0);
    signal p_Result_19_fu_967_p1 : STD_LOGIC_VECTOR (80 downto 0);
    signal tmp_56_fu_960_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_59_fu_979_p1 : STD_LOGIC_VECTOR (80 downto 0);
    signal tmp_59_fu_979_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_assign_5_fu_974_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_fu_986_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_62_fu_1045_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_19_fu_967_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal Range2_all_ones_3_fu_1030_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal Range1_all_ones_4_fu_1035_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal Range1_all_zeros_3_fu_1040_p0 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_62_fu_1045_p1 : STD_LOGIC_VECTOR (80 downto 0);
    signal Range2_all_ones_3_fu_1030_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rev9_fu_1010_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_9_fu_1058_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal deleted_ones_4_fu_1064_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1078_p0 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_6_fu_1120_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1078_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal deleted_zeros_3_fu_1149_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_not2_fu_1087_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge7_fu_1093_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_27_fu_1098_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal phitmp_demorgan_fu_1083_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp5_demorgan_fu_1109_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp5_fu_1114_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_5_fu_1103_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp6_fu_1131_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge2_fu_697_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_mux4_fu_1142_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_fu_1156_p0 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_1035_not_fu_622_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_1037_not_fu_1136_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_29_fu_1164_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_return_preg : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_742_p10 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_fu_742_p13 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_fu_914_p10 : STD_LOGIC_VECTOR (39 downto 0);
    signal reg_12291 : STD_LOGIC_VECTOR (5 downto 0);
    signal reg_12381 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_condition_944 : BOOLEAN;

    component pretest IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        x_V : IN STD_LOGIC_VECTOR (39 downto 0);
        y_V : IN STD_LOGIC_VECTOR (39 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component calc_mul_40s_41s_dEe IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (39 downto 0);
        din1 : IN STD_LOGIC_VECTOR (40 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (80 downto 0) );
    end component;


    component calc_mul_40s_40s_cud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (39 downto 0);
        din1 : IN STD_LOGIC_VECTOR (39 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (79 downto 0) );
    end component;



begin
    grp_pretest_fu_187 : component pretest
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_pretest_fu_187_ap_start,
        ap_done => grp_pretest_fu_187_ap_done,
        ap_idle => grp_pretest_fu_187_ap_idle,
        ap_ready => grp_pretest_fu_187_ap_ready,
        x_V => x_in_V,
        y_V => grp_pretest_fu_187_y_V,
        ap_return => grp_pretest_fu_187_ap_return);

    calc_mul_40s_41s_dEe_U7 : component calc_mul_40s_41s_dEe
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 40,
        din1_WIDTH => 41,
        dout_WIDTH => 81)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_224_p0,
        din1 => grp_fu_224_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_224_p2);

    calc_mul_40s_40s_cud_U8 : component calc_mul_40s_40s_cud
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 40,
        din1_WIDTH => 40,
        dout_WIDTH => 80)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_777_p0,
        din1 => grp_fu_777_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_777_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_return_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_preg <= ap_const_lv16_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state24) and ((tmp_reg_1180 = ap_const_lv1_1) or ((tmp_s_reg_1212 = ap_const_lv1_0) or ((or_cond_reg_1420 = ap_const_lv1_1) or (tmp_22_reg_1406 = ap_const_lv1_1)))))) then 
                    ap_return_preg <= ap_phi_mux_iter_2_phi_fu_180_p4;
                end if; 
            end if;
        end if;
    end process;


    grp_pretest_fu_187_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_pretest_fu_187_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_pretest_fu_187_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_pretest_fu_187_ap_ready = ap_const_logic_1)) then 
                    grp_pretest_fu_187_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    iter_2_ph_reg_164_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_s_reg_1212 = ap_const_lv1_1) and (tmp_22_reg_1406 = ap_const_lv1_0) and (tmp_reg_1180 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state24) and (or_cond_reg_1420 = ap_const_lv1_1))) then 
                iter_2_ph_reg_164 <= maxIter;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state14) and (tmp_22_fu_748_p2 = ap_const_lv1_1))) then 
                iter_2_ph_reg_164 <= iter_reg_152;
            elsif (((tmp_s_fu_209_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                iter_2_ph_reg_164 <= ap_phi_mux_iter_phi_fu_156_p4;
            end if; 
        end if;
    end process;

    iter_2_reg_177_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state24) and ((((tmp_reg_1180 = ap_const_lv1_0) and (tmp_22_reg_1406 = ap_const_lv1_1)) or ((tmp_reg_1180 = ap_const_lv1_0) and (or_cond_reg_1420 = ap_const_lv1_1))) or ((tmp_s_reg_1212 = ap_const_lv1_0) and (tmp_reg_1180 = ap_const_lv1_0))))) then 
                iter_2_reg_177 <= ap_phi_mux_iter_2_ph_phi_fu_167_p6;
            elsif (((tmp_reg_1180 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                iter_2_reg_177 <= maxIter;
            end if; 
        end if;
    end process;

    iter_reg_152_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((tmp_reg_1180 = ap_const_lv1_0)) then
                if ((ap_const_boolean_1 = ap_condition_944)) then 
                    iter_reg_152 <= iter_1_reg_1208;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    iter_reg_152 <= ap_const_lv16_0;
                end if;
            end if; 
        end if;
    end process;

    reg_1229_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                reg_1229 <= grp_fu_224_p2;
            elsif (((tmp_22_fu_748_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
                reg_1229 <= r_V_17_cast_fu_769_p1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                reg_1229 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rhs_V_fu_739_p1),81));
            elsif (((tmp_s_fu_209_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                reg_1229 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_fu_220_p1),81));
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                reg_1229 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_in_V),81));
            elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
                reg_1229 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_12291),81));
            elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                reg_1229 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Val2_11_fu_728_p3),81));
            end if; 
        end if;
    end process;

    reg_1238_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
                reg_1238 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_57_fu_910_p1),41));
            elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                reg_1238 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_38_fu_248_p1),41));
            elsif (((tmp_22_fu_748_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
                reg_1238 <= ret_V_11_fu_753_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
                reg_1238 <= grp_fu_742_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
                reg_1238 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_12381),41));
            elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                reg_1238 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1156_p3),41));
            end if; 
        end if;
    end process;

    reg_1459_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                reg_1459 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_777_p2),81));
            elsif (((tmp_22_fu_748_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
                reg_1459 <= tmp_53_cast_fu_773_p1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                reg_1459 <= grp_fu_914_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                reg_1459 <= std_logic_vector(IEEE.numeric_std.resize(signed(lhs_V_fu_736_p1),81));
            elsif (((tmp_s_fu_209_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                reg_1459 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_13_fu_230_p1),81));
            end if; 
        end if;
    end process;

    reg_1528_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                reg_1528 <= x_V_fu_890_p3;
            elsif (((tmp_22_fu_748_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
                reg_1528 <= tmp_52_fu_757_p1;
            end if; 
        end if;
    end process;

    x_reg_140_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((tmp_reg_1180 = ap_const_lv1_0)) then
                if ((ap_const_boolean_1 = ap_condition_944)) then 
                    x_reg_140 <= reg_1528;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    x_reg_140 <= ap_const_lv40_0;
                end if;
            end if; 
        end if;
    end process;

    y_reg_128_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((tmp_reg_1180 = ap_const_lv1_0)) then
                if ((ap_const_boolean_1 = ap_condition_944)) then 
                    y_reg_128 <= y_V_reg_1410;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    y_reg_128 <= ap_const_lv40_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                Range1_all_ones_3_reg_1330 <= Range1_all_ones_3_fu_334_p2;
                Range1_all_ones_reg_1308 <= Range1_all_ones_fu_314_p2;
                Range1_all_zeros_2_reg_1323 <= Range1_all_zeros_2_fu_339_p2;
                Range1_all_zeros_reg_1301 <= Range1_all_zeros_fu_319_p2;
                Range2_all_ones_2_reg_1313 <= Range2_all_ones_2_fu_329_p2;
                Range2_all_ones_reg_1291 <= Range2_all_ones_fu_309_p2;
                r_4_reg_1296 <= grp_fu_926_p2;
                r_5_reg_1318 <= r_5_fu_324_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state21)) then
                Range1_all_ones_4_reg_1523 <= Range1_all_ones_4_fu_1035_p2;
                Range1_all_zeros_3_reg_1517 <= Range1_all_zeros_3_fu_1040_p2;
                brmerge1021_demorgan_reg_1534 <= brmerge1021_demorgan_fu_1072_p2;
                carry_8_reg_1512 <= carry_8_fu_1016_p2;
                p_Result_20_reg_1506 <= grp_fu_415_p1(39 downto 39);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                brmerge1001_demorgan_reg_1358 <= brmerge1001_demorgan_fu_519_p2;
                brmerge1008_demorgan_reg_1375 <= brmerge1008_demorgan_fu_558_p2;
                carry_4_reg_1347 <= carry_4_fu_409_p2;
                carry_6_reg_1370 <= carry_6_fu_448_p2;
                p_Result_12_reg_1341 <= grp_fu_415_p1(39 downto 39);
                p_Result_15_reg_1364 <= p_Result_15_fu_525_p1(39 downto 39);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                iter_1_reg_1208 <= iter_1_fu_389_p2;
                tmp_s_reg_1212 <= tmp_s_fu_209_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state23)) then
                or_cond_reg_1420 <= or_cond_fu_1169_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                overflow_4_reg_1442 <= overflow_4_fu_839_p2;
                underflow_5_reg_1436 <= underflow_5_fu_863_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                p_Result_13_reg_1275 <= grp_fu_777_p2(79 downto 79);
                p_Result_1_reg_1352 <= p_Result_1_fu_262_p1(79 downto 75);
                p_Result_2_reg_1280 <= grp_fu_777_p2(79 downto 76);
                p_Result_3_reg_1285 <= grp_fu_777_p2(79 downto 75);
                p_Result_s_16_reg_1396 <= p_Result_s_16_fu_252_p1(79 downto 76);
                p_Result_s_reg_1244 <= p_Result_s_fu_240_p1(79 downto 79);
                tmp_46_reg_1269 <= tmp_46_fu_280_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then
                p_Result_18_reg_1484 <= grp_fu_914_p2(80 downto 80);
                r_6_reg_1478 <= grp_fu_926_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_1180 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                rhs_V_2_reg_1174 <= rhs_V_2_fu_195_p1;
                    rhs_V_5_cast_reg_1198(80 downto 35) <= rhs_V_5_cast_fu_205_p1(80 downto 35);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                tmp_22_reg_1406 <= tmp_22_fu_748_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                tmp_28_reg_1454 <= tmp_28_fu_904_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_pretest_fu_187_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                tmp_reg_1180 <= grp_pretest_fu_187_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state22)) then
                y_V_reg_1410 <= grp_fu_1156_p3;
            end if;
        end if;
    end process;
    rhs_V_5_cast_reg_1198(34 downto 0) <= "00000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state3, tmp_reg_1180, ap_CS_fsm_state2, grp_pretest_fu_187_ap_done, ap_CS_fsm_state4, tmp_s_fu_209_p2, tmp_s_reg_1212, ap_CS_fsm_state14, tmp_22_fu_748_p2, tmp_22_reg_1406, or_cond_reg_1420, ap_CS_fsm_state24)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_pretest_fu_187_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((tmp_reg_1180 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state24;
                end if;
            when ap_ST_fsm_state4 => 
                if (((tmp_s_fu_209_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state24;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state14) and (tmp_22_fu_748_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state24;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state24) and ((tmp_reg_1180 = ap_const_lv1_1) or ((tmp_s_reg_1212 = ap_const_lv1_0) or ((or_cond_reg_1420 = ap_const_lv1_1) or (tmp_22_reg_1406 = ap_const_lv1_1)))))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    Range1_all_ones_3_fu_334_p2 <= "1" when (p_Result_3_reg_1285 = ap_const_lv5_1F) else "0";
    Range1_all_ones_4_fu_1035_p0 <= reg_1229(6 - 1 downto 0);
    Range1_all_ones_4_fu_1035_p2 <= "1" when (Range1_all_ones_4_fu_1035_p0 = ap_const_lv6_3F) else "0";
    Range1_all_ones_fu_314_p2 <= "1" when (p_Result_1_reg_1352 = ap_const_lv5_1F) else "0";
    Range1_all_zeros_2_fu_339_p2 <= "1" when (p_Result_3_reg_1285 = ap_const_lv5_0) else "0";
    Range1_all_zeros_3_fu_1040_p0 <= reg_1229(6 - 1 downto 0);
    Range1_all_zeros_3_fu_1040_p2 <= "1" when (Range1_all_zeros_3_fu_1040_p0 = ap_const_lv6_0) else "0";
    Range1_all_zeros_fu_319_p2 <= "1" when (p_Result_1_reg_1352 = ap_const_lv5_0) else "0";
    Range2_all_ones_2_fu_329_p2 <= "1" when (p_Result_2_reg_1280 = ap_const_lv4_F) else "0";
    Range2_all_ones_3_fu_1030_p0 <= reg_1238(5 - 1 downto 0);
    Range2_all_ones_3_fu_1030_p2 <= "1" when (Range2_all_ones_3_fu_1030_p0 = ap_const_lv5_1F) else "0";
    Range2_all_ones_fu_309_p2 <= "1" when (p_Result_s_16_reg_1396 = ap_const_lv4_F) else "0";
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_condition_944_assign_proc : process(tmp_s_reg_1212, tmp_22_reg_1406, or_cond_reg_1420, ap_CS_fsm_state24)
    begin
                ap_condition_944 <= ((tmp_s_reg_1212 = ap_const_lv1_1) and (or_cond_reg_1420 = ap_const_lv1_0) and (tmp_22_reg_1406 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state24));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, tmp_reg_1180, tmp_s_reg_1212, tmp_22_reg_1406, or_cond_reg_1420, ap_CS_fsm_state24)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_logic_1 = ap_CS_fsm_state24) and ((tmp_reg_1180 = ap_const_lv1_1) or ((tmp_s_reg_1212 = ap_const_lv1_0) or ((or_cond_reg_1420 = ap_const_lv1_1) or (tmp_22_reg_1406 = ap_const_lv1_1))))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_iter_2_ph_phi_fu_167_p6_assign_proc : process(maxIter, tmp_reg_1180, tmp_s_reg_1212, tmp_22_reg_1406, or_cond_reg_1420, ap_CS_fsm_state24, iter_2_ph_reg_164)
    begin
        if (((tmp_s_reg_1212 = ap_const_lv1_1) and (tmp_22_reg_1406 = ap_const_lv1_0) and (tmp_reg_1180 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state24) and (or_cond_reg_1420 = ap_const_lv1_1))) then 
            ap_phi_mux_iter_2_ph_phi_fu_167_p6 <= maxIter;
        else 
            ap_phi_mux_iter_2_ph_phi_fu_167_p6 <= iter_2_ph_reg_164;
        end if; 
    end process;


    ap_phi_mux_iter_2_phi_fu_180_p4_assign_proc : process(tmp_reg_1180, tmp_s_reg_1212, tmp_22_reg_1406, or_cond_reg_1420, ap_CS_fsm_state24, ap_phi_mux_iter_2_ph_phi_fu_167_p6, iter_2_reg_177)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state24) and ((((tmp_reg_1180 = ap_const_lv1_0) and (tmp_22_reg_1406 = ap_const_lv1_1)) or ((tmp_reg_1180 = ap_const_lv1_0) and (or_cond_reg_1420 = ap_const_lv1_1))) or ((tmp_s_reg_1212 = ap_const_lv1_0) and (tmp_reg_1180 = ap_const_lv1_0))))) then 
            ap_phi_mux_iter_2_phi_fu_180_p4 <= ap_phi_mux_iter_2_ph_phi_fu_167_p6;
        else 
            ap_phi_mux_iter_2_phi_fu_180_p4 <= iter_2_reg_177;
        end if; 
    end process;

    ap_phi_mux_iter_phi_fu_156_p4 <= iter_reg_152;

    ap_ready_assign_proc : process(tmp_reg_1180, tmp_s_reg_1212, tmp_22_reg_1406, or_cond_reg_1420, ap_CS_fsm_state24)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state24) and ((tmp_reg_1180 = ap_const_lv1_1) or ((tmp_s_reg_1212 = ap_const_lv1_0) or ((or_cond_reg_1420 = ap_const_lv1_1) or (tmp_22_reg_1406 = ap_const_lv1_1)))))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_assign_proc : process(tmp_reg_1180, tmp_s_reg_1212, tmp_22_reg_1406, or_cond_reg_1420, ap_CS_fsm_state24, ap_phi_mux_iter_2_phi_fu_180_p4, ap_return_preg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state24) and ((tmp_reg_1180 = ap_const_lv1_1) or ((tmp_s_reg_1212 = ap_const_lv1_0) or ((or_cond_reg_1420 = ap_const_lv1_1) or (tmp_22_reg_1406 = ap_const_lv1_1)))))) then 
            ap_return <= ap_phi_mux_iter_2_phi_fu_180_p4;
        else 
            ap_return <= ap_return_preg;
        end if; 
    end process;

    brmerge1001_demorgan_fu_519_p2 <= (grp_fu_415_p3 and deleted_ones_fu_441_p3);
    brmerge1008_demorgan_fu_558_p2 <= (p_Result_15_fu_525_p3 and deleted_ones_3_fu_551_p3);
    brmerge1021_demorgan_fu_1072_p2 <= (grp_fu_415_p3 and deleted_ones_4_fu_1064_p3);
    brmerge1_fu_665_p2 <= (p_not7_fu_659_p2 or p_Result_15_reg_1364);
    brmerge2_fu_697_p2 <= (underflow_4_fu_692_p2 or overflow_3_fu_675_p2);
    brmerge3_fu_827_p2 <= (p_not9_fu_821_p2 or grp_fu_791_p3);
    brmerge4_fu_857_p2 <= (p_not1_fu_851_p2 or grp_fu_1052_p2);
    brmerge5_fu_869_p2 <= (underflow_5_reg_1436 or overflow_4_reg_1442);
    brmerge6_fu_878_p2 <= (p_1029_not_fu_873_p2 or overflow_4_reg_1442);
    brmerge7_fu_1093_p2 <= (p_not2_fu_1087_p2 or p_Result_20_reg_1506);
    brmerge8_fu_1125_p2 <= (underflow_6_fu_1120_p2 or overflow_5_fu_1103_p2);
    brmerge9_fu_611_p2 <= (underflow_fu_606_p2 or overflow_fu_589_p2);
    brmerge_fu_579_p2 <= (p_not_fu_573_p2 or p_Result_12_reg_1341);
    carry_4_fu_409_p2 <= (p_Result_11_fu_360_p3 and grp_fu_1052_p2);
    carry_6_fu_448_p2 <= (rev6_fu_430_p2 and p_Result_14_fu_470_p3);
    carry_8_fu_1016_p2 <= (p_Result_19_fu_967_p3 and grp_fu_1052_p2);
    deleted_ones_3_fu_551_p3 <= 
        p_6_fu_546_p2 when (carry_6_fu_448_p2(0) = '1') else 
        Range1_all_ones_3_reg_1330;
    deleted_ones_4_fu_1064_p3 <= 
        p_9_fu_1058_p2 when (carry_8_fu_1016_p2(0) = '1') else 
        Range1_all_ones_4_fu_1035_p2;
    deleted_ones_fu_441_p3 <= 
        p_s_fu_436_p2 when (carry_4_fu_409_p2(0) = '1') else 
        Range1_all_ones_reg_1308;
    deleted_zeros_2_fu_650_p3 <= 
        Range1_all_ones_3_reg_1330 when (carry_6_reg_1370(0) = '1') else 
        Range1_all_zeros_2_reg_1323;
    deleted_zeros_3_fu_1149_p3 <= 
        Range1_all_ones_4_reg_1523 when (carry_8_reg_1512(0) = '1') else 
        Range1_all_zeros_3_reg_1517;
    deleted_zeros_fu_564_p3 <= 
        Range1_all_ones_reg_1308 when (carry_4_reg_1347(0) = '1') else 
        Range1_all_zeros_reg_1301;
    grp_fu_1052_p2 <= (grp_fu_791_p3 xor ap_const_lv1_1);

    grp_fu_1078_p0_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state22, underflow_5_reg_1436, ap_CS_fsm_state16, underflow_fu_606_p2, underflow_6_fu_1120_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            grp_fu_1078_p0 <= underflow_6_fu_1120_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_fu_1078_p0 <= underflow_5_reg_1436;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_fu_1078_p0 <= underflow_fu_606_p2;
        else 
            grp_fu_1078_p0 <= "X";
        end if; 
    end process;

    grp_fu_1078_p2 <= reg_1238(40 - 1 downto 0);
    grp_fu_1078_p3 <= 
        ap_const_lv40_8000000000 when (grp_fu_1078_p0(0) = '1') else 
        grp_fu_1078_p2;

    grp_fu_1156_p0_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state22, p_1035_not_fu_622_p2, p_1037_not_fu_1136_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            grp_fu_1156_p0 <= p_1037_not_fu_1136_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_fu_1156_p0 <= p_1035_not_fu_622_p2;
        else 
            grp_fu_1156_p0 <= "X";
        end if; 
    end process;

    grp_fu_1156_p3 <= 
        grp_fu_883_p3 when (grp_fu_1156_p0(0) = '1') else 
        grp_fu_1078_p3;

    grp_fu_224_p0_assign_proc : process(ap_CS_fsm_state4, r_V_fu_220_p1, ap_CS_fsm_state14, tmp_53_cast_fu_773_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_fu_224_p0 <= tmp_53_cast_fu_773_p1(40 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_224_p0 <= r_V_fu_220_p1(40 - 1 downto 0);
        else 
            grp_fu_224_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_224_p1_assign_proc : process(ap_CS_fsm_state4, r_V_fu_220_p1, r_V_17_cast_fu_769_p1, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_fu_224_p1 <= r_V_17_cast_fu_769_p1(41 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_224_p1 <= r_V_fu_220_p1(41 - 1 downto 0);
        else 
            grp_fu_224_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_415_p1 <= grp_fu_742_p2(40 - 1 downto 0);
    grp_fu_415_p3 <= grp_fu_415_p1(39 downto 39);

    grp_fu_742_p0_assign_proc : process(x_in_V, ap_CS_fsm_state13, ap_CS_fsm_state11, ap_CS_fsm_state15, ap_CS_fsm_state21, lhs_V_fu_736_p1, tmp_25_fu_992_p1, tmp_16_fu_385_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            grp_fu_742_p0 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_25_fu_992_p1),41));
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_fu_742_p0 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(x_in_V),41));
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_742_p0 <= lhs_V_fu_736_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_742_p0 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_16_fu_385_p1),41));
        else 
            grp_fu_742_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_742_p1_assign_proc : process(rhs_V_fu_739_p1, ap_CS_fsm_state13, ap_CS_fsm_state11, ap_CS_fsm_state15, ap_CS_fsm_state21, reg_1528, grp_fu_742_p10, grp_fu_742_p13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            grp_fu_742_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_742_p13),41));
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_fu_742_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_1528),41));
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_742_p1 <= rhs_V_fu_739_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_742_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_742_p10),41));
        else 
            grp_fu_742_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_742_p10 <= x2_V_fu_344_p1(74 downto 35);
    grp_fu_742_p13 <= ytemp_V_fu_951_p1(74 downto 35);
    grp_fu_742_p2 <= std_logic_vector(unsigned(grp_fu_742_p0) + unsigned(grp_fu_742_p1));
    grp_fu_777_p0 <= r_V_13_fu_230_p1(40 - 1 downto 0);
    grp_fu_777_p1 <= r_V_13_fu_230_p1(40 - 1 downto 0);
    grp_fu_791_p1 <= grp_fu_742_p2(40 - 1 downto 0);
    grp_fu_791_p3 <= grp_fu_791_p1(39 downto 39);

    grp_fu_883_p0_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state22, ap_CS_fsm_state16, brmerge9_fu_611_p2, brmerge5_fu_869_p2, brmerge8_fu_1125_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            grp_fu_883_p0 <= brmerge8_fu_1125_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_fu_883_p0 <= brmerge5_fu_869_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_fu_883_p0 <= brmerge9_fu_611_p2;
        else 
            grp_fu_883_p0 <= "X";
        end if; 
    end process;

    grp_fu_883_p2 <= reg_1238(40 - 1 downto 0);
    grp_fu_883_p3 <= 
        ap_const_lv40_7FFFFFFFFF when (grp_fu_883_p0(0) = '1') else 
        grp_fu_883_p2;

    grp_fu_914_p0_assign_proc : process(rhs_V_2_reg_1174, reg_1229, ap_CS_fsm_state20, ap_CS_fsm_state11, ap_CS_fsm_state15, tmp_20_fu_495_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            grp_fu_914_p0 <= reg_1229;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_fu_914_p0 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rhs_V_2_reg_1174),81));
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_914_p0 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_20_fu_495_p1),81));
        else 
            grp_fu_914_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_914_p1_assign_proc : process(rhs_V_5_cast_reg_1198, ap_CS_fsm_state20, ap_CS_fsm_state11, ap_CS_fsm_state15, lhs_V_2_fu_783_p1, grp_fu_914_p10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            grp_fu_914_p1 <= rhs_V_5_cast_reg_1198;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_fu_914_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lhs_V_2_fu_783_p1),81));
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fu_914_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_914_p10),81));
        else 
            grp_fu_914_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_914_p10 <= y2_V_fu_454_p1(74 downto 35);
    grp_fu_914_p2 <= std_logic_vector(unsigned(grp_fu_914_p0) + unsigned(grp_fu_914_p1));
    grp_fu_926_p0 <= reg_1238(34 - 1 downto 0);
    grp_fu_926_p2 <= "0" when (grp_fu_926_p0 = ap_const_lv34_0) else "1";
    grp_pretest_fu_187_ap_start <= grp_pretest_fu_187_ap_start_reg;
    grp_pretest_fu_187_y_V <= reg_1229(40 - 1 downto 0);
    iter_1_fu_389_p2 <= std_logic_vector(unsigned(iter_reg_152) + unsigned(ap_const_lv16_1));
    lhs_V_2_fu_783_p0 <= reg_1238;
        lhs_V_2_fu_783_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(lhs_V_2_fu_783_p0),42));

    lhs_V_fu_736_p0 <= reg_1238(40 - 1 downto 0);
        lhs_V_fu_736_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(lhs_V_fu_736_p0),41));

    or_cond_fu_1169_p2 <= (tmp_29_fu_1164_p2 and tmp_28_reg_1454);
    overflow_3_fu_675_p2 <= (tmp_21_fu_670_p2 and brmerge1_fu_665_p2);
    overflow_4_fu_839_p2 <= (tmp_23_fu_403_p2 and brmerge3_fu_827_p2);
    overflow_5_fu_1103_p2 <= (tmp_27_fu_1098_p2 and brmerge7_fu_1093_p2);
    overflow_fu_589_p2 <= (tmp_17_fu_584_p2 and brmerge_fu_579_p2);
    p_1029_not_fu_873_p2 <= (underflow_5_reg_1436 xor ap_const_lv1_1);
    p_1035_not_fu_622_p2 <= (tmp2_fu_617_p2 or phitmp997_demorgan_fu_569_p2);
    p_1036_not_fu_708_p2 <= (tmp4_fu_703_p2 or phitmp996_demorgan_fu_655_p2);
    p_1037_not_fu_1136_p2 <= (tmp6_fu_1131_p2 or phitmp_demorgan_fu_1083_p2);
    p_6_fu_546_p2 <= (rev7_fu_540_p2 and Range2_all_ones_2_reg_1313);
    p_7_fu_721_p2 <= reg_1459(40 - 1 downto 0);
    p_7_fu_721_p3 <= 
        ap_const_lv40_8000000000 when (underflow_4_fu_692_p2(0) = '1') else 
        p_7_fu_721_p2;
    p_9_fu_1058_p2 <= (rev9_fu_1010_p2 and Range2_all_ones_3_fu_1030_p2);
    p_Result_11_fu_360_p1 <= reg_1229(80 - 1 downto 0);
    p_Result_11_fu_360_p3 <= p_Result_11_fu_360_p1(74 downto 74);
    p_Result_14_fu_470_p1 <= reg_1459(80 - 1 downto 0);
    p_Result_14_fu_470_p3 <= p_Result_14_fu_470_p1(74 downto 74);
    p_Result_15_fu_525_p1 <= grp_fu_914_p2(40 - 1 downto 0);
    p_Result_15_fu_525_p3 <= p_Result_15_fu_525_p1(39 downto 39);
    p_Result_16_fu_803_p1 <= grp_fu_914_p2(42 - 1 downto 0);
    p_Result_16_fu_803_p3 <= p_Result_16_fu_803_p1(41 downto 41);
    p_Result_19_fu_967_p1 <= reg_1459;
    p_Result_19_fu_967_p3 <= p_Result_19_fu_967_p1(74 downto 74);
    p_Result_1_fu_262_p1 <= grp_fu_224_p2(80 - 1 downto 0);
    p_Result_4_fu_811_p1 <= grp_fu_914_p2(42 - 1 downto 0);
    p_Result_4_fu_811_p4 <= p_Result_4_fu_811_p1(41 downto 40);
    p_Result_s_16_fu_252_p1 <= grp_fu_224_p2(80 - 1 downto 0);
    p_Result_s_fu_240_p1 <= grp_fu_224_p2(80 - 1 downto 0);
    p_Val2_11_fu_728_p3 <= 
        p_mux4_fu_1142_p3 when (p_1036_not_fu_708_p2(0) = '1') else 
        p_7_fu_721_p3;
    p_mux4_fu_1142_p2 <= reg_1459(40 - 1 downto 0);
    p_mux4_fu_1142_p3 <= 
        ap_const_lv40_7FFFFFFFFF when (brmerge2_fu_697_p2(0) = '1') else 
        p_mux4_fu_1142_p2;
    p_not1_fu_851_p2 <= "0" when (p_Result_4_fu_811_p4 = ap_const_lv2_3) else "1";
    p_not2_fu_1087_p2 <= (deleted_zeros_3_fu_1149_p3 xor ap_const_lv1_1);
    p_not7_fu_659_p2 <= (deleted_zeros_2_fu_650_p3 xor ap_const_lv1_1);
    p_not9_fu_821_p2 <= "0" when (p_Result_4_fu_811_p4 = ap_const_lv2_0) else "1";
    p_not_fu_573_p2 <= (deleted_zeros_fu_564_p3 xor ap_const_lv1_1);
    p_s_fu_436_p2 <= (rev5_fu_513_p2 and Range2_all_ones_reg_1291);
    phitmp996_demorgan_fu_655_p2 <= (carry_6_reg_1370 and Range1_all_ones_3_reg_1330);
    phitmp997_demorgan_fu_569_p2 <= (carry_4_reg_1347 and Range1_all_ones_reg_1308);
    phitmp_demorgan_fu_1083_p2 <= (carry_8_reg_1512 and Range1_all_ones_4_reg_1523);
    r_5_fu_324_p2 <= "0" when (tmp_46_reg_1269 = ap_const_lv34_0) else "1";
        r_V_13_fu_230_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(y_reg_128),80));

    r_V_15_fu_761_p3 <= (x_reg_140 & ap_const_lv1_0);
        r_V_17_cast_fu_769_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_15_fu_761_p3),81));

        r_V_fu_220_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_reg_140),80));

    r_assign_3_fu_477_p2 <= (tmp_45_fu_463_p3 or r_5_reg_1318);
    r_assign_5_fu_974_p2 <= (tmp_56_fu_960_p3 or r_6_reg_1478);
    r_fu_367_p2 <= (tmp_34_fu_353_p3 or r_4_reg_1296);
    reg_12291 <= grp_fu_914_p2(80 downto 75);
    reg_12381 <= grp_fu_914_p2(80 downto 76);
    ret_V_11_fu_753_p0 <= reg_1459(41 - 1 downto 0);
    ret_V_11_fu_753_p1 <= reg_1229(41 - 1 downto 0);
    ret_V_11_fu_753_p2 <= std_logic_vector(signed(ret_V_11_fu_753_p0) - signed(ret_V_11_fu_753_p1));
    rev5_fu_513_p2 <= (tmp_43_fu_423_p3 xor ap_const_lv1_1);
    rev6_fu_430_p2 <= (tmp_49_fu_505_p3 xor ap_const_lv1_1);
    rev7_fu_540_p2 <= (tmp_51_fu_533_p3 xor ap_const_lv1_1);
    rev9_fu_1010_p2 <= (tmp_62_fu_1045_p3 xor ap_const_lv1_1);
    rhs_V_2_fu_195_p0 <= x_in_V;
        rhs_V_2_fu_195_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_2_fu_195_p0),42));

    rhs_V_3_fu_198_p1 <= reg_1229(40 - 1 downto 0);
    rhs_V_3_fu_198_p3 <= (rhs_V_3_fu_198_p1 & ap_const_lv35_0);
        rhs_V_5_cast_fu_205_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_3_fu_198_p3),81));

    rhs_V_fu_739_p0 <= reg_1229(40 - 1 downto 0);
        rhs_V_fu_739_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(rhs_V_fu_739_p0),41));

    tmp1_demorgan_fu_595_p2 <= (phitmp997_demorgan_fu_569_p2 or brmerge1001_demorgan_reg_1358);
    tmp1_fu_600_p2 <= (tmp1_demorgan_fu_595_p2 xor ap_const_lv1_1);
    tmp2_fu_617_p2 <= (tmp_17_fu_584_p2 or brmerge1001_demorgan_reg_1358);
    tmp3_demorgan_fu_681_p2 <= (phitmp996_demorgan_fu_655_p2 or brmerge1008_demorgan_reg_1375);
    tmp3_fu_686_p2 <= (tmp3_demorgan_fu_681_p2 xor ap_const_lv1_1);
    tmp4_fu_703_p2 <= (tmp_21_fu_670_p2 or brmerge1008_demorgan_reg_1375);
    tmp5_demorgan_fu_1109_p2 <= (phitmp_demorgan_fu_1083_p2 or brmerge1021_demorgan_reg_1534);
    tmp5_fu_1114_p2 <= (tmp5_demorgan_fu_1109_p2 xor ap_const_lv1_1);
    tmp6_fu_1131_p2 <= (tmp_27_fu_1098_p2 or brmerge1021_demorgan_reg_1534);
    tmp_15_fu_379_p2 <= (tmp_40_fu_372_p3 and r_fu_367_p2);
    tmp_16_fu_385_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_15_fu_379_p2),40));
    tmp_17_fu_584_p2 <= (p_Result_s_reg_1244 xor ap_const_lv1_1);
    tmp_18_fu_489_p2 <= (tmp_48_fu_482_p3 and r_assign_3_fu_477_p2);
    tmp_20_fu_495_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_18_fu_489_p2),40));
    tmp_21_fu_670_p2 <= (p_Result_13_reg_1275 xor ap_const_lv1_1);
    tmp_22_fu_748_p2 <= "1" when (signed(reg_1238) > signed(ap_const_lv41_2000000000)) else "0";
    tmp_23_fu_403_p2 <= (p_Result_16_fu_803_p3 xor ap_const_lv1_1);
    tmp_24_fu_986_p2 <= (tmp_59_fu_979_p3 and r_assign_5_fu_974_p2);
    tmp_25_fu_992_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_24_fu_986_p2),40));
    tmp_27_fu_1098_p2 <= (p_Result_18_reg_1484 xor ap_const_lv1_1);
    tmp_28_fu_904_p2 <= "1" when (x_reg_140 = x_V_fu_890_p3) else "0";
    tmp_29_fu_1164_p2 <= "1" when (y_reg_128 = y_V_reg_1410) else "0";
    tmp_34_fu_353_p1 <= reg_1229(80 - 1 downto 0);
    tmp_34_fu_353_p3 <= tmp_34_fu_353_p1(35 downto 35);
    tmp_38_fu_248_p0 <= grp_fu_224_p2(80 - 1 downto 0);
    tmp_38_fu_248_p1 <= tmp_38_fu_248_p0(34 - 1 downto 0);
    tmp_40_fu_372_p1 <= reg_1229(80 - 1 downto 0);
    tmp_40_fu_372_p3 <= tmp_40_fu_372_p1(34 downto 34);
    tmp_43_fu_423_p1 <= reg_1229(80 - 1 downto 0);
    tmp_43_fu_423_p3 <= tmp_43_fu_423_p1(75 downto 75);
    tmp_45_fu_463_p1 <= reg_1459(80 - 1 downto 0);
    tmp_45_fu_463_p3 <= tmp_45_fu_463_p1(35 downto 35);
    tmp_46_fu_280_p1 <= grp_fu_777_p2(34 - 1 downto 0);
    tmp_48_fu_482_p1 <= reg_1459(80 - 1 downto 0);
    tmp_48_fu_482_p3 <= tmp_48_fu_482_p1(34 downto 34);
    tmp_49_fu_505_p1 <= grp_fu_914_p2(40 - 1 downto 0);
    tmp_49_fu_505_p3 <= tmp_49_fu_505_p1(39 downto 39);
    tmp_51_fu_533_p1 <= reg_1459(80 - 1 downto 0);
    tmp_51_fu_533_p3 <= tmp_51_fu_533_p1(75 downto 75);
    tmp_52_fu_757_p1 <= ret_V_11_fu_753_p2(40 - 1 downto 0);
        tmp_53_cast_fu_773_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(y_reg_128),81));

    tmp_56_fu_960_p1 <= reg_1459;
    tmp_56_fu_960_p3 <= tmp_56_fu_960_p1(35 downto 35);
    tmp_57_fu_910_p1 <= grp_fu_224_p2(34 - 1 downto 0);
    tmp_59_fu_979_p1 <= reg_1459;
    tmp_59_fu_979_p3 <= tmp_59_fu_979_p1(34 downto 34);
    tmp_62_fu_1045_p1 <= reg_1459;
    tmp_62_fu_1045_p3 <= tmp_62_fu_1045_p1(75 downto 75);
    tmp_s_fu_209_p2 <= "1" when (unsigned(iter_reg_152) < unsigned(maxIter)) else "0";
    underflow_4_fu_692_p2 <= (tmp3_fu_686_p2 and p_Result_13_reg_1275);
    underflow_5_fu_863_p2 <= (p_Result_16_fu_803_p3 and brmerge4_fu_857_p2);
    underflow_6_fu_1120_p2 <= (tmp5_fu_1114_p2 and p_Result_18_reg_1484);
    underflow_fu_606_p2 <= (tmp1_fu_600_p2 and p_Result_s_reg_1244);
    x2_V_fu_344_p1 <= reg_1229(80 - 1 downto 0);
    x_V_fu_890_p3 <= 
        grp_fu_883_p3 when (brmerge6_fu_878_p2(0) = '1') else 
        grp_fu_1078_p3;
    y2_V_fu_454_p1 <= reg_1459(80 - 1 downto 0);
    ytemp_V_fu_951_p1 <= reg_1459;
end behav;
