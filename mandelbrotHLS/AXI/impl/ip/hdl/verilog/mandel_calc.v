// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module mandel_calc (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        x_in_V,
        y_in_V,
        maxIter,
        ap_return
);

parameter    ap_ST_fsm_state1 = 15'd1;
parameter    ap_ST_fsm_state2 = 15'd2;
parameter    ap_ST_fsm_state3 = 15'd4;
parameter    ap_ST_fsm_state4 = 15'd8;
parameter    ap_ST_fsm_state5 = 15'd16;
parameter    ap_ST_fsm_state6 = 15'd32;
parameter    ap_ST_fsm_state7 = 15'd64;
parameter    ap_ST_fsm_state8 = 15'd128;
parameter    ap_ST_fsm_state9 = 15'd256;
parameter    ap_ST_fsm_state10 = 15'd512;
parameter    ap_ST_fsm_state11 = 15'd1024;
parameter    ap_ST_fsm_state12 = 15'd2048;
parameter    ap_ST_fsm_state13 = 15'd4096;
parameter    ap_ST_fsm_state14 = 15'd8192;
parameter    ap_ST_fsm_state15 = 15'd16384;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [35:0] x_in_V;
input  [35:0] y_in_V;
input  [15:0] maxIter;
output  [15:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[15:0] ap_return;

(* fsm_encoding = "none" *) reg   [14:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire    ap_CS_fsm_state2;
wire    grp_pretest_fu_185_ap_ready;
wire    grp_pretest_fu_185_ap_done;
wire   [0:0] grp_pretest_fu_185_ap_return;
reg   [0:0] tmp_reg_1189;
wire  signed [72:0] sext_ln728_fu_193_p1;
reg  signed [72:0] sext_ln728_reg_1193;
wire  signed [37:0] rhs_V_2_fu_203_p1;
reg  signed [37:0] rhs_V_2_reg_1198;
wire   [0:0] icmp_ln29_fu_302_p2;
reg   [0:0] icmp_ln29_reg_1203;
wire    ap_CS_fsm_state3;
wire   [15:0] iter_fu_387_p2;
reg   [15:0] iter_reg_1207;
wire  signed [71:0] r_V_fu_218_p1;
reg  signed [72:0] reg_1224;
wire  signed [36:0] rhs_V_fu_732_p1;
wire    ap_CS_fsm_state8;
wire  signed [72:0] sext_ln1118_fu_807_p1;
wire    ap_CS_fsm_state9;
wire   [0:0] icmp_ln1497_fu_742_p2;
wire   [72:0] grp_fu_909_p2;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state12;
wire   [71:0] grp_fu_222_p2;
wire    ap_CS_fsm_state5;
reg   [0:0] p_Result_s_reg_1233;
reg   [2:0] p_Result_s_16_reg_1244;
reg   [3:0] p_Result_5_reg_1249;
reg   [0:0] p_Result_13_reg_1264;
reg   [2:0] p_Result_7_reg_1275;
reg   [3:0] p_Result_8_reg_1280;
wire   [0:0] r_4_fu_207_p2;
reg   [0:0] r_4_reg_1286;
wire    ap_CS_fsm_state6;
wire   [0:0] Range2_all_ones_fu_307_p2;
reg   [0:0] Range2_all_ones_reg_1291;
wire   [0:0] Range1_all_ones_fu_312_p2;
reg   [0:0] Range1_all_ones_reg_1296;
wire   [0:0] Range1_all_zeros_fu_317_p2;
reg   [0:0] Range1_all_zeros_reg_1303;
wire   [0:0] grp_fu_921_p2;
reg   [0:0] r_5_reg_1308;
wire   [0:0] Range2_all_ones_2_fu_327_p2;
reg   [0:0] Range2_all_ones_2_reg_1313;
wire   [0:0] Range1_all_ones_3_fu_332_p2;
reg   [0:0] Range1_all_ones_3_reg_1318;
wire   [0:0] Range1_all_zeros_2_fu_337_p2;
reg   [0:0] Range1_all_zeros_2_reg_1325;
wire   [0:0] carry_4_fu_407_p2;
reg   [0:0] carry_4_reg_1336;
wire   [0:0] p_Result_12_fu_413_p3;
reg   [0:0] p_Result_12_reg_1341;
wire   [0:0] and_ln781_fu_456_p2;
reg   [0:0] and_ln781_reg_1346;
wire   [0:0] xor_ln785_5_fu_468_p2;
reg   [0:0] xor_ln785_5_reg_1351;
wire   [0:0] and_ln786_fu_446_p2;
reg   [0:0] and_ln786_reg_1357;
wire   [0:0] underflow_fu_514_p2;
reg   [0:0] underflow_reg_1362;
wire   [0:0] carry_6_fu_544_p2;
reg   [0:0] carry_6_reg_1374;
wire   [0:0] p_Result_15_fu_1035_p3;
reg   [0:0] p_Result_15_reg_1379;
wire   [0:0] and_ln781_2_fu_583_p2;
reg   [0:0] and_ln781_2_reg_1384;
wire   [0:0] xor_ln785_7_fu_588_p2;
reg   [0:0] xor_ln785_7_reg_1389;
wire   [0:0] and_ln786_7_fu_593_p2;
reg   [0:0] and_ln786_7_reg_1395;
wire   [0:0] underflow_4_fu_611_p2;
reg   [0:0] underflow_4_reg_1400;
reg   [36:0] reg_1416;
wire   [36:0] grp_fu_736_p2;
wire   [30:0] trunc_ln718_fu_278_p1;
reg   [0:0] icmp_ln1497_reg_1421;
reg   [0:0] p_Result_16_reg_1425;
wire   [35:0] y_V_fu_1151_p3;
reg   [35:0] y_V_reg_1431;
wire    ap_CS_fsm_state14;
reg   [0:0] p_Result_17_reg_1437;
wire   [0:0] icmp_ln1498_fu_899_p2;
reg   [0:0] icmp_ln1498_reg_1464;
wire    ap_CS_fsm_state10;
wire  signed [71:0] r_V_13_fu_228_p1;
reg  signed [72:0] reg_1469;
wire  signed [36:0] lhs_V_fu_728_p1;
wire  signed [72:0] sext_ln1116_fu_803_p1;
wire   [72:0] grp_fu_811_p2;
wire    ap_CS_fsm_state11;
reg   [30:0] reg_1475;
wire   [30:0] trunc_ln718_3_fu_905_p1;
wire   [30:0] trunc_ln718_2_fu_246_p1;
reg   [0:0] p_Result_18_reg_1488;
reg   [0:0] r_6_reg_1494;
wire   [0:0] Range2_all_ones_3_fu_936_p2;
reg   [0:0] Range2_all_ones_3_reg_1499;
wire   [0:0] Range1_all_ones_4_fu_952_p2;
reg   [0:0] Range1_all_ones_4_reg_1504;
wire   [0:0] Range1_all_zeros_3_fu_958_p2;
reg   [0:0] Range1_all_zeros_3_reg_1511;
wire   [0:0] carry_8_fu_1029_p2;
reg   [0:0] carry_8_reg_1522;
wire   [0:0] p_Result_20_fu_550_p3;
reg   [0:0] p_Result_20_reg_1527;
wire   [0:0] and_ln781_3_fu_1068_p2;
reg   [0:0] and_ln781_3_reg_1532;
wire   [0:0] and_ln786_10_fu_1073_p2;
reg   [0:0] and_ln786_10_reg_1538;
wire   [35:0] x_V_fu_891_p3;
reg   [35:0] x_V_reg_1544;
wire   [0:0] icmp_ln1498_1_fu_1159_p2;
reg   [0:0] icmp_ln1498_1_reg_1549;
wire    grp_pretest_fu_185_ap_start;
wire    grp_pretest_fu_185_ap_idle;
wire   [35:0] grp_pretest_fu_185_y_V;
reg  signed [35:0] y_0_reg_126;
wire    ap_CS_fsm_state15;
wire   [0:0] and_ln38_fu_1165_p2;
reg  signed [35:0] x_0_reg_138;
wire   [15:0] ap_phi_mux_iter_0_phi_fu_154_p4;
reg   [15:0] iter_0_reg_150;
reg   [15:0] ap_phi_mux_iter_2_ph_phi_fu_165_p6;
reg   [15:0] iter_2_ph_reg_162;
reg   [15:0] ap_phi_mux_iter_2_phi_fu_178_p4;
reg   [15:0] iter_2_reg_175;
reg    grp_pretest_fu_185_ap_start_reg;
wire   [67:0] rhs_V_3_fu_795_p3;
wire  signed [35:0] rhs_V_2_fu_203_p0;
wire   [30:0] r_4_fu_207_p0;
wire  signed [35:0] grp_fu_222_p0;
wire  signed [35:0] grp_fu_222_p1;
wire   [71:0] p_Result_13_fu_238_p1;
wire   [71:0] trunc_ln718_2_fu_246_p0;
wire   [71:0] p_Result_7_fu_282_p1;
wire   [71:0] p_Result_8_fu_292_p1;
wire   [71:0] x2_V_fu_342_p1;
wire   [71:0] p_Result_11_fu_351_p1;
wire   [71:0] tmp_22_fu_358_p1;
wire   [0:0] tmp_29_fu_488_p3;
wire   [71:0] tmp_24_fu_370_p1;
wire   [0:0] xor_ln779_fu_401_p2;
wire   [0:0] and_ln412_2_fu_474_p2;
wire   [35:0] tmp_25_fu_393_p1;
wire   [0:0] tmp_27_fu_421_p3;
wire   [0:0] p_Result_11_fu_351_p3;
wire   [0:0] xor_ln416_fu_428_p2;
wire   [35:0] p_Result_12_fu_413_p1;
wire   [71:0] tmp_27_fu_421_p1;
wire   [0:0] tmp_25_fu_393_p3;
wire   [0:0] tmp_24_fu_370_p3;
wire   [0:0] r_fu_502_p2;
wire   [0:0] and_ln779_2_fu_571_p2;
wire   [0:0] deleted_ones_fu_576_p3;
wire   [0:0] or_ln786_2_fu_462_p2;
wire   [0:0] tmp_31_fu_507_p3;
wire   [0:0] or_ln412_fu_365_p2;
wire   [71:0] y2_V_fu_479_p1;
wire   [71:0] tmp_29_fu_488_p1;
wire   [71:0] p_Result_14_fu_495_p1;
wire   [0:0] tmp_22_fu_358_p3;
wire   [71:0] tmp_31_fu_507_p1;
wire   [0:0] xor_ln786_fu_451_p2;
wire   [0:0] and_ln412_fu_434_p2;
wire   [0:0] p_Result_14_fu_495_p3;
wire   [0:0] grp_fu_1023_p2;
wire   [35:0] p_Result_20_fu_550_p1;
wire   [71:0] tmp_34_fu_558_p1;
wire   [0:0] tmp_34_fu_558_p3;
wire   [0:0] xor_ln779_2_fu_565_p2;
wire   [0:0] and_ln779_fu_377_p2;
wire   [0:0] deleted_ones_3_fu_439_p3;
wire   [0:0] or_ln786_3_fu_599_p2;
wire   [0:0] xor_ln786_4_fu_605_p2;
wire   [0:0] deleted_zeros_fu_616_p3;
wire   [0:0] xor_ln785_fu_621_p2;
wire   [0:0] or_ln785_fu_627_p2;
wire   [0:0] overflow_fu_632_p2;
wire   [0:0] or_ln340_9_fu_642_p2;
wire   [35:0] select_ln388_fu_658_p2;
wire   [0:0] or_ln340_10_fu_646_p2;
wire   [35:0] grp_fu_877_p3;
wire   [35:0] select_ln388_fu_658_p3;
wire   [0:0] deleted_zeros_2_fu_672_p3;
wire   [0:0] xor_ln785_6_fu_677_p2;
wire   [0:0] or_ln785_3_fu_683_p2;
wire   [0:0] overflow_3_fu_688_p2;
wire   [0:0] or_ln340_12_fu_698_p2;
wire   [35:0] select_ln388_4_fu_714_p2;
wire   [0:0] or_ln340_13_fu_702_p2;
wire   [35:0] grp_fu_1137_p3;
wire   [35:0] select_ln388_4_fu_714_p3;
wire   [35:0] p_Val2_20_fu_664_p3;
wire   [35:0] p_Val2_21_fu_720_p3;
reg   [36:0] grp_fu_736_p0;
reg   [36:0] grp_fu_736_p1;
wire   [35:0] zext_ln415_fu_520_p1;
wire   [35:0] trunc_ln1192_fu_755_p1;
wire  signed [36:0] ret_V_11_fu_747_p0;
wire  signed [36:0] ret_V_11_fu_747_p1;
wire  signed [36:0] ret_V_11_fu_747_p2;
wire   [37:0] p_Result_16_fu_764_p1;
wire   [35:0] p_Result_17_fu_777_p1;
wire   [37:0] p_Result_9_fu_785_p1;
wire   [35:0] rhs_V_3_fu_795_p1;
wire   [36:0] r_V_15_fu_196_p3;
reg  signed [35:0] grp_fu_811_p0;
reg  signed [36:0] grp_fu_811_p1;
wire   [1:0] icmp_ln785_fu_817_p0;
wire   [0:0] icmp_ln785_fu_817_p2;
wire   [0:0] or_ln785_4_fu_822_p2;
wire   [0:0] xor_ln785_8_fu_827_p2;
wire   [1:0] icmp_ln786_fu_843_p0;
wire   [0:0] icmp_ln786_fu_843_p2;
wire   [0:0] xor_ln786_5_fu_838_p2;
wire   [0:0] or_ln786_fu_848_p2;
wire   [0:0] underflow_5_fu_854_p2;
wire   [0:0] overflow_4_fu_832_p2;
wire   [0:0] xor_ln340_fu_865_p2;
reg   [0:0] grp_fu_877_p0;
wire   [0:0] or_ln340_fu_637_p2;
wire   [0:0] or_ln340_14_fu_859_p2;
wire   [35:0] grp_fu_877_p2;
wire   [35:0] select_ln388_5_fu_884_p2;
wire   [0:0] or_ln340_15_fu_871_p2;
wire   [35:0] select_ln388_5_fu_884_p3;
reg   [72:0] grp_fu_909_p0;
wire   [35:0] zext_ln415_3_fu_1005_p1;
reg   [72:0] grp_fu_909_p1;
wire   [35:0] zext_ln415_2_fu_383_p1;
wire  signed [37:0] lhs_V_2_fu_751_p1;
wire   [3:0] tmp_3_fu_926_p4;
wire   [4:0] tmp_4_fu_942_p4;
wire   [72:0] ytemp_V_fu_964_p1;
wire   [72:0] tmp_38_fu_973_p1;
wire   [72:0] p_Result_19_fu_980_p1;
wire   [0:0] tmp_38_fu_973_p3;
wire   [72:0] tmp_40_fu_992_p1;
wire   [0:0] tmp_40_fu_992_p3;
wire   [0:0] or_ln412_1_fu_987_p2;
wire   [0:0] and_ln412_3_fu_999_p2;
wire   [35:0] grp_fu_1015_p1;
wire   [0:0] grp_fu_1015_p3;
wire   [0:0] p_Result_19_fu_980_p3;
wire   [35:0] p_Result_15_fu_1035_p1;
wire   [72:0] tmp_43_fu_1043_p1;
wire   [0:0] tmp_43_fu_1043_p3;
wire   [0:0] xor_ln779_3_fu_1050_p2;
wire   [0:0] and_ln779_3_fu_1056_p2;
wire   [0:0] deleted_ones_4_fu_1061_p3;
wire   [0:0] deleted_zeros_3_fu_1079_p3;
wire   [0:0] xor_ln785_9_fu_1084_p2;
wire   [0:0] or_ln785_5_fu_1090_p2;
wire   [0:0] xor_ln785_10_fu_1095_p2;
wire   [0:0] or_ln786_4_fu_1106_p2;
wire   [0:0] xor_ln786_6_fu_1110_p2;
wire   [0:0] underflow_6_fu_1116_p2;
wire   [0:0] overflow_5_fu_1100_p2;
wire   [0:0] or_ln340_17_fu_1127_p2;
reg   [0:0] grp_fu_1137_p0;
wire   [0:0] or_ln340_11_fu_693_p2;
wire   [0:0] or_ln340_16_fu_1121_p2;
wire   [35:0] grp_fu_1137_p2;
wire   [35:0] select_ln388_6_fu_1144_p2;
wire   [0:0] or_ln340_18_fu_1132_p2;
wire   [35:0] select_ln388_6_fu_1144_p3;
reg   [15:0] ap_return_preg;
reg   [14:0] ap_NS_fsm;
wire   [35:0] grp_fu_736_p00;
wire   [35:0] grp_fu_909_p00;
wire   [35:0] grp_fu_909_p13;
wire   [1:0] reg_14750;

// power-on initialization
initial begin
#0 ap_CS_fsm = 15'd1;
#0 grp_pretest_fu_185_ap_start_reg = 1'b0;
#0 ap_return_preg = 16'd0;
end

pretest grp_pretest_fu_185(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_pretest_fu_185_ap_start),
    .ap_done(grp_pretest_fu_185_ap_done),
    .ap_idle(grp_pretest_fu_185_ap_idle),
    .ap_ready(grp_pretest_fu_185_ap_ready),
    .x_V(x_in_V),
    .y_V(grp_pretest_fu_185_y_V),
    .ap_return(grp_pretest_fu_185_ap_return)
);

calc_mul_36s_36s_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 36 ),
    .dout_WIDTH( 72 ))
calc_mul_36s_36s_bkb_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_222_p0),
    .din1(grp_fu_222_p1),
    .ce(1'b1),
    .dout(grp_fu_222_p2)
);

calc_mul_36s_37s_dEe #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 36 ),
    .din1_WIDTH( 37 ),
    .dout_WIDTH( 73 ))
calc_mul_36s_37s_dEe_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_811_p0),
    .din1(grp_fu_811_p1),
    .ce(1'b1),
    .dout(grp_fu_811_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 16'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state15) & ((tmp_reg_1189 == 1'd1) | ((icmp_ln29_reg_1203 == 1'd0) | ((1'd1 == and_ln38_fu_1165_p2) | (icmp_ln1497_reg_1421 == 1'd1)))))) begin
            ap_return_preg <= ap_phi_mux_iter_2_phi_fu_178_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_pretest_fu_185_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_pretest_fu_185_ap_start_reg <= 1'b1;
        end else if ((grp_pretest_fu_185_ap_ready == 1'b1)) begin
            grp_pretest_fu_185_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln29_reg_1203 == 1'd1) & (1'd0 == and_ln38_fu_1165_p2) & (icmp_ln1497_reg_1421 == 1'd0) & (tmp_reg_1189 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        iter_0_reg_150 <= iter_reg_1207;
    end else if (((grp_pretest_fu_185_ap_return == 1'd0) & (grp_pretest_fu_185_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        iter_0_reg_150 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln38_fu_1165_p2) & (icmp_ln29_reg_1203 == 1'd1) & (icmp_ln1497_reg_1421 == 1'd0) & (tmp_reg_1189 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        iter_2_ph_reg_162 <= maxIter;
    end else if (((icmp_ln1497_fu_742_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        iter_2_ph_reg_162 <= iter_0_reg_150;
    end else if (((icmp_ln29_fu_302_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        iter_2_ph_reg_162 <= ap_phi_mux_iter_0_phi_fu_154_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & ((((icmp_ln1497_reg_1421 == 1'd1) & (tmp_reg_1189 == 1'd0)) | ((1'd1 == and_ln38_fu_1165_p2) & (tmp_reg_1189 == 1'd0))) | ((icmp_ln29_reg_1203 == 1'd0) & (tmp_reg_1189 == 1'd0))))) begin
        iter_2_reg_175 <= ap_phi_mux_iter_2_ph_phi_fu_165_p6;
    end else if (((grp_pretest_fu_185_ap_return == 1'd1) & (grp_pretest_fu_185_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        iter_2_reg_175 <= maxIter;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        reg_1224 <= grp_fu_222_p2;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state7))) begin
        reg_1224 <= grp_fu_909_p2;
    end else if (((icmp_ln1497_fu_742_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        reg_1224 <= sext_ln1118_fu_807_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        reg_1224 <= rhs_V_fu_732_p1;
    end else if (((icmp_ln29_fu_302_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        reg_1224 <= r_V_fu_218_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        reg_1416 <= trunc_ln718_fu_278_p1;
    end else if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | ((icmp_ln1497_fu_742_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9)))) begin
        reg_1416 <= grp_fu_736_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        reg_1416 <= y_in_V;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state5))) begin
        reg_1469 <= grp_fu_811_p2;
    end else if (((icmp_ln1497_fu_742_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        reg_1469 <= sext_ln1116_fu_803_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        reg_1469 <= lhs_V_fu_728_p1;
    end else if (((icmp_ln29_fu_302_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        reg_1469 <= r_V_13_fu_228_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        reg_1475 <= trunc_ln718_2_fu_246_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        reg_1475 <= trunc_ln718_3_fu_905_p1;
    end else if (((icmp_ln1497_fu_742_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        reg_1475 <= reg_14750;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln29_reg_1203 == 1'd1) & (1'd0 == and_ln38_fu_1165_p2) & (icmp_ln1497_reg_1421 == 1'd0) & (tmp_reg_1189 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        x_0_reg_138 <= x_V_reg_1544;
    end else if (((grp_pretest_fu_185_ap_return == 1'd0) & (grp_pretest_fu_185_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        x_0_reg_138 <= 36'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln29_reg_1203 == 1'd1) & (1'd0 == and_ln38_fu_1165_p2) & (icmp_ln1497_reg_1421 == 1'd0) & (tmp_reg_1189 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        y_0_reg_126 <= y_V_reg_1431;
    end else if (((grp_pretest_fu_185_ap_return == 1'd0) & (grp_pretest_fu_185_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        y_0_reg_126 <= 36'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        Range1_all_ones_3_reg_1318 <= Range1_all_ones_3_fu_332_p2;
        Range1_all_ones_reg_1296 <= Range1_all_ones_fu_312_p2;
        Range1_all_zeros_2_reg_1325 <= Range1_all_zeros_2_fu_337_p2;
        Range1_all_zeros_reg_1303 <= Range1_all_zeros_fu_317_p2;
        Range2_all_ones_2_reg_1313 <= Range2_all_ones_2_fu_327_p2;
        Range2_all_ones_reg_1291 <= Range2_all_ones_fu_307_p2;
        r_4_reg_1286 <= r_4_fu_207_p2;
        r_5_reg_1308 <= grp_fu_921_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        Range1_all_ones_4_reg_1504 <= Range1_all_ones_4_fu_952_p2;
        Range1_all_zeros_3_reg_1511 <= Range1_all_zeros_3_fu_958_p2;
        Range2_all_ones_3_reg_1499 <= Range2_all_ones_3_fu_936_p2;
        p_Result_18_reg_1488 <= grp_fu_909_p2[32'd72];
        r_6_reg_1494 <= grp_fu_921_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        and_ln781_2_reg_1384 <= and_ln781_2_fu_583_p2;
        and_ln781_reg_1346 <= and_ln781_fu_456_p2;
        and_ln786_7_reg_1395 <= and_ln786_7_fu_593_p2;
        and_ln786_reg_1357 <= and_ln786_fu_446_p2;
        carry_4_reg_1336 <= carry_4_fu_407_p2;
        carry_6_reg_1374 <= carry_6_fu_544_p2;
        p_Result_12_reg_1341 <= p_Result_12_fu_413_p1[32'd35];
        p_Result_15_reg_1379 <= p_Result_15_fu_1035_p1[32'd35];
        underflow_4_reg_1400 <= underflow_4_fu_611_p2;
        underflow_reg_1362 <= underflow_fu_514_p2;
        xor_ln785_5_reg_1351 <= xor_ln785_5_fu_468_p2;
        xor_ln785_7_reg_1389 <= xor_ln785_7_fu_588_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        and_ln781_3_reg_1532 <= and_ln781_3_fu_1068_p2;
        and_ln786_10_reg_1538 <= and_ln786_10_fu_1073_p2;
        carry_8_reg_1522 <= carry_8_fu_1029_p2;
        p_Result_20_reg_1527 <= p_Result_20_fu_550_p1[32'd35];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        icmp_ln1497_reg_1421 <= icmp_ln1497_fu_742_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        icmp_ln1498_1_reg_1549 <= icmp_ln1498_1_fu_1159_p2;
        y_V_reg_1431 <= y_V_fu_1151_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        icmp_ln1498_reg_1464 <= icmp_ln1498_fu_899_p2;
        x_V_reg_1544 <= x_V_fu_891_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        icmp_ln29_reg_1203 <= icmp_ln29_fu_302_p2;
        iter_reg_1207 <= iter_fu_387_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        p_Result_13_reg_1264 <= p_Result_13_fu_238_p1[32'd71];
        p_Result_5_reg_1249 <= {{grp_fu_222_p2[71:68]}};
        p_Result_7_reg_1275 <= {{p_Result_7_fu_282_p1[71:69]}};
        p_Result_8_reg_1280 <= {{p_Result_8_fu_292_p1[71:68]}};
        p_Result_s_16_reg_1244 <= {{grp_fu_222_p2[71:69]}};
        p_Result_s_reg_1233 <= grp_fu_222_p2[32'd71];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1497_fu_742_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        p_Result_16_reg_1425 <= p_Result_16_fu_764_p1[32'd37];
        p_Result_17_reg_1437 <= p_Result_17_fu_777_p1[32'd35];
    end
end

always @ (posedge ap_clk) begin
    if (((grp_pretest_fu_185_ap_return == 1'd0) & (grp_pretest_fu_185_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        rhs_V_2_reg_1198 <= rhs_V_2_fu_203_p1;
        sext_ln728_reg_1193[72 : 32] <= sext_ln728_fu_193_p1[72 : 32];
    end
end

always @ (posedge ap_clk) begin
    if (((grp_pretest_fu_185_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_reg_1189 <= grp_pretest_fu_185_ap_return;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state15) & ((tmp_reg_1189 == 1'd1) | ((icmp_ln29_reg_1203 == 1'd0) | ((1'd1 == and_ln38_fu_1165_p2) | (icmp_ln1497_reg_1421 == 1'd1))))) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln38_fu_1165_p2) & (icmp_ln29_reg_1203 == 1'd1) & (icmp_ln1497_reg_1421 == 1'd0) & (tmp_reg_1189 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        ap_phi_mux_iter_2_ph_phi_fu_165_p6 = maxIter;
    end else begin
        ap_phi_mux_iter_2_ph_phi_fu_165_p6 = iter_2_ph_reg_162;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) & ((((icmp_ln1497_reg_1421 == 1'd1) & (tmp_reg_1189 == 1'd0)) | ((1'd1 == and_ln38_fu_1165_p2) & (tmp_reg_1189 == 1'd0))) | ((icmp_ln29_reg_1203 == 1'd0) & (tmp_reg_1189 == 1'd0))))) begin
        ap_phi_mux_iter_2_phi_fu_178_p4 = ap_phi_mux_iter_2_ph_phi_fu_165_p6;
    end else begin
        ap_phi_mux_iter_2_phi_fu_178_p4 = iter_2_reg_175;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) & ((tmp_reg_1189 == 1'd1) | ((icmp_ln29_reg_1203 == 1'd0) | ((1'd1 == and_ln38_fu_1165_p2) | (icmp_ln1497_reg_1421 == 1'd1)))))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) & ((tmp_reg_1189 == 1'd1) | ((icmp_ln29_reg_1203 == 1'd0) | ((1'd1 == and_ln38_fu_1165_p2) | (icmp_ln1497_reg_1421 == 1'd1)))))) begin
        ap_return = ap_phi_mux_iter_2_phi_fu_178_p4;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_1137_p0 = or_ln340_16_fu_1121_p2;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_1137_p0 = or_ln340_11_fu_693_p2;
    end else begin
        grp_fu_1137_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_736_p0 = x_in_V;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_736_p0 = rhs_V_fu_732_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_736_p0 = grp_fu_736_p00;
    end else begin
        grp_fu_736_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_736_p1 = trunc_ln1192_fu_755_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_736_p1 = lhs_V_fu_728_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_736_p1 = zext_ln415_fu_520_p1;
    end else begin
        grp_fu_736_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_811_p0 = sext_ln1118_fu_807_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_811_p0 = r_V_13_fu_228_p1;
    end else begin
        grp_fu_811_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_811_p1 = sext_ln1116_fu_803_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_811_p1 = r_V_13_fu_228_p1;
    end else begin
        grp_fu_811_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_fu_877_p0 = or_ln340_14_fu_859_p2;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_877_p0 = or_ln340_fu_637_p2;
    end else begin
        grp_fu_877_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_909_p0 = zext_ln415_3_fu_1005_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_909_p0 = reg_1469;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_909_p0 = rhs_V_2_reg_1198;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_909_p0 = grp_fu_909_p00;
    end else begin
        grp_fu_909_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_909_p1 = grp_fu_909_p13;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_909_p1 = sext_ln728_reg_1193;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_909_p1 = lhs_V_2_fu_751_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_909_p1 = zext_ln415_2_fu_383_p1;
    end else begin
        grp_fu_909_p1 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_pretest_fu_185_ap_return == 1'd0) & (grp_pretest_fu_185_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if (((grp_pretest_fu_185_ap_return == 1'd1) & (grp_pretest_fu_185_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln29_fu_302_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((icmp_ln1497_fu_742_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == ap_CS_fsm_state15) & ((tmp_reg_1189 == 1'd1) | ((icmp_ln29_reg_1203 == 1'd0) | ((1'd1 == and_ln38_fu_1165_p2) | (icmp_ln1497_reg_1421 == 1'd1)))))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Range1_all_ones_3_fu_332_p2 = ((p_Result_8_reg_1280 == 4'd15) ? 1'b1 : 1'b0);

assign Range1_all_ones_4_fu_952_p2 = ((tmp_4_fu_942_p4 == 5'd31) ? 1'b1 : 1'b0);

assign Range1_all_ones_fu_312_p2 = ((p_Result_5_reg_1249 == 4'd15) ? 1'b1 : 1'b0);

assign Range1_all_zeros_2_fu_337_p2 = ((p_Result_8_reg_1280 == 4'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_3_fu_958_p2 = ((tmp_4_fu_942_p4 == 5'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_fu_317_p2 = ((p_Result_5_reg_1249 == 4'd0) ? 1'b1 : 1'b0);

assign Range2_all_ones_2_fu_327_p2 = ((p_Result_7_reg_1275 == 3'd7) ? 1'b1 : 1'b0);

assign Range2_all_ones_3_fu_936_p2 = ((tmp_3_fu_926_p4 == 4'd15) ? 1'b1 : 1'b0);

assign Range2_all_ones_fu_307_p2 = ((p_Result_s_16_reg_1244 == 3'd7) ? 1'b1 : 1'b0);

assign and_ln38_fu_1165_p2 = (icmp_ln1498_reg_1464 & icmp_ln1498_1_reg_1549);

assign and_ln412_2_fu_474_p2 = (tmp_31_fu_507_p3 & or_ln412_fu_365_p2);

assign and_ln412_3_fu_999_p2 = (tmp_40_fu_992_p3 & or_ln412_1_fu_987_p2);

assign and_ln412_fu_434_p2 = (tmp_24_fu_370_p3 & r_fu_502_p2);

assign and_ln779_2_fu_571_p2 = (xor_ln779_2_fu_565_p2 & Range2_all_ones_2_reg_1313);

assign and_ln779_3_fu_1056_p2 = (xor_ln779_3_fu_1050_p2 & Range2_all_ones_3_reg_1499);

assign and_ln779_fu_377_p2 = (xor_ln779_fu_401_p2 & Range2_all_ones_reg_1291);

assign and_ln781_2_fu_583_p2 = (carry_6_fu_544_p2 & Range1_all_ones_3_reg_1318);

assign and_ln781_3_fu_1068_p2 = (carry_8_fu_1029_p2 & Range1_all_ones_4_reg_1504);

assign and_ln781_fu_456_p2 = (carry_4_fu_407_p2 & Range1_all_ones_reg_1296);

assign and_ln786_10_fu_1073_p2 = (p_Result_20_fu_550_p3 & deleted_ones_4_fu_1061_p3);

assign and_ln786_7_fu_593_p2 = (p_Result_15_fu_1035_p3 & deleted_ones_3_fu_439_p3);

assign and_ln786_fu_446_p2 = (p_Result_12_fu_413_p3 & deleted_ones_fu_576_p3);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_phi_mux_iter_0_phi_fu_154_p4 = iter_0_reg_150;

assign carry_4_fu_407_p2 = (xor_ln416_fu_428_p2 & p_Result_11_fu_351_p3);

assign carry_6_fu_544_p2 = (p_Result_14_fu_495_p3 & grp_fu_1023_p2);

assign carry_8_fu_1029_p2 = (p_Result_19_fu_980_p3 & grp_fu_1023_p2);

assign deleted_ones_3_fu_439_p3 = ((carry_6_fu_544_p2[0:0] === 1'b1) ? and_ln779_2_fu_571_p2 : Range1_all_ones_3_reg_1318);

assign deleted_ones_4_fu_1061_p3 = ((carry_8_fu_1029_p2[0:0] === 1'b1) ? and_ln779_3_fu_1056_p2 : Range1_all_ones_4_reg_1504);

assign deleted_ones_fu_576_p3 = ((carry_4_fu_407_p2[0:0] === 1'b1) ? and_ln779_fu_377_p2 : Range1_all_ones_reg_1296);

assign deleted_zeros_2_fu_672_p3 = ((carry_6_reg_1374[0:0] === 1'b1) ? Range1_all_ones_3_reg_1318 : Range1_all_zeros_2_reg_1325);

assign deleted_zeros_3_fu_1079_p3 = ((carry_8_reg_1522[0:0] === 1'b1) ? Range1_all_ones_4_reg_1504 : Range1_all_zeros_3_reg_1511);

assign deleted_zeros_fu_616_p3 = ((carry_4_reg_1336[0:0] === 1'b1) ? Range1_all_ones_reg_1296 : Range1_all_zeros_reg_1303);

assign grp_fu_1015_p1 = grp_fu_909_p2;

assign grp_fu_1015_p3 = grp_fu_1015_p1[32'd35];

assign grp_fu_1023_p2 = (grp_fu_1015_p3 ^ 1'd1);

assign grp_fu_1137_p2 = reg_1224;

assign grp_fu_1137_p3 = ((grp_fu_1137_p0[0:0] === 1'b1) ? 36'd34359738367 : grp_fu_1137_p2);

assign grp_fu_222_p0 = r_V_fu_218_p1;

assign grp_fu_222_p1 = r_V_fu_218_p1;

assign grp_fu_736_p00 = {{x2_V_fu_342_p1[67:32]}};

assign grp_fu_736_p2 = (grp_fu_736_p0 + grp_fu_736_p1);

assign grp_fu_877_p2 = reg_1416;

assign grp_fu_877_p3 = ((grp_fu_877_p0[0:0] === 1'b1) ? 36'd34359738367 : grp_fu_877_p2);

assign grp_fu_909_p00 = {{y2_V_fu_479_p1[67:32]}};

assign grp_fu_909_p13 = {{ytemp_V_fu_964_p1[67:32]}};

assign grp_fu_909_p2 = (grp_fu_909_p0 + grp_fu_909_p1);

assign grp_fu_921_p2 = ((reg_1475 != 31'd0) ? 1'b1 : 1'b0);

assign grp_pretest_fu_185_ap_start = grp_pretest_fu_185_ap_start_reg;

assign grp_pretest_fu_185_y_V = reg_1416;

assign icmp_ln1497_fu_742_p2 = (($signed(reg_1416) > $signed(37'd17179869184)) ? 1'b1 : 1'b0);

assign icmp_ln1498_1_fu_1159_p2 = ((y_0_reg_126 == y_V_fu_1151_p3) ? 1'b1 : 1'b0);

assign icmp_ln1498_fu_899_p2 = ((x_0_reg_138 == x_V_fu_891_p3) ? 1'b1 : 1'b0);

assign icmp_ln29_fu_302_p2 = ((iter_0_reg_150 < maxIter) ? 1'b1 : 1'b0);

assign icmp_ln785_fu_817_p0 = reg_1475;

assign icmp_ln785_fu_817_p2 = ((icmp_ln785_fu_817_p0 != 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln786_fu_843_p0 = reg_1475;

assign icmp_ln786_fu_843_p2 = ((icmp_ln786_fu_843_p0 != 2'd3) ? 1'b1 : 1'b0);

assign iter_fu_387_p2 = (iter_0_reg_150 + 16'd1);

assign lhs_V_2_fu_751_p1 = ret_V_11_fu_747_p2;

assign lhs_V_fu_728_p1 = $signed(p_Val2_20_fu_664_p3);

assign or_ln340_10_fu_646_p2 = (or_ln340_9_fu_642_p2 | and_ln781_reg_1346);

assign or_ln340_11_fu_693_p2 = (underflow_4_reg_1400 | overflow_3_fu_688_p2);

assign or_ln340_12_fu_698_p2 = (xor_ln785_7_reg_1389 | and_ln786_7_reg_1395);

assign or_ln340_13_fu_702_p2 = (or_ln340_12_fu_698_p2 | and_ln781_2_reg_1384);

assign or_ln340_14_fu_859_p2 = (underflow_5_fu_854_p2 | overflow_4_fu_832_p2);

assign or_ln340_15_fu_871_p2 = (xor_ln340_fu_865_p2 | overflow_4_fu_832_p2);

assign or_ln340_16_fu_1121_p2 = (underflow_6_fu_1116_p2 | overflow_5_fu_1100_p2);

assign or_ln340_17_fu_1127_p2 = (xor_ln785_10_fu_1095_p2 | and_ln786_10_reg_1538);

assign or_ln340_18_fu_1132_p2 = (or_ln340_17_fu_1127_p2 | and_ln781_3_reg_1532);

assign or_ln340_9_fu_642_p2 = (xor_ln785_5_reg_1351 | and_ln786_reg_1357);

assign or_ln340_fu_637_p2 = (underflow_reg_1362 | overflow_fu_632_p2);

assign or_ln412_1_fu_987_p2 = (tmp_38_fu_973_p3 | r_6_reg_1494);

assign or_ln412_fu_365_p2 = (tmp_29_fu_488_p3 | r_5_reg_1308);

assign or_ln785_3_fu_683_p2 = (xor_ln785_6_fu_677_p2 | p_Result_15_reg_1379);

assign or_ln785_4_fu_822_p2 = (p_Result_17_reg_1437 | icmp_ln785_fu_817_p2);

assign or_ln785_5_fu_1090_p2 = (xor_ln785_9_fu_1084_p2 | p_Result_20_reg_1527);

assign or_ln785_fu_627_p2 = (xor_ln785_fu_621_p2 | p_Result_12_reg_1341);

assign or_ln786_2_fu_462_p2 = (and_ln786_fu_446_p2 | and_ln781_fu_456_p2);

assign or_ln786_3_fu_599_p2 = (and_ln786_7_fu_593_p2 | and_ln781_2_fu_583_p2);

assign or_ln786_4_fu_1106_p2 = (and_ln786_10_reg_1538 | and_ln781_3_reg_1532);

assign or_ln786_fu_848_p2 = (xor_ln786_5_fu_838_p2 | icmp_ln786_fu_843_p2);

assign overflow_3_fu_688_p2 = (xor_ln785_7_reg_1389 & or_ln785_3_fu_683_p2);

assign overflow_4_fu_832_p2 = (xor_ln785_8_fu_827_p2 & or_ln785_4_fu_822_p2);

assign overflow_5_fu_1100_p2 = (xor_ln785_10_fu_1095_p2 & or_ln785_5_fu_1090_p2);

assign overflow_fu_632_p2 = (xor_ln785_5_reg_1351 & or_ln785_fu_627_p2);

assign p_Result_11_fu_351_p1 = reg_1224;

assign p_Result_11_fu_351_p3 = p_Result_11_fu_351_p1[32'd67];

assign p_Result_12_fu_413_p1 = grp_fu_736_p2;

assign p_Result_12_fu_413_p3 = p_Result_12_fu_413_p1[32'd35];

assign p_Result_13_fu_238_p1 = grp_fu_811_p2;

assign p_Result_14_fu_495_p1 = reg_1469;

assign p_Result_14_fu_495_p3 = p_Result_14_fu_495_p1[32'd67];

assign p_Result_15_fu_1035_p1 = grp_fu_909_p2;

assign p_Result_15_fu_1035_p3 = p_Result_15_fu_1035_p1[32'd35];

assign p_Result_16_fu_764_p1 = grp_fu_909_p2;

assign p_Result_17_fu_777_p1 = grp_fu_736_p2;

assign p_Result_19_fu_980_p1 = reg_1224;

assign p_Result_19_fu_980_p3 = p_Result_19_fu_980_p1[32'd67];

assign p_Result_20_fu_550_p1 = grp_fu_909_p2;

assign p_Result_20_fu_550_p3 = p_Result_20_fu_550_p1[32'd35];

assign p_Result_7_fu_282_p1 = grp_fu_811_p2;

assign p_Result_8_fu_292_p1 = grp_fu_811_p2;

assign p_Result_9_fu_785_p1 = grp_fu_909_p2;

assign p_Val2_20_fu_664_p3 = ((or_ln340_10_fu_646_p2[0:0] === 1'b1) ? grp_fu_877_p3 : select_ln388_fu_658_p3);

assign p_Val2_21_fu_720_p3 = ((or_ln340_13_fu_702_p2[0:0] === 1'b1) ? grp_fu_1137_p3 : select_ln388_4_fu_714_p3);

assign r_4_fu_207_p0 = reg_1416;

assign r_4_fu_207_p2 = ((r_4_fu_207_p0 != 31'd0) ? 1'b1 : 1'b0);

assign r_V_13_fu_228_p1 = y_0_reg_126;

assign r_V_15_fu_196_p3 = {{x_0_reg_138}, {1'd0}};

assign r_V_fu_218_p1 = x_0_reg_138;

assign r_fu_502_p2 = (tmp_22_fu_358_p3 | r_4_reg_1286);

assign reg_14750 = {{p_Result_9_fu_785_p1[37:36]}};

assign ret_V_11_fu_747_p0 = reg_1469;

assign ret_V_11_fu_747_p1 = reg_1224;

assign ret_V_11_fu_747_p2 = ($signed(ret_V_11_fu_747_p0) - $signed(ret_V_11_fu_747_p1));

assign rhs_V_2_fu_203_p0 = x_in_V;

assign rhs_V_2_fu_203_p1 = rhs_V_2_fu_203_p0;

assign rhs_V_3_fu_795_p1 = reg_1416;

assign rhs_V_3_fu_795_p3 = {{rhs_V_3_fu_795_p1}, {32'd0}};

assign rhs_V_fu_732_p1 = $signed(p_Val2_21_fu_720_p3);

assign select_ln388_4_fu_714_p2 = reg_1224;

assign select_ln388_4_fu_714_p3 = ((underflow_4_reg_1400[0:0] === 1'b1) ? 36'd34359738368 : select_ln388_4_fu_714_p2);

assign select_ln388_5_fu_884_p2 = reg_1416;

assign select_ln388_5_fu_884_p3 = ((underflow_5_fu_854_p2[0:0] === 1'b1) ? 36'd34359738368 : select_ln388_5_fu_884_p2);

assign select_ln388_6_fu_1144_p2 = reg_1224;

assign select_ln388_6_fu_1144_p3 = ((underflow_6_fu_1116_p2[0:0] === 1'b1) ? 36'd34359738368 : select_ln388_6_fu_1144_p2);

assign select_ln388_fu_658_p2 = reg_1416;

assign select_ln388_fu_658_p3 = ((underflow_reg_1362[0:0] === 1'b1) ? 36'd34359738368 : select_ln388_fu_658_p2);

assign sext_ln1116_fu_803_p1 = $signed(r_V_15_fu_196_p3);

assign sext_ln1118_fu_807_p1 = y_0_reg_126;

assign sext_ln728_fu_193_p1 = $signed(rhs_V_3_fu_795_p3);

assign tmp_22_fu_358_p1 = reg_1224;

assign tmp_22_fu_358_p3 = tmp_22_fu_358_p1[32'd32];

assign tmp_24_fu_370_p1 = reg_1224;

assign tmp_24_fu_370_p3 = tmp_24_fu_370_p1[32'd31];

assign tmp_25_fu_393_p1 = grp_fu_736_p2;

assign tmp_25_fu_393_p3 = tmp_25_fu_393_p1[32'd35];

assign tmp_27_fu_421_p1 = reg_1224;

assign tmp_27_fu_421_p3 = tmp_27_fu_421_p1[32'd68];

assign tmp_29_fu_488_p1 = reg_1469;

assign tmp_29_fu_488_p3 = tmp_29_fu_488_p1[32'd32];

assign tmp_31_fu_507_p1 = reg_1469;

assign tmp_31_fu_507_p3 = tmp_31_fu_507_p1[32'd31];

assign tmp_34_fu_558_p1 = reg_1469;

assign tmp_34_fu_558_p3 = tmp_34_fu_558_p1[32'd68];

assign tmp_38_fu_973_p1 = reg_1224;

assign tmp_38_fu_973_p3 = tmp_38_fu_973_p1[32'd32];

assign tmp_3_fu_926_p4 = {{grp_fu_909_p2[72:69]}};

assign tmp_40_fu_992_p1 = reg_1469;

assign tmp_40_fu_992_p3 = tmp_40_fu_992_p1[32'd31];

assign tmp_43_fu_1043_p1 = reg_1224;

assign tmp_43_fu_1043_p3 = tmp_43_fu_1043_p1[32'd68];

assign tmp_4_fu_942_p4 = {{grp_fu_909_p2[72:68]}};

assign trunc_ln1192_fu_755_p1 = ret_V_11_fu_747_p2[35:0];

assign trunc_ln718_2_fu_246_p0 = grp_fu_811_p2;

assign trunc_ln718_2_fu_246_p1 = trunc_ln718_2_fu_246_p0[30:0];

assign trunc_ln718_3_fu_905_p1 = grp_fu_811_p2[30:0];

assign trunc_ln718_fu_278_p1 = grp_fu_222_p2[30:0];

assign underflow_4_fu_611_p2 = (xor_ln786_4_fu_605_p2 & p_Result_13_reg_1264);

assign underflow_5_fu_854_p2 = (p_Result_16_reg_1425 & or_ln786_fu_848_p2);

assign underflow_6_fu_1116_p2 = (xor_ln786_6_fu_1110_p2 & p_Result_18_reg_1488);

assign underflow_fu_514_p2 = (xor_ln786_fu_451_p2 & p_Result_s_reg_1233);

assign x2_V_fu_342_p1 = reg_1224;

assign x_V_fu_891_p3 = ((or_ln340_15_fu_871_p2[0:0] === 1'b1) ? grp_fu_877_p3 : select_ln388_5_fu_884_p3);

assign xor_ln340_fu_865_p2 = (underflow_5_fu_854_p2 ^ 1'd1);

assign xor_ln416_fu_428_p2 = (tmp_25_fu_393_p3 ^ 1'd1);

assign xor_ln779_2_fu_565_p2 = (tmp_34_fu_558_p3 ^ 1'd1);

assign xor_ln779_3_fu_1050_p2 = (tmp_43_fu_1043_p3 ^ 1'd1);

assign xor_ln779_fu_401_p2 = (tmp_27_fu_421_p3 ^ 1'd1);

assign xor_ln785_10_fu_1095_p2 = (p_Result_18_reg_1488 ^ 1'd1);

assign xor_ln785_5_fu_468_p2 = (p_Result_s_reg_1233 ^ 1'd1);

assign xor_ln785_6_fu_677_p2 = (deleted_zeros_2_fu_672_p3 ^ 1'd1);

assign xor_ln785_7_fu_588_p2 = (p_Result_13_reg_1264 ^ 1'd1);

assign xor_ln785_8_fu_827_p2 = (p_Result_16_reg_1425 ^ 1'd1);

assign xor_ln785_9_fu_1084_p2 = (deleted_zeros_3_fu_1079_p3 ^ 1'd1);

assign xor_ln785_fu_621_p2 = (deleted_zeros_fu_616_p3 ^ 1'd1);

assign xor_ln786_4_fu_605_p2 = (or_ln786_3_fu_599_p2 ^ 1'd1);

assign xor_ln786_5_fu_838_p2 = (p_Result_17_reg_1437 ^ 1'd1);

assign xor_ln786_6_fu_1110_p2 = (or_ln786_4_fu_1106_p2 ^ 1'd1);

assign xor_ln786_fu_451_p2 = (or_ln786_2_fu_462_p2 ^ 1'd1);

assign y2_V_fu_479_p1 = reg_1469;

assign y_V_fu_1151_p3 = ((or_ln340_18_fu_1132_p2[0:0] === 1'b1) ? grp_fu_1137_p3 : select_ln388_6_fu_1144_p3);

assign ytemp_V_fu_964_p1 = reg_1224;

assign zext_ln415_2_fu_383_p1 = and_ln412_2_fu_474_p2;

assign zext_ln415_3_fu_1005_p1 = and_ln412_3_fu_999_p2;

assign zext_ln415_fu_520_p1 = and_ln412_fu_434_p2;

always @ (posedge ap_clk) begin
    sext_ln728_reg_1193[31:0] <= 32'b00000000000000000000000000000000;
end

endmodule //mandel_calc
