// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="calc,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7a100t-csg324-1,HLS_INPUT_CLOCK=6.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=5.250000,HLS_SYN_LAT=5063471,HLS_SYN_TPT=none,HLS_SYN_MEM=2,HLS_SYN_DSP=176,HLS_SYN_FF=21963,HLS_SYN_LUT=24793,HLS_VERSION=2019_1}" *)

module calc (
        ap_clk,
        ap_rst_n,
        m_axi_buf_r_AWVALID,
        m_axi_buf_r_AWREADY,
        m_axi_buf_r_AWADDR,
        m_axi_buf_r_AWID,
        m_axi_buf_r_AWLEN,
        m_axi_buf_r_AWSIZE,
        m_axi_buf_r_AWBURST,
        m_axi_buf_r_AWLOCK,
        m_axi_buf_r_AWCACHE,
        m_axi_buf_r_AWPROT,
        m_axi_buf_r_AWQOS,
        m_axi_buf_r_AWREGION,
        m_axi_buf_r_AWUSER,
        m_axi_buf_r_WVALID,
        m_axi_buf_r_WREADY,
        m_axi_buf_r_WDATA,
        m_axi_buf_r_WSTRB,
        m_axi_buf_r_WLAST,
        m_axi_buf_r_WID,
        m_axi_buf_r_WUSER,
        m_axi_buf_r_ARVALID,
        m_axi_buf_r_ARREADY,
        m_axi_buf_r_ARADDR,
        m_axi_buf_r_ARID,
        m_axi_buf_r_ARLEN,
        m_axi_buf_r_ARSIZE,
        m_axi_buf_r_ARBURST,
        m_axi_buf_r_ARLOCK,
        m_axi_buf_r_ARCACHE,
        m_axi_buf_r_ARPROT,
        m_axi_buf_r_ARQOS,
        m_axi_buf_r_ARREGION,
        m_axi_buf_r_ARUSER,
        m_axi_buf_r_RVALID,
        m_axi_buf_r_RREADY,
        m_axi_buf_r_RDATA,
        m_axi_buf_r_RLAST,
        m_axi_buf_r_RID,
        m_axi_buf_r_RUSER,
        m_axi_buf_r_RRESP,
        m_axi_buf_r_BVALID,
        m_axi_buf_r_BREADY,
        m_axi_buf_r_BRESP,
        m_axi_buf_r_BID,
        m_axi_buf_r_BUSER,
        s_axi_in_parms_AWVALID,
        s_axi_in_parms_AWREADY,
        s_axi_in_parms_AWADDR,
        s_axi_in_parms_WVALID,
        s_axi_in_parms_WREADY,
        s_axi_in_parms_WDATA,
        s_axi_in_parms_WSTRB,
        s_axi_in_parms_ARVALID,
        s_axi_in_parms_ARREADY,
        s_axi_in_parms_ARADDR,
        s_axi_in_parms_RVALID,
        s_axi_in_parms_RREADY,
        s_axi_in_parms_RDATA,
        s_axi_in_parms_RRESP,
        s_axi_in_parms_BVALID,
        s_axi_in_parms_BREADY,
        s_axi_in_parms_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 71'd1;
parameter    ap_ST_fsm_state2 = 71'd2;
parameter    ap_ST_fsm_state3 = 71'd4;
parameter    ap_ST_fsm_state4 = 71'd8;
parameter    ap_ST_fsm_state5 = 71'd16;
parameter    ap_ST_fsm_state6 = 71'd32;
parameter    ap_ST_fsm_state7 = 71'd64;
parameter    ap_ST_fsm_state8 = 71'd128;
parameter    ap_ST_fsm_state9 = 71'd256;
parameter    ap_ST_fsm_state10 = 71'd512;
parameter    ap_ST_fsm_state11 = 71'd1024;
parameter    ap_ST_fsm_state12 = 71'd2048;
parameter    ap_ST_fsm_state13 = 71'd4096;
parameter    ap_ST_fsm_state14 = 71'd8192;
parameter    ap_ST_fsm_state15 = 71'd16384;
parameter    ap_ST_fsm_state16 = 71'd32768;
parameter    ap_ST_fsm_state17 = 71'd65536;
parameter    ap_ST_fsm_state18 = 71'd131072;
parameter    ap_ST_fsm_state19 = 71'd262144;
parameter    ap_ST_fsm_state20 = 71'd524288;
parameter    ap_ST_fsm_state21 = 71'd1048576;
parameter    ap_ST_fsm_state22 = 71'd2097152;
parameter    ap_ST_fsm_state23 = 71'd4194304;
parameter    ap_ST_fsm_state24 = 71'd8388608;
parameter    ap_ST_fsm_state25 = 71'd16777216;
parameter    ap_ST_fsm_state26 = 71'd33554432;
parameter    ap_ST_fsm_state27 = 71'd67108864;
parameter    ap_ST_fsm_state28 = 71'd134217728;
parameter    ap_ST_fsm_state29 = 71'd268435456;
parameter    ap_ST_fsm_state30 = 71'd536870912;
parameter    ap_ST_fsm_state31 = 71'd1073741824;
parameter    ap_ST_fsm_state32 = 71'd2147483648;
parameter    ap_ST_fsm_state33 = 71'd4294967296;
parameter    ap_ST_fsm_state34 = 71'd8589934592;
parameter    ap_ST_fsm_state35 = 71'd17179869184;
parameter    ap_ST_fsm_state36 = 71'd34359738368;
parameter    ap_ST_fsm_state37 = 71'd68719476736;
parameter    ap_ST_fsm_state38 = 71'd137438953472;
parameter    ap_ST_fsm_state39 = 71'd274877906944;
parameter    ap_ST_fsm_state40 = 71'd549755813888;
parameter    ap_ST_fsm_state41 = 71'd1099511627776;
parameter    ap_ST_fsm_state42 = 71'd2199023255552;
parameter    ap_ST_fsm_state43 = 71'd4398046511104;
parameter    ap_ST_fsm_state44 = 71'd8796093022208;
parameter    ap_ST_fsm_state45 = 71'd17592186044416;
parameter    ap_ST_fsm_state46 = 71'd35184372088832;
parameter    ap_ST_fsm_state47 = 71'd70368744177664;
parameter    ap_ST_fsm_state48 = 71'd140737488355328;
parameter    ap_ST_fsm_state49 = 71'd281474976710656;
parameter    ap_ST_fsm_state50 = 71'd562949953421312;
parameter    ap_ST_fsm_state51 = 71'd1125899906842624;
parameter    ap_ST_fsm_state52 = 71'd2251799813685248;
parameter    ap_ST_fsm_state53 = 71'd4503599627370496;
parameter    ap_ST_fsm_state54 = 71'd9007199254740992;
parameter    ap_ST_fsm_state55 = 71'd18014398509481984;
parameter    ap_ST_fsm_state56 = 71'd36028797018963968;
parameter    ap_ST_fsm_state57 = 71'd72057594037927936;
parameter    ap_ST_fsm_state58 = 71'd144115188075855872;
parameter    ap_ST_fsm_state59 = 71'd288230376151711744;
parameter    ap_ST_fsm_state60 = 71'd576460752303423488;
parameter    ap_ST_fsm_state61 = 71'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 71'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 71'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 71'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 71'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 71'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 71'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 71'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 71'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 71'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 71'd1180591620717411303424;
parameter    C_S_AXI_IN_PARMS_DATA_WIDTH = 32;
parameter    C_S_AXI_IN_PARMS_ADDR_WIDTH = 7;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_BUF_R_ID_WIDTH = 1;
parameter    C_M_AXI_BUF_R_ADDR_WIDTH = 32;
parameter    C_M_AXI_BUF_R_DATA_WIDTH = 32;
parameter    C_M_AXI_BUF_R_AWUSER_WIDTH = 1;
parameter    C_M_AXI_BUF_R_ARUSER_WIDTH = 1;
parameter    C_M_AXI_BUF_R_WUSER_WIDTH = 1;
parameter    C_M_AXI_BUF_R_RUSER_WIDTH = 1;
parameter    C_M_AXI_BUF_R_BUSER_WIDTH = 1;
parameter    C_M_AXI_BUF_R_TARGET_ADDR = 0;
parameter    C_M_AXI_BUF_R_USER_VALUE = 0;
parameter    C_M_AXI_BUF_R_PROT_VALUE = 0;
parameter    C_M_AXI_BUF_R_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_IN_PARMS_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_BUF_R_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_buf_r_AWVALID;
input   m_axi_buf_r_AWREADY;
output  [C_M_AXI_BUF_R_ADDR_WIDTH - 1:0] m_axi_buf_r_AWADDR;
output  [C_M_AXI_BUF_R_ID_WIDTH - 1:0] m_axi_buf_r_AWID;
output  [7:0] m_axi_buf_r_AWLEN;
output  [2:0] m_axi_buf_r_AWSIZE;
output  [1:0] m_axi_buf_r_AWBURST;
output  [1:0] m_axi_buf_r_AWLOCK;
output  [3:0] m_axi_buf_r_AWCACHE;
output  [2:0] m_axi_buf_r_AWPROT;
output  [3:0] m_axi_buf_r_AWQOS;
output  [3:0] m_axi_buf_r_AWREGION;
output  [C_M_AXI_BUF_R_AWUSER_WIDTH - 1:0] m_axi_buf_r_AWUSER;
output   m_axi_buf_r_WVALID;
input   m_axi_buf_r_WREADY;
output  [C_M_AXI_BUF_R_DATA_WIDTH - 1:0] m_axi_buf_r_WDATA;
output  [C_M_AXI_BUF_R_WSTRB_WIDTH - 1:0] m_axi_buf_r_WSTRB;
output   m_axi_buf_r_WLAST;
output  [C_M_AXI_BUF_R_ID_WIDTH - 1:0] m_axi_buf_r_WID;
output  [C_M_AXI_BUF_R_WUSER_WIDTH - 1:0] m_axi_buf_r_WUSER;
output   m_axi_buf_r_ARVALID;
input   m_axi_buf_r_ARREADY;
output  [C_M_AXI_BUF_R_ADDR_WIDTH - 1:0] m_axi_buf_r_ARADDR;
output  [C_M_AXI_BUF_R_ID_WIDTH - 1:0] m_axi_buf_r_ARID;
output  [7:0] m_axi_buf_r_ARLEN;
output  [2:0] m_axi_buf_r_ARSIZE;
output  [1:0] m_axi_buf_r_ARBURST;
output  [1:0] m_axi_buf_r_ARLOCK;
output  [3:0] m_axi_buf_r_ARCACHE;
output  [2:0] m_axi_buf_r_ARPROT;
output  [3:0] m_axi_buf_r_ARQOS;
output  [3:0] m_axi_buf_r_ARREGION;
output  [C_M_AXI_BUF_R_ARUSER_WIDTH - 1:0] m_axi_buf_r_ARUSER;
input   m_axi_buf_r_RVALID;
output   m_axi_buf_r_RREADY;
input  [C_M_AXI_BUF_R_DATA_WIDTH - 1:0] m_axi_buf_r_RDATA;
input   m_axi_buf_r_RLAST;
input  [C_M_AXI_BUF_R_ID_WIDTH - 1:0] m_axi_buf_r_RID;
input  [C_M_AXI_BUF_R_RUSER_WIDTH - 1:0] m_axi_buf_r_RUSER;
input  [1:0] m_axi_buf_r_RRESP;
input   m_axi_buf_r_BVALID;
output   m_axi_buf_r_BREADY;
input  [1:0] m_axi_buf_r_BRESP;
input  [C_M_AXI_BUF_R_ID_WIDTH - 1:0] m_axi_buf_r_BID;
input  [C_M_AXI_BUF_R_BUSER_WIDTH - 1:0] m_axi_buf_r_BUSER;
input   s_axi_in_parms_AWVALID;
output   s_axi_in_parms_AWREADY;
input  [C_S_AXI_IN_PARMS_ADDR_WIDTH - 1:0] s_axi_in_parms_AWADDR;
input   s_axi_in_parms_WVALID;
output   s_axi_in_parms_WREADY;
input  [C_S_AXI_IN_PARMS_DATA_WIDTH - 1:0] s_axi_in_parms_WDATA;
input  [C_S_AXI_IN_PARMS_WSTRB_WIDTH - 1:0] s_axi_in_parms_WSTRB;
input   s_axi_in_parms_ARVALID;
output   s_axi_in_parms_ARREADY;
input  [C_S_AXI_IN_PARMS_ADDR_WIDTH - 1:0] s_axi_in_parms_ARADDR;
output   s_axi_in_parms_RVALID;
input   s_axi_in_parms_RREADY;
output  [C_S_AXI_IN_PARMS_DATA_WIDTH - 1:0] s_axi_in_parms_RDATA;
output  [1:0] s_axi_in_parms_RRESP;
output   s_axi_in_parms_BVALID;
input   s_axi_in_parms_BREADY;
output  [1:0] s_axi_in_parms_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [70:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire    setup;
wire   [39:0] X0_V;
wire   [39:0] Y0_V;
wire   [39:0] X1_V;
wire   [11:0] width_V;
reg   [11:0] maxWidth_V_1_data_reg;
reg    maxWidth_V_1_vld_reg;
reg    maxWidth_V_1_vld_in;
reg   [15:0] unroll_1_data_reg;
reg    unroll_1_vld_reg;
reg    unroll_1_vld_in;
wire   [15:0] maxIter;
reg    buf_r_blk_n_AW;
wire    ap_CS_fsm_state58;
reg    buf_r_blk_n_W;
wire    ap_CS_fsm_state59;
wire    ap_CS_fsm_state60;
wire    ap_CS_fsm_state61;
wire    ap_CS_fsm_state62;
wire    ap_CS_fsm_state63;
wire    ap_CS_fsm_state64;
wire    ap_CS_fsm_state65;
wire    ap_CS_fsm_state66;
reg    buf_r_blk_n_B;
wire    ap_CS_fsm_state71;
reg    buf_r_AWVALID;
wire    buf_r_AWREADY;
reg    buf_r_WVALID;
wire    buf_r_WREADY;
reg   [15:0] buf_r_WDATA;
wire    buf_r_ARREADY;
wire    buf_r_RVALID;
wire   [15:0] buf_r_RDATA;
wire    buf_r_RLAST;
wire   [0:0] buf_r_RID;
wire   [0:0] buf_r_RUSER;
wire   [1:0] buf_r_RRESP;
wire    buf_r_BVALID;
reg    buf_r_BREADY;
wire   [1:0] buf_r_BRESP;
wire   [0:0] buf_r_BID;
wire   [0:0] buf_r_BUSER;
reg   [15:0] maxIter_read_reg_1717;
reg   [11:0] width_V_read_reg_1729;
reg   [39:0] Y0_V_read_reg_1737;
reg  signed [39:0] X0_V_read_reg_1742;
reg   [0:0] setup_read_reg_1755;
wire   [51:0] zext_ln1116_1_fu_563_p1;
reg   [51:0] reg_1759;
wire    ap_CS_fsm_state49;
wire   [0:0] icmp_ln79_fu_915_p2;
wire   [51:0] grp_fu_597_p2;
wire    ap_CS_fsm_state54;
wire   [39:0] select_ln340_21_fu_1429_p3;
wire    ap_CS_fsm_state56;
wire   [15:0] grp_mandel_calc_fu_344_ap_return;
wire    grp_mandel_calc_fu_320_ap_ready;
wire    grp_mandel_calc_fu_320_ap_done;
wire    grp_mandel_calc_fu_328_ap_ready;
wire    grp_mandel_calc_fu_328_ap_done;
wire    grp_mandel_calc_fu_336_ap_ready;
wire    grp_mandel_calc_fu_336_ap_done;
wire    grp_mandel_calc_fu_344_ap_ready;
wire    grp_mandel_calc_fu_344_ap_done;
wire    grp_mandel_calc_fu_352_ap_ready;
wire    grp_mandel_calc_fu_352_ap_done;
wire    grp_mandel_calc_fu_360_ap_ready;
wire    grp_mandel_calc_fu_360_ap_done;
wire    grp_mandel_calc_fu_368_ap_ready;
wire    grp_mandel_calc_fu_368_ap_done;
wire    grp_mandel_calc_fu_376_ap_ready;
wire    grp_mandel_calc_fu_376_ap_done;
reg    ap_block_state58_on_subcall_done;
wire   [40:0] zext_ln1148_fu_398_p1;
wire    ap_CS_fsm_state2;
wire   [39:0] delta_V_fu_414_p1;
wire    ap_CS_fsm_state46;
wire   [39:0] grp_fu_662_p2;
wire    ap_CS_fsm_state55;
wire   [11:0] sub_ln78_fu_678_p2;
reg   [11:0] sub_ln78_reg_1764;
wire    ap_CS_fsm_state47;
reg   [0:0] p_Result_s_reg_1769;
reg   [0:0] p_Result_21_reg_1782;
wire  signed [40:0] rhs_V_4_fu_384_p1;
reg  signed [40:0] rhs_V_4_reg_1794;
wire  signed [51:0] sext_ln1118_fu_499_p1;
reg  signed [51:0] sext_ln1118_reg_1806;
wire   [23:0] zext_ln703_fu_507_p1;
reg   [23:0] zext_ln703_reg_1811;
wire  signed [51:0] sext_ln78_fu_510_p1;
reg  signed [51:0] sext_ln78_reg_1816;
wire   [31:0] zext_ln78_fu_513_p1;
wire    ap_CS_fsm_state48;
reg   [1:0] maxWidth_V_1_state;
reg   [1:0] unroll_1_state;
reg    ap_block_state48;
wire   [11:0] line_V_fu_528_p2;
reg   [11:0] line_V_reg_1836;
wire   [51:0] grp_fu_789_p2;
reg   [23:0] index_reg_1841;
wire   [0:0] icmp_ln78_fu_869_p2;
wire   [39:0] add_ln703_3_fu_939_p2;
reg   [51:0] reg_1849;
wire   [51:0] zext_ln1116_3_fu_593_p1;
wire   [51:0] grp_fu_582_p2;
wire   [39:0] grp_fu_1275_p3;
wire   [15:0] grp_mandel_calc_fu_336_ap_return;
reg   [31:0] buf_addr_reg_1854;
wire   [51:0] grp_fu_567_p2;
reg   [51:0] reg_1867;
wire   [40:0] grp_fu_392_p2;
wire   [39:0] grp_fu_1359_p3;
wire   [15:0] grp_mandel_calc_fu_320_ap_return;
wire   [51:0] zext_ln1116_2_fu_578_p1;
reg   [11:0] add_ln700_reg_1907;
reg   [39:0] reg_1912;
wire   [51:0] grp_fu_612_p2;
reg   [51:0] reg_1917;
wire   [39:0] add_ln703_2_fu_893_p2;
wire   [39:0] select_ln340_19_fu_1415_p3;
wire   [15:0] grp_mandel_calc_fu_328_ap_return;
wire   [51:0] zext_ln1116_4_fu_608_p1;
wire   [39:0] trunc_ln1192_2_fu_765_p1;
reg   [39:0] trunc_ln1192_2_reg_1942;
wire   [51:0] grp_fu_627_p2;
reg   [51:0] reg_1947;
wire   [39:0] add_ln703_4_fu_985_p2;
wire   [39:0] select_ln340_22_fu_1499_p3;
wire   [15:0] grp_mandel_calc_fu_352_ap_return;
wire   [51:0] zext_ln1116_5_fu_623_p1;
wire   [39:0] trunc_ln1192_3_fu_769_p1;
reg   [39:0] trunc_ln1192_3_reg_1952;
wire   [51:0] grp_fu_542_p2;
reg   [51:0] reg_1957;
wire   [39:0] add_ln703_5_fu_1031_p2;
wire   [39:0] select_ln340_23_fu_1569_p3;
wire   [15:0] grp_mandel_calc_fu_360_ap_return;
wire   [51:0] zext_ln1116_fu_538_p1;
wire   [39:0] trunc_ln1192_4_fu_773_p1;
reg   [39:0] trunc_ln1192_4_reg_1962;
wire   [51:0] grp_fu_642_p2;
reg   [51:0] reg_1967;
wire   [39:0] add_ln703_6_fu_1077_p2;
wire   [39:0] select_ln340_24_fu_1639_p3;
wire   [15:0] grp_mandel_calc_fu_368_ap_return;
wire   [51:0] zext_ln1116_6_fu_638_p1;
wire   [39:0] trunc_ln1192_5_fu_777_p1;
reg   [39:0] trunc_ln1192_5_reg_1972;
wire   [39:0] trunc_ln1192_fu_757_p1;
reg   [39:0] reg_1977;
wire   [39:0] select_ln340_25_fu_1709_p3;
wire   [15:0] grp_mandel_calc_fu_376_ap_return;
wire   [39:0] add_ln703_7_fu_1123_p2;
wire   [39:0] trunc_ln1192_6_fu_781_p1;
reg   [39:0] trunc_ln1192_6_reg_1982;
wire   [39:0] add_ln703_1_fu_847_p2;
reg   [51:0] reg_1987;
wire   [51:0] grp_fu_657_p2;
wire   [51:0] zext_ln1116_7_fu_653_p1;
wire   [39:0] trunc_ln1192_7_fu_785_p1;
reg   [39:0] trunc_ln1192_7_reg_1992;
reg   [0:0] tmp_48_reg_1997;
reg   [0:0] tmp_49_reg_2009;
wire   [0:0] icmp_ln785_fu_517_p2;
reg   [0:0] icmp_ln785_reg_2015;
wire   [0:0] icmp_ln786_fu_533_p2;
reg   [0:0] icmp_ln786_reg_2020;
reg   [0:0] tmp_50_reg_2025;
reg   [0:0] tmp_51_reg_2037;
wire   [0:0] icmp_ln785_1_fu_823_p2;
reg   [0:0] icmp_ln785_1_reg_2043;
wire   [0:0] icmp_ln786_1_fu_875_p2;
reg   [0:0] icmp_ln786_1_reg_2048;
reg   [0:0] tmp_52_reg_2053;
reg   [0:0] tmp_53_reg_2065;
wire   [0:0] icmp_ln785_2_fu_829_p2;
reg   [0:0] icmp_ln785_2_reg_2071;
wire   [0:0] icmp_ln786_2_fu_921_p2;
reg   [0:0] icmp_ln786_2_reg_2076;
reg   [0:0] tmp_54_reg_2081;
reg   [0:0] tmp_55_reg_2093;
wire   [0:0] icmp_ln785_3_fu_961_p2;
reg   [0:0] icmp_ln785_3_reg_2099;
wire   [0:0] icmp_ln786_3_fu_967_p2;
reg   [0:0] icmp_ln786_3_reg_2104;
reg   [0:0] tmp_56_reg_2109;
reg   [0:0] tmp_57_reg_2121;
wire   [0:0] icmp_ln785_4_fu_1007_p2;
reg   [0:0] icmp_ln785_4_reg_2127;
wire   [0:0] icmp_ln786_4_fu_1013_p2;
reg   [0:0] icmp_ln786_4_reg_2132;
reg   [0:0] tmp_58_reg_2137;
reg   [0:0] tmp_59_reg_2149;
wire   [0:0] icmp_ln785_5_fu_1053_p2;
reg   [0:0] icmp_ln785_5_reg_2155;
wire   [0:0] icmp_ln786_5_fu_1059_p2;
reg   [0:0] icmp_ln786_5_reg_2160;
reg   [0:0] tmp_60_reg_2165;
reg   [0:0] tmp_61_reg_2177;
wire   [0:0] icmp_ln785_6_fu_1099_p2;
reg   [0:0] icmp_ln785_6_reg_2183;
wire   [0:0] icmp_ln786_6_fu_1105_p2;
reg   [0:0] icmp_ln786_6_reg_2188;
reg   [0:0] tmp_62_reg_2193;
wire   [39:0] trunc_ln1192_1_fu_761_p1;
reg   [39:0] trunc_ln1192_1_reg_2199;
reg   [0:0] tmp_63_reg_2205;
wire   [0:0] icmp_ln785_7_fu_1145_p2;
reg   [0:0] icmp_ln785_7_reg_2211;
wire   [0:0] icmp_ln786_7_fu_1151_p2;
reg   [0:0] icmp_ln786_7_reg_2216;
wire    grp_mandel_calc_fu_320_ap_start;
wire    grp_mandel_calc_fu_320_ap_idle;
wire   [39:0] grp_mandel_calc_fu_320_x_in_V;
wire    grp_mandel_calc_fu_328_ap_start;
wire    grp_mandel_calc_fu_328_ap_idle;
wire   [39:0] grp_mandel_calc_fu_328_x_in_V;
wire    grp_mandel_calc_fu_336_ap_start;
wire    grp_mandel_calc_fu_336_ap_idle;
wire   [39:0] grp_mandel_calc_fu_336_x_in_V;
wire    grp_mandel_calc_fu_344_ap_start;
wire    grp_mandel_calc_fu_344_ap_idle;
wire   [39:0] grp_mandel_calc_fu_344_x_in_V;
wire    grp_mandel_calc_fu_352_ap_start;
wire    grp_mandel_calc_fu_352_ap_idle;
wire   [39:0] grp_mandel_calc_fu_352_x_in_V;
wire    grp_mandel_calc_fu_360_ap_start;
wire    grp_mandel_calc_fu_360_ap_idle;
wire   [39:0] grp_mandel_calc_fu_360_x_in_V;
wire    grp_mandel_calc_fu_368_ap_start;
wire    grp_mandel_calc_fu_368_ap_idle;
wire   [39:0] grp_mandel_calc_fu_368_x_in_V;
wire    grp_mandel_calc_fu_376_ap_start;
wire    grp_mandel_calc_fu_376_ap_idle;
reg   [39:0] p_Val2_30_reg_268;
reg   [11:0] t_V_1_reg_278;
reg   [23:0] index_0_reg_289;
reg   [11:0] tmp_V_1_0_reg_300;
reg   [31:0] index_1_0_reg_311;
reg    grp_mandel_calc_fu_320_ap_start_reg;
wire    ap_CS_fsm_state57;
reg    grp_mandel_calc_fu_328_ap_start_reg;
reg    grp_mandel_calc_fu_336_ap_start_reg;
reg    grp_mandel_calc_fu_344_ap_start_reg;
reg    grp_mandel_calc_fu_352_ap_start_reg;
reg    grp_mandel_calc_fu_360_ap_start_reg;
reg    grp_mandel_calc_fu_368_ap_start_reg;
reg    grp_mandel_calc_fu_376_ap_start_reg;
wire   [63:0] zext_ln85_fu_547_p1;
wire  signed [39:0] rhs_V_4_fu_384_p0;
wire  signed [39:0] rhs_V_fu_388_p0;
reg  signed [40:0] grp_fu_392_p0;
wire  signed [40:0] lhs_V_3_fu_674_p1;
wire  signed [40:0] lhs_V_fu_503_p1;
reg  signed [40:0] grp_fu_392_p1;
wire  signed [40:0] rhs_V_fu_388_p1;
wire   [40:0] grp_fu_401_p0;
wire   [12:0] grp_fu_401_p1;
wire   [40:0] grp_fu_401_p2;
wire   [0:0] xor_ln340_fu_440_p2;
wire   [0:0] grp_fu_1182_p2;
wire   [39:0] grp_fu_457_p2;
wire   [0:0] or_ln340_26_fu_1397_p2;
wire   [39:0] select_ln340_11_fu_464_p2;
wire   [9:0] lshr_ln_fu_472_p4;
wire  signed [39:0] sext_ln1118_fu_499_p0;
wire   [11:0] tmp_8_fu_813_p4;
wire   [11:0] grp_fu_542_p0;
wire  signed [39:0] grp_fu_542_p1;
wire   [11:0] or_ln700_fu_557_p2;
wire   [11:0] grp_fu_567_p0;
wire  signed [39:0] grp_fu_567_p1;
wire   [11:0] or_ln700_1_fu_572_p2;
wire   [11:0] grp_fu_582_p0;
wire  signed [39:0] grp_fu_582_p1;
wire   [11:0] or_ln700_2_fu_587_p2;
wire   [11:0] grp_fu_597_p0;
wire  signed [39:0] grp_fu_597_p1;
wire   [11:0] or_ln700_3_fu_602_p2;
wire   [11:0] grp_fu_612_p0;
wire  signed [39:0] grp_fu_612_p1;
wire   [11:0] or_ln700_4_fu_617_p2;
wire   [11:0] grp_fu_627_p0;
wire  signed [39:0] grp_fu_627_p1;
wire   [11:0] or_ln700_5_fu_632_p2;
wire   [11:0] grp_fu_642_p0;
wire  signed [39:0] grp_fu_642_p1;
wire   [11:0] or_ln700_6_fu_647_p2;
wire   [11:0] grp_fu_657_p0;
wire  signed [39:0] grp_fu_657_p1;
reg  signed [39:0] grp_fu_662_p0;
reg   [39:0] grp_fu_662_p1;
wire   [11:0] and_ln_fu_485_p3;
wire   [11:0] zext_ln78_1_fu_481_p1;
wire   [0:0] p_Result_23_fu_695_p3;
wire   [0:0] p_Result_22_fu_683_p3;
reg   [0:0] grp_fu_733_p0;
wire   [0:0] or_ln340_20_fu_1339_p2;
wire   [0:0] xor_ln340_2_fu_436_p2;
wire   [39:0] grp_fu_733_p2;
wire   [0:0] grp_fu_1166_p2;
reg   [39:0] grp_fu_741_p2;
wire   [39:0] y_V_fu_691_p1;
reg  signed [51:0] grp_fu_789_p0;
reg   [51:0] grp_fu_789_p1;
wire   [51:0] add_ln1192_fu_835_p2;
wire   [11:0] tmp_9_fu_859_p4;
wire   [11:0] tmp_s_fu_905_p4;
wire   [51:0] add_ln1192_2_fu_881_p2;
wire   [51:0] add_ln1192_3_fu_927_p2;
wire   [11:0] tmp_10_fu_951_p4;
wire   [51:0] add_ln1192_4_fu_973_p2;
wire   [11:0] tmp_11_fu_997_p4;
wire   [51:0] add_ln1192_5_fu_1019_p2;
wire   [11:0] tmp_12_fu_1043_p4;
wire   [51:0] add_ln1192_6_fu_1065_p2;
wire   [11:0] tmp_13_fu_1089_p4;
wire   [51:0] add_ln1192_7_fu_1111_p2;
wire   [11:0] tmp_14_fu_1135_p4;
reg   [0:0] grp_fu_1166_p0;
wire   [0:0] or_ln786_2_fu_1317_p2;
reg   [0:0] grp_fu_1166_p1;
wire   [0:0] xor_ln786_7_fu_703_p2;
wire   [0:0] xor_ln786_8_fu_1172_p2;
reg   [0:0] grp_fu_1182_p0;
wire   [0:0] or_ln786_fu_1177_p2;
reg   [0:0] grp_fu_1182_p1;
wire   [0:0] xor_ln786_fu_426_p2;
wire   [0:0] and_ln785_fu_1236_p2;
wire   [0:0] xor_ln340_5_fu_1193_p2;
reg   [0:0] grp_fu_1199_p0;
wire   [0:0] and_ln785_2_fu_1306_p2;
wire   [0:0] grp_fu_1333_p2;
reg   [0:0] grp_fu_1219_p0;
wire   [0:0] or_ln340_24_fu_1327_p2;
wire   [0:0] xor_ln340_3_fu_715_p2;
reg   [39:0] grp_fu_1219_p2;
wire   [0:0] or_ln785_fu_1157_p2;
wire   [0:0] xor_ln785_fu_1161_p2;
wire   [0:0] xor_ln786_9_fu_1242_p2;
wire   [0:0] or_ln786_1_fu_1247_p2;
wire   [0:0] and_ln786_12_fu_1252_p2;
wire   [0:0] and_ln785_1_fu_1322_p2;
wire   [0:0] xor_ln340_6_fu_1263_p2;
wire   [0:0] grp_fu_1199_p2;
wire   [39:0] grp_fu_1219_p3;
wire   [39:0] grp_fu_741_p3;
wire   [0:0] or_ln785_7_fu_1297_p2;
wire   [0:0] xor_ln785_12_fu_1301_p2;
wire   [0:0] xor_ln786_10_fu_1312_p2;
wire   [0:0] or_ln785_6_fu_1227_p2;
wire   [0:0] xor_ln785_11_fu_1231_p2;
reg   [0:0] grp_fu_1333_p0;
wire   [39:0] select_ln388_9_fu_1345_p2;
wire   [0:0] or_ln340_22_fu_1257_p2;
wire   [39:0] select_ln340_9_fu_1352_p2;
reg   [0:0] grp_fu_1359_p0;
wire   [0:0] or_ln340_21_fu_1187_p2;
wire   [0:0] or_ln340_fu_445_p2;
wire   [39:0] grp_fu_733_p3;
wire   [39:0] grp_fu_457_p3;
wire   [0:0] or_ln785_8_fu_1367_p2;
wire   [0:0] xor_ln785_13_fu_1371_p2;
wire   [0:0] xor_ln786_11_fu_1382_p2;
wire   [0:0] or_ln786_3_fu_1387_p2;
wire   [0:0] and_ln786_14_fu_1392_p2;
wire   [0:0] and_ln785_3_fu_1376_p2;
wire   [0:0] xor_ln340_8_fu_1403_p2;
wire   [0:0] or_ln340_23_fu_1269_p2;
wire   [39:0] select_ln340_9_fu_1352_p3;
wire   [39:0] select_ln388_9_fu_1345_p3;
wire   [39:0] select_ln388_11_fu_1422_p2;
wire   [0:0] or_ln340_27_fu_1409_p2;
wire   [39:0] select_ln340_11_fu_464_p3;
wire   [39:0] select_ln388_11_fu_1422_p3;
wire   [0:0] or_ln785_9_fu_1437_p2;
wire   [0:0] xor_ln785_14_fu_1441_p2;
wire   [0:0] xor_ln786_12_fu_1452_p2;
wire   [0:0] or_ln786_4_fu_1457_p2;
wire   [0:0] and_ln786_15_fu_1462_p2;
wire   [0:0] and_ln785_4_fu_1446_p2;
wire   [0:0] xor_ln340_9_fu_1473_p2;
wire   [0:0] or_ln340_28_fu_1467_p2;
wire   [39:0] select_ln340_12_fu_1485_p2;
wire   [39:0] select_ln388_12_fu_1492_p2;
wire   [0:0] or_ln340_29_fu_1479_p2;
wire   [39:0] select_ln340_12_fu_1485_p3;
wire   [39:0] select_ln388_12_fu_1492_p3;
wire   [0:0] or_ln785_10_fu_1507_p2;
wire   [0:0] xor_ln785_15_fu_1511_p2;
wire   [0:0] xor_ln786_13_fu_1522_p2;
wire   [0:0] or_ln786_5_fu_1527_p2;
wire   [0:0] and_ln786_16_fu_1532_p2;
wire   [0:0] and_ln785_5_fu_1516_p2;
wire   [0:0] xor_ln340_10_fu_1543_p2;
wire   [0:0] or_ln340_30_fu_1537_p2;
wire   [39:0] select_ln340_13_fu_1555_p2;
wire   [39:0] select_ln388_13_fu_1562_p2;
wire   [0:0] or_ln340_31_fu_1549_p2;
wire   [39:0] select_ln340_13_fu_1555_p3;
wire   [39:0] select_ln388_13_fu_1562_p3;
wire   [0:0] or_ln785_11_fu_1577_p2;
wire   [0:0] xor_ln785_16_fu_1581_p2;
wire   [0:0] xor_ln786_14_fu_1592_p2;
wire   [0:0] or_ln786_6_fu_1597_p2;
wire   [0:0] and_ln786_17_fu_1602_p2;
wire   [0:0] and_ln785_6_fu_1586_p2;
wire   [0:0] xor_ln340_11_fu_1613_p2;
wire   [0:0] or_ln340_32_fu_1607_p2;
wire   [39:0] select_ln340_14_fu_1625_p2;
wire   [39:0] select_ln388_14_fu_1632_p2;
wire   [0:0] or_ln340_33_fu_1619_p2;
wire   [39:0] select_ln340_14_fu_1625_p3;
wire   [39:0] select_ln388_14_fu_1632_p3;
wire   [0:0] or_ln785_12_fu_1647_p2;
wire   [0:0] xor_ln785_17_fu_1651_p2;
wire   [0:0] xor_ln786_15_fu_1662_p2;
wire   [0:0] or_ln786_7_fu_1667_p2;
wire   [0:0] and_ln786_18_fu_1672_p2;
wire   [0:0] and_ln785_7_fu_1656_p2;
wire   [0:0] xor_ln340_12_fu_1683_p2;
wire   [0:0] or_ln340_34_fu_1677_p2;
wire   [0:0] or_ln340_35_fu_1689_p2;
wire   [39:0] select_ln340_15_fu_1695_p3;
wire   [39:0] select_ln388_15_fu_1702_p3;
reg    grp_fu_401_ap_start;
wire    grp_fu_401_ap_done;
reg   [70:0] ap_NS_fsm;
wire   [40:0] grp_fu_401_p10;
wire   [51:0] grp_fu_542_p00;
wire   [51:0] grp_fu_567_p00;
wire   [51:0] grp_fu_582_p00;
wire   [51:0] grp_fu_597_p00;
wire   [51:0] grp_fu_612_p00;
wire   [51:0] grp_fu_627_p00;
wire   [51:0] grp_fu_642_p00;
wire   [51:0] grp_fu_657_p00;

// power-on initialization
initial begin
#0 ap_CS_fsm = 71'd1;
#0 maxWidth_V_1_data_reg = 12'd0;
#0 maxWidth_V_1_vld_reg = 1'b0;
#0 unroll_1_data_reg = 16'd0;
#0 unroll_1_vld_reg = 1'b0;
#0 grp_mandel_calc_fu_320_ap_start_reg = 1'b0;
#0 grp_mandel_calc_fu_328_ap_start_reg = 1'b0;
#0 grp_mandel_calc_fu_336_ap_start_reg = 1'b0;
#0 grp_mandel_calc_fu_344_ap_start_reg = 1'b0;
#0 grp_mandel_calc_fu_352_ap_start_reg = 1'b0;
#0 grp_mandel_calc_fu_360_ap_start_reg = 1'b0;
#0 grp_mandel_calc_fu_368_ap_start_reg = 1'b0;
#0 grp_mandel_calc_fu_376_ap_start_reg = 1'b0;
end

calc_in_parms_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_IN_PARMS_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_IN_PARMS_DATA_WIDTH ))
calc_in_parms_s_axi_U(
    .AWVALID(s_axi_in_parms_AWVALID),
    .AWREADY(s_axi_in_parms_AWREADY),
    .AWADDR(s_axi_in_parms_AWADDR),
    .WVALID(s_axi_in_parms_WVALID),
    .WREADY(s_axi_in_parms_WREADY),
    .WDATA(s_axi_in_parms_WDATA),
    .WSTRB(s_axi_in_parms_WSTRB),
    .ARVALID(s_axi_in_parms_ARVALID),
    .ARREADY(s_axi_in_parms_ARREADY),
    .ARADDR(s_axi_in_parms_ARADDR),
    .RVALID(s_axi_in_parms_RVALID),
    .RREADY(s_axi_in_parms_RREADY),
    .RDATA(s_axi_in_parms_RDATA),
    .RRESP(s_axi_in_parms_RRESP),
    .BVALID(s_axi_in_parms_BVALID),
    .BREADY(s_axi_in_parms_BREADY),
    .BRESP(s_axi_in_parms_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .setup(setup),
    .X0_V(X0_V),
    .Y0_V(Y0_V),
    .X1_V(X1_V),
    .width_V(width_V),
    .maxWidth_V(maxWidth_V_1_data_reg),
    .maxWidth_V_ap_vld(maxWidth_V_1_vld_reg),
    .unroll(unroll_1_data_reg),
    .unroll_ap_vld(unroll_1_vld_reg),
    .maxIter(maxIter)
);

calc_buf_r_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 16 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_BUF_R_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_BUF_R_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_BUF_R_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_BUF_R_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_BUF_R_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_BUF_R_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_BUF_R_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_BUF_R_BUSER_WIDTH ),
    .C_TARGET_ADDR( C_M_AXI_BUF_R_TARGET_ADDR ),
    .C_USER_VALUE( C_M_AXI_BUF_R_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_BUF_R_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_BUF_R_CACHE_VALUE ))
calc_buf_r_m_axi_U(
    .AWVALID(m_axi_buf_r_AWVALID),
    .AWREADY(m_axi_buf_r_AWREADY),
    .AWADDR(m_axi_buf_r_AWADDR),
    .AWID(m_axi_buf_r_AWID),
    .AWLEN(m_axi_buf_r_AWLEN),
    .AWSIZE(m_axi_buf_r_AWSIZE),
    .AWBURST(m_axi_buf_r_AWBURST),
    .AWLOCK(m_axi_buf_r_AWLOCK),
    .AWCACHE(m_axi_buf_r_AWCACHE),
    .AWPROT(m_axi_buf_r_AWPROT),
    .AWQOS(m_axi_buf_r_AWQOS),
    .AWREGION(m_axi_buf_r_AWREGION),
    .AWUSER(m_axi_buf_r_AWUSER),
    .WVALID(m_axi_buf_r_WVALID),
    .WREADY(m_axi_buf_r_WREADY),
    .WDATA(m_axi_buf_r_WDATA),
    .WSTRB(m_axi_buf_r_WSTRB),
    .WLAST(m_axi_buf_r_WLAST),
    .WID(m_axi_buf_r_WID),
    .WUSER(m_axi_buf_r_WUSER),
    .ARVALID(m_axi_buf_r_ARVALID),
    .ARREADY(m_axi_buf_r_ARREADY),
    .ARADDR(m_axi_buf_r_ARADDR),
    .ARID(m_axi_buf_r_ARID),
    .ARLEN(m_axi_buf_r_ARLEN),
    .ARSIZE(m_axi_buf_r_ARSIZE),
    .ARBURST(m_axi_buf_r_ARBURST),
    .ARLOCK(m_axi_buf_r_ARLOCK),
    .ARCACHE(m_axi_buf_r_ARCACHE),
    .ARPROT(m_axi_buf_r_ARPROT),
    .ARQOS(m_axi_buf_r_ARQOS),
    .ARREGION(m_axi_buf_r_ARREGION),
    .ARUSER(m_axi_buf_r_ARUSER),
    .RVALID(m_axi_buf_r_RVALID),
    .RREADY(m_axi_buf_r_RREADY),
    .RDATA(m_axi_buf_r_RDATA),
    .RLAST(m_axi_buf_r_RLAST),
    .RID(m_axi_buf_r_RID),
    .RUSER(m_axi_buf_r_RUSER),
    .RRESP(m_axi_buf_r_RRESP),
    .BVALID(m_axi_buf_r_BVALID),
    .BREADY(m_axi_buf_r_BREADY),
    .BRESP(m_axi_buf_r_BRESP),
    .BID(m_axi_buf_r_BID),
    .BUSER(m_axi_buf_r_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(buf_r_ARREADY),
    .I_ARADDR(32'd0),
    .I_ARID(1'd0),
    .I_ARLEN(32'd0),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(buf_r_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(buf_r_RDATA),
    .I_RID(buf_r_RID),
    .I_RUSER(buf_r_RUSER),
    .I_RRESP(buf_r_RRESP),
    .I_RLAST(buf_r_RLAST),
    .I_AWVALID(buf_r_AWVALID),
    .I_AWREADY(buf_r_AWREADY),
    .I_AWADDR(buf_addr_reg_1854),
    .I_AWID(1'd0),
    .I_AWLEN(32'd8),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(buf_r_WVALID),
    .I_WREADY(buf_r_WREADY),
    .I_WDATA(buf_r_WDATA),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(2'd3),
    .I_BVALID(buf_r_BVALID),
    .I_BREADY(buf_r_BREADY),
    .I_BRESP(buf_r_BRESP),
    .I_BID(buf_r_BID),
    .I_BUSER(buf_r_BUSER)
);

mandel_calc grp_mandel_calc_fu_320(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_mandel_calc_fu_320_ap_start),
    .ap_done(grp_mandel_calc_fu_320_ap_done),
    .ap_idle(grp_mandel_calc_fu_320_ap_idle),
    .ap_ready(grp_mandel_calc_fu_320_ap_ready),
    .x_in_V(grp_mandel_calc_fu_320_x_in_V),
    .y_in_V(p_Val2_30_reg_268),
    .maxIter(maxIter_read_reg_1717),
    .ap_return(grp_mandel_calc_fu_320_ap_return)
);

mandel_calc grp_mandel_calc_fu_328(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_mandel_calc_fu_328_ap_start),
    .ap_done(grp_mandel_calc_fu_328_ap_done),
    .ap_idle(grp_mandel_calc_fu_328_ap_idle),
    .ap_ready(grp_mandel_calc_fu_328_ap_ready),
    .x_in_V(grp_mandel_calc_fu_328_x_in_V),
    .y_in_V(p_Val2_30_reg_268),
    .maxIter(maxIter_read_reg_1717),
    .ap_return(grp_mandel_calc_fu_328_ap_return)
);

mandel_calc grp_mandel_calc_fu_336(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_mandel_calc_fu_336_ap_start),
    .ap_done(grp_mandel_calc_fu_336_ap_done),
    .ap_idle(grp_mandel_calc_fu_336_ap_idle),
    .ap_ready(grp_mandel_calc_fu_336_ap_ready),
    .x_in_V(grp_mandel_calc_fu_336_x_in_V),
    .y_in_V(p_Val2_30_reg_268),
    .maxIter(maxIter_read_reg_1717),
    .ap_return(grp_mandel_calc_fu_336_ap_return)
);

mandel_calc grp_mandel_calc_fu_344(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_mandel_calc_fu_344_ap_start),
    .ap_done(grp_mandel_calc_fu_344_ap_done),
    .ap_idle(grp_mandel_calc_fu_344_ap_idle),
    .ap_ready(grp_mandel_calc_fu_344_ap_ready),
    .x_in_V(grp_mandel_calc_fu_344_x_in_V),
    .y_in_V(p_Val2_30_reg_268),
    .maxIter(maxIter_read_reg_1717),
    .ap_return(grp_mandel_calc_fu_344_ap_return)
);

mandel_calc grp_mandel_calc_fu_352(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_mandel_calc_fu_352_ap_start),
    .ap_done(grp_mandel_calc_fu_352_ap_done),
    .ap_idle(grp_mandel_calc_fu_352_ap_idle),
    .ap_ready(grp_mandel_calc_fu_352_ap_ready),
    .x_in_V(grp_mandel_calc_fu_352_x_in_V),
    .y_in_V(p_Val2_30_reg_268),
    .maxIter(maxIter_read_reg_1717),
    .ap_return(grp_mandel_calc_fu_352_ap_return)
);

mandel_calc grp_mandel_calc_fu_360(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_mandel_calc_fu_360_ap_start),
    .ap_done(grp_mandel_calc_fu_360_ap_done),
    .ap_idle(grp_mandel_calc_fu_360_ap_idle),
    .ap_ready(grp_mandel_calc_fu_360_ap_ready),
    .x_in_V(grp_mandel_calc_fu_360_x_in_V),
    .y_in_V(p_Val2_30_reg_268),
    .maxIter(maxIter_read_reg_1717),
    .ap_return(grp_mandel_calc_fu_360_ap_return)
);

mandel_calc grp_mandel_calc_fu_368(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_mandel_calc_fu_368_ap_start),
    .ap_done(grp_mandel_calc_fu_368_ap_done),
    .ap_idle(grp_mandel_calc_fu_368_ap_idle),
    .ap_ready(grp_mandel_calc_fu_368_ap_ready),
    .x_in_V(grp_mandel_calc_fu_368_x_in_V),
    .y_in_V(p_Val2_30_reg_268),
    .maxIter(maxIter_read_reg_1717),
    .ap_return(grp_mandel_calc_fu_368_ap_return)
);

mandel_calc grp_mandel_calc_fu_376(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_mandel_calc_fu_376_ap_start),
    .ap_done(grp_mandel_calc_fu_376_ap_done),
    .ap_idle(grp_mandel_calc_fu_376_ap_idle),
    .ap_ready(grp_mandel_calc_fu_376_ap_ready),
    .x_in_V(reg_1977),
    .y_in_V(p_Val2_30_reg_268),
    .maxIter(maxIter_read_reg_1717),
    .ap_return(grp_mandel_calc_fu_376_ap_return)
);

calc_sdiv_41ns_13eOg #(
    .ID( 1 ),
    .NUM_STAGE( 45 ),
    .din0_WIDTH( 41 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 41 ))
calc_sdiv_41ns_13eOg_U13(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .start(grp_fu_401_ap_start),
    .done(grp_fu_401_ap_done),
    .din0(grp_fu_401_p0),
    .din1(grp_fu_401_p1),
    .ce(1'b1),
    .dout(grp_fu_401_p2)
);

calc_mul_12ns_40sfYi #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 40 ),
    .dout_WIDTH( 52 ))
calc_mul_12ns_40sfYi_U14(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_542_p0),
    .din1(grp_fu_542_p1),
    .ce(1'b1),
    .dout(grp_fu_542_p2)
);

calc_mul_12ns_40sfYi #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 40 ),
    .dout_WIDTH( 52 ))
calc_mul_12ns_40sfYi_U15(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_567_p0),
    .din1(grp_fu_567_p1),
    .ce(1'b1),
    .dout(grp_fu_567_p2)
);

calc_mul_12ns_40sfYi #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 40 ),
    .dout_WIDTH( 52 ))
calc_mul_12ns_40sfYi_U16(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_582_p0),
    .din1(grp_fu_582_p1),
    .ce(1'b1),
    .dout(grp_fu_582_p2)
);

calc_mul_12ns_40sfYi #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 40 ),
    .dout_WIDTH( 52 ))
calc_mul_12ns_40sfYi_U17(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_597_p0),
    .din1(grp_fu_597_p1),
    .ce(1'b1),
    .dout(grp_fu_597_p2)
);

calc_mul_12ns_40sfYi #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 40 ),
    .dout_WIDTH( 52 ))
calc_mul_12ns_40sfYi_U18(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_612_p0),
    .din1(grp_fu_612_p1),
    .ce(1'b1),
    .dout(grp_fu_612_p2)
);

calc_mul_12ns_40sfYi #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 40 ),
    .dout_WIDTH( 52 ))
calc_mul_12ns_40sfYi_U19(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_627_p0),
    .din1(grp_fu_627_p1),
    .ce(1'b1),
    .dout(grp_fu_627_p2)
);

calc_mul_12ns_40sfYi #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 40 ),
    .dout_WIDTH( 52 ))
calc_mul_12ns_40sfYi_U20(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_642_p0),
    .din1(grp_fu_642_p1),
    .ce(1'b1),
    .dout(grp_fu_642_p2)
);

calc_mul_12ns_40sfYi #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 40 ),
    .dout_WIDTH( 52 ))
calc_mul_12ns_40sfYi_U21(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_657_p0),
    .din1(grp_fu_657_p1),
    .ce(1'b1),
    .dout(grp_fu_657_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_mandel_calc_fu_320_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state57)) begin
            grp_mandel_calc_fu_320_ap_start_reg <= 1'b1;
        end else if ((grp_mandel_calc_fu_320_ap_ready == 1'b1)) begin
            grp_mandel_calc_fu_320_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_mandel_calc_fu_328_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state57)) begin
            grp_mandel_calc_fu_328_ap_start_reg <= 1'b1;
        end else if ((grp_mandel_calc_fu_328_ap_ready == 1'b1)) begin
            grp_mandel_calc_fu_328_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_mandel_calc_fu_336_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state57)) begin
            grp_mandel_calc_fu_336_ap_start_reg <= 1'b1;
        end else if ((grp_mandel_calc_fu_336_ap_ready == 1'b1)) begin
            grp_mandel_calc_fu_336_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_mandel_calc_fu_344_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state57)) begin
            grp_mandel_calc_fu_344_ap_start_reg <= 1'b1;
        end else if ((grp_mandel_calc_fu_344_ap_ready == 1'b1)) begin
            grp_mandel_calc_fu_344_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_mandel_calc_fu_352_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state57)) begin
            grp_mandel_calc_fu_352_ap_start_reg <= 1'b1;
        end else if ((grp_mandel_calc_fu_352_ap_ready == 1'b1)) begin
            grp_mandel_calc_fu_352_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_mandel_calc_fu_360_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state57)) begin
            grp_mandel_calc_fu_360_ap_start_reg <= 1'b1;
        end else if ((grp_mandel_calc_fu_360_ap_ready == 1'b1)) begin
            grp_mandel_calc_fu_360_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_mandel_calc_fu_368_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state57)) begin
            grp_mandel_calc_fu_368_ap_start_reg <= 1'b1;
        end else if ((grp_mandel_calc_fu_368_ap_ready == 1'b1)) begin
            grp_mandel_calc_fu_368_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_mandel_calc_fu_376_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state57)) begin
            grp_mandel_calc_fu_376_ap_start_reg <= 1'b1;
        end else if ((grp_mandel_calc_fu_376_ap_ready == 1'b1)) begin
            grp_mandel_calc_fu_376_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln79_fu_915_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49))) begin
        index_0_reg_289 <= index_reg_1841;
    end else if (((setup_read_reg_1755 == 1'd0) & (1'b1 == ap_CS_fsm_state47))) begin
        index_0_reg_289 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((buf_r_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state71))) begin
        index_1_0_reg_311 <= reg_1912;
    end else if ((~((unroll_1_state == 2'd1) | (maxWidth_V_1_state == 2'd1) | ((unroll_1_state == 2'd3) & (1'b1 == 1'b0)) | ((maxWidth_V_1_state == 2'd3) & (1'b1 == 1'b0))) & (icmp_ln78_fu_869_p2 == 1'd0) & (setup_read_reg_1755 == 1'd0) & (1'b1 == ap_CS_fsm_state48))) begin
        index_1_0_reg_311 <= zext_ln78_fu_513_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (maxWidth_V_1_vld_reg == 1'b0) & (maxWidth_V_1_vld_in == 1'b1))) begin
        maxWidth_V_1_vld_reg <= 1'b1;
    end else if (((maxWidth_V_1_vld_in == 1'b0) & (1'b1 == 1'b1) & (maxWidth_V_1_vld_reg == 1'b1))) begin
        maxWidth_V_1_vld_reg <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln79_fu_915_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49))) begin
        p_Val2_30_reg_268 <= grp_fu_1275_p3;
    end else if (((setup_read_reg_1755 == 1'd0) & (1'b1 == ap_CS_fsm_state47))) begin
        p_Val2_30_reg_268 <= Y0_V_read_reg_1737;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        reg_1759 <= grp_fu_662_p2;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        reg_1759 <= delta_V_fu_414_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        reg_1759 <= zext_ln1148_fu_398_p1;
    end else if ((~((1'b1 == ap_block_state58_on_subcall_done) | (buf_r_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state58))) begin
        reg_1759 <= grp_mandel_calc_fu_344_ap_return;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        reg_1759 <= select_ln340_21_fu_1429_p3;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        reg_1759 <= grp_fu_597_p2;
    end else if (((icmp_ln79_fu_915_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state49))) begin
        reg_1759 <= zext_ln1116_1_fu_563_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state58_on_subcall_done) | (buf_r_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state58))) begin
        reg_1849 <= grp_mandel_calc_fu_336_ap_return;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        reg_1849 <= grp_fu_1275_p3;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        reg_1849 <= grp_fu_582_p2;
    end else if (((icmp_ln79_fu_915_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state49))) begin
        reg_1849 <= zext_ln1116_3_fu_593_p1;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        reg_1849 <= add_ln703_3_fu_939_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln79_fu_915_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state49))) begin
        reg_1867 <= zext_ln1116_2_fu_578_p1;
    end else if ((~((1'b1 == ap_block_state58_on_subcall_done) | (buf_r_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state58))) begin
        reg_1867 <= grp_mandel_calc_fu_320_ap_return;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        reg_1867 <= grp_fu_1359_p3;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        reg_1867 <= grp_fu_392_p2;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        reg_1867 <= grp_fu_567_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        if ((icmp_ln79_fu_915_p2 == 1'd1)) begin
            reg_1912 <= grp_fu_1275_p3;
        end else if ((icmp_ln79_fu_915_p2 == 1'd0)) begin
            reg_1912 <= grp_fu_662_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln79_fu_915_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state49))) begin
        reg_1917 <= zext_ln1116_4_fu_608_p1;
    end else if ((~((1'b1 == ap_block_state58_on_subcall_done) | (buf_r_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state58))) begin
        reg_1917 <= grp_mandel_calc_fu_328_ap_return;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        reg_1917 <= select_ln340_19_fu_1415_p3;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        reg_1917 <= add_ln703_2_fu_893_p2;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        reg_1917 <= grp_fu_612_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln79_fu_915_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state49))) begin
        reg_1947 <= zext_ln1116_5_fu_623_p1;
    end else if ((~((1'b1 == ap_block_state58_on_subcall_done) | (buf_r_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state58))) begin
        reg_1947 <= grp_mandel_calc_fu_352_ap_return;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        reg_1947 <= select_ln340_22_fu_1499_p3;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        reg_1947 <= add_ln703_4_fu_985_p2;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        reg_1947 <= grp_fu_627_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln79_fu_915_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state49))) begin
        reg_1957 <= zext_ln1116_fu_538_p1;
    end else if ((~((1'b1 == ap_block_state58_on_subcall_done) | (buf_r_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state58))) begin
        reg_1957 <= grp_mandel_calc_fu_360_ap_return;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        reg_1957 <= select_ln340_23_fu_1569_p3;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        reg_1957 <= add_ln703_5_fu_1031_p2;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        reg_1957 <= grp_fu_542_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln79_fu_915_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state49))) begin
        reg_1967 <= zext_ln1116_6_fu_638_p1;
    end else if ((~((1'b1 == ap_block_state58_on_subcall_done) | (buf_r_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state58))) begin
        reg_1967 <= grp_mandel_calc_fu_368_ap_return;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        reg_1967 <= select_ln340_24_fu_1639_p3;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        reg_1967 <= add_ln703_6_fu_1077_p2;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        reg_1967 <= grp_fu_642_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        reg_1977 <= add_ln703_7_fu_1123_p2;
    end else if ((~((1'b1 == ap_block_state58_on_subcall_done) | (buf_r_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state58))) begin
        reg_1977 <= grp_mandel_calc_fu_376_ap_return;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        reg_1977 <= select_ln340_25_fu_1709_p3;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        reg_1977 <= trunc_ln1192_fu_757_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln79_fu_915_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state49))) begin
        reg_1987 <= zext_ln1116_7_fu_653_p1;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        reg_1987 <= grp_fu_657_p2;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        reg_1987 <= add_ln703_1_fu_847_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln79_fu_915_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49))) begin
        t_V_1_reg_278 <= line_V_reg_1836;
    end else if (((setup_read_reg_1755 == 1'd0) & (1'b1 == ap_CS_fsm_state47))) begin
        t_V_1_reg_278 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((buf_r_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state71))) begin
        tmp_V_1_0_reg_300 <= add_ln700_reg_1907;
    end else if ((~((unroll_1_state == 2'd1) | (maxWidth_V_1_state == 2'd1) | ((unroll_1_state == 2'd3) & (1'b1 == 1'b0)) | ((maxWidth_V_1_state == 2'd3) & (1'b1 == 1'b0))) & (icmp_ln78_fu_869_p2 == 1'd0) & (setup_read_reg_1755 == 1'd0) & (1'b1 == ap_CS_fsm_state48))) begin
        tmp_V_1_0_reg_300 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (unroll_1_vld_reg == 1'b0) & (unroll_1_vld_in == 1'b1))) begin
        unroll_1_vld_reg <= 1'b1;
    end else if (((unroll_1_vld_in == 1'b0) & (1'b1 == 1'b1) & (unroll_1_vld_reg == 1'b1))) begin
        unroll_1_vld_reg <= 1'b0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        X0_V_read_reg_1742 <= X0_V;
        Y0_V_read_reg_1737 <= Y0_V;
        maxIter_read_reg_1717 <= maxIter;
        setup_read_reg_1755 <= setup;
        width_V_read_reg_1729 <= width_V;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln79_fu_915_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state49))) begin
        add_ln700_reg_1907 <= grp_fu_789_p2;
        buf_addr_reg_1854 <= zext_ln85_fu_547_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        icmp_ln785_1_reg_2043 <= icmp_ln785_1_fu_823_p2;
        icmp_ln785_2_reg_2071 <= icmp_ln785_2_fu_829_p2;
        icmp_ln785_3_reg_2099 <= icmp_ln785_3_fu_961_p2;
        icmp_ln785_4_reg_2127 <= icmp_ln785_4_fu_1007_p2;
        icmp_ln785_5_reg_2155 <= icmp_ln785_5_fu_1053_p2;
        icmp_ln785_6_reg_2183 <= icmp_ln785_6_fu_1099_p2;
        icmp_ln785_7_reg_2211 <= icmp_ln785_7_fu_1145_p2;
        icmp_ln785_reg_2015 <= icmp_ln785_fu_517_p2;
        icmp_ln786_1_reg_2048 <= icmp_ln786_1_fu_875_p2;
        icmp_ln786_2_reg_2076 <= icmp_ln786_2_fu_921_p2;
        icmp_ln786_3_reg_2104 <= icmp_ln786_3_fu_967_p2;
        icmp_ln786_4_reg_2132 <= icmp_ln786_4_fu_1013_p2;
        icmp_ln786_5_reg_2160 <= icmp_ln786_5_fu_1059_p2;
        icmp_ln786_6_reg_2188 <= icmp_ln786_6_fu_1105_p2;
        icmp_ln786_7_reg_2216 <= icmp_ln786_7_fu_1151_p2;
        icmp_ln786_reg_2020 <= icmp_ln786_fu_533_p2;
        tmp_48_reg_1997 <= add_ln1192_fu_835_p2[32'd51];
        tmp_49_reg_2009 <= grp_fu_662_p2[32'd39];
        tmp_50_reg_2025 <= grp_fu_789_p2[32'd51];
        tmp_51_reg_2037 <= add_ln703_1_fu_847_p2[32'd39];
        tmp_52_reg_2053 <= add_ln1192_2_fu_881_p2[32'd51];
        tmp_53_reg_2065 <= add_ln703_2_fu_893_p2[32'd39];
        tmp_54_reg_2081 <= add_ln1192_3_fu_927_p2[32'd51];
        tmp_55_reg_2093 <= add_ln703_3_fu_939_p2[32'd39];
        tmp_56_reg_2109 <= add_ln1192_4_fu_973_p2[32'd51];
        tmp_57_reg_2121 <= add_ln703_4_fu_985_p2[32'd39];
        tmp_58_reg_2137 <= add_ln1192_5_fu_1019_p2[32'd51];
        tmp_59_reg_2149 <= add_ln703_5_fu_1031_p2[32'd39];
        tmp_60_reg_2165 <= add_ln1192_6_fu_1065_p2[32'd51];
        tmp_61_reg_2177 <= add_ln703_6_fu_1077_p2[32'd39];
        tmp_62_reg_2193 <= add_ln1192_7_fu_1111_p2[32'd51];
        tmp_63_reg_2205 <= add_ln703_7_fu_1123_p2[32'd39];
    end
end

always @ (posedge ap_clk) begin
    if ((~((unroll_1_state == 2'd1) | (maxWidth_V_1_state == 2'd1) | ((unroll_1_state == 2'd3) & (1'b1 == 1'b0)) | ((maxWidth_V_1_state == 2'd3) & (1'b1 == 1'b0))) & (icmp_ln78_fu_869_p2 == 1'd0) & (setup_read_reg_1755 == 1'd0) & (1'b1 == ap_CS_fsm_state48))) begin
        index_reg_1841 <= grp_fu_789_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((unroll_1_state == 2'd1) | (maxWidth_V_1_state == 2'd1) | ((unroll_1_state == 2'd3) & (1'b1 == 1'b0)) | ((maxWidth_V_1_state == 2'd3) & (1'b1 == 1'b0))) & (setup_read_reg_1755 == 1'd0) & (1'b1 == ap_CS_fsm_state48))) begin
        line_V_reg_1836 <= line_V_fu_528_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (maxWidth_V_1_vld_reg == 1'b0) & (maxWidth_V_1_vld_in == 1'b1)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == 1'b1) & (maxWidth_V_1_vld_in == 1'b1) & (maxWidth_V_1_vld_reg == 1'b1)))) begin
        maxWidth_V_1_data_reg[7] <= 1'b1;
maxWidth_V_1_data_reg[8] <= 1'b1;
maxWidth_V_1_data_reg[9] <= 1'b1;
maxWidth_V_1_data_reg[10] <= 1'b1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        p_Result_21_reg_1782 <= grp_fu_401_p2[32'd39];
        p_Result_s_reg_1769 <= grp_fu_401_p2[32'd40];
    end
end

always @ (posedge ap_clk) begin
    if (((setup_read_reg_1755 == 1'd0) & (1'b1 == ap_CS_fsm_state47))) begin
        rhs_V_4_reg_1794 <= rhs_V_4_fu_384_p1;
        sext_ln1118_reg_1806 <= sext_ln1118_fu_499_p1;
        sext_ln78_reg_1816 <= sext_ln78_fu_510_p1;
        sub_ln78_reg_1764 <= sub_ln78_fu_678_p2;
        zext_ln703_reg_1811[11 : 0] <= zext_ln703_fu_507_p1[11 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        trunc_ln1192_1_reg_2199 <= trunc_ln1192_1_fu_761_p1;
        trunc_ln1192_2_reg_1942 <= trunc_ln1192_2_fu_765_p1;
        trunc_ln1192_3_reg_1952 <= trunc_ln1192_3_fu_769_p1;
        trunc_ln1192_4_reg_1962 <= trunc_ln1192_4_fu_773_p1;
        trunc_ln1192_5_reg_1972 <= trunc_ln1192_5_fu_777_p1;
        trunc_ln1192_6_reg_1982 <= trunc_ln1192_6_fu_781_p1;
        trunc_ln1192_7_reg_1992 <= trunc_ln1192_7_fu_785_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (unroll_1_vld_reg == 1'b0) & (unroll_1_vld_in == 1'b1)) | (~((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) & (1'b1 == 1'b1) & (unroll_1_vld_in == 1'b1) & (unroll_1_vld_reg == 1'b1)))) begin
        unroll_1_data_reg[3] <= 1'b1;
    end
end

always @ (*) begin
    if ((~((unroll_1_state == 2'd1) | (maxWidth_V_1_state == 2'd1) | ((unroll_1_state == 2'd3) & (1'b1 == 1'b0)) | ((maxWidth_V_1_state == 2'd3) & (1'b1 == 1'b0))) & (1'b1 == ap_CS_fsm_state48) & ((icmp_ln78_fu_869_p2 == 1'd1) | (setup_read_reg_1755 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((unroll_1_state == 2'd1) | (maxWidth_V_1_state == 2'd1) | ((unroll_1_state == 2'd3) & (1'b1 == 1'b0)) | ((maxWidth_V_1_state == 2'd3) & (1'b1 == 1'b0))) & (1'b1 == ap_CS_fsm_state48) & ((icmp_ln78_fu_869_p2 == 1'd1) | (setup_read_reg_1755 == 1'd1)))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state58_on_subcall_done) | (buf_r_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state58))) begin
        buf_r_AWVALID = 1'b1;
    end else begin
        buf_r_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((buf_r_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state71))) begin
        buf_r_BREADY = 1'b1;
    end else begin
        buf_r_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state66)) begin
        buf_r_WDATA = reg_1977;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        buf_r_WDATA = reg_1967;
    end else if ((1'b1 == ap_CS_fsm_state64)) begin
        buf_r_WDATA = reg_1957;
    end else if ((1'b1 == ap_CS_fsm_state63)) begin
        buf_r_WDATA = reg_1947;
    end else if ((1'b1 == ap_CS_fsm_state62)) begin
        buf_r_WDATA = reg_1759;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        buf_r_WDATA = reg_1849;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        buf_r_WDATA = reg_1917;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        buf_r_WDATA = reg_1867;
    end else begin
        buf_r_WDATA = 'bx;
    end
end

always @ (*) begin
    if ((((buf_r_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state66)) | ((buf_r_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state65)) | ((buf_r_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state64)) | ((buf_r_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state63)) | ((buf_r_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state62)) | ((buf_r_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state61)) | ((buf_r_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state60)) | ((buf_r_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state59)))) begin
        buf_r_WVALID = 1'b1;
    end else begin
        buf_r_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        buf_r_blk_n_AW = m_axi_buf_r_AWREADY;
    end else begin
        buf_r_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        buf_r_blk_n_B = m_axi_buf_r_BVALID;
    end else begin
        buf_r_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state66) | (1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state59))) begin
        buf_r_blk_n_W = m_axi_buf_r_WREADY;
    end else begin
        buf_r_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        grp_fu_1166_p0 = or_ln786_2_fu_1317_p2;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_1166_p0 = grp_fu_392_p2[32'd40];
    end else begin
        grp_fu_1166_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        grp_fu_1166_p1 = tmp_52_reg_2053;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_1166_p1 = xor_ln786_7_fu_703_p2;
    end else begin
        grp_fu_1166_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        grp_fu_1182_p0 = or_ln786_fu_1177_p2;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        grp_fu_1182_p0 = p_Result_s_reg_1769;
    end else begin
        grp_fu_1182_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        grp_fu_1182_p1 = tmp_48_reg_1997;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        grp_fu_1182_p1 = xor_ln786_fu_426_p2;
    end else begin
        grp_fu_1182_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        grp_fu_1199_p0 = and_ln785_2_fu_1306_p2;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_1199_p0 = grp_fu_392_p2[32'd39];
    end else begin
        grp_fu_1199_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        grp_fu_1219_p0 = or_ln340_24_fu_1327_p2;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_1219_p0 = xor_ln340_3_fu_715_p2;
    end else begin
        grp_fu_1219_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        grp_fu_1219_p2 = reg_1917;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_1219_p2 = y_V_fu_691_p1;
    end else begin
        grp_fu_1219_p2 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        grp_fu_1333_p0 = grp_fu_1166_p2;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_1333_p0 = grp_fu_392_p2[32'd40];
    end else begin
        grp_fu_1333_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        grp_fu_1359_p0 = or_ln340_21_fu_1187_p2;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        grp_fu_1359_p0 = or_ln340_fu_445_p2;
    end else begin
        grp_fu_1359_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_392_p0 = lhs_V_3_fu_674_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_fu_392_p0 = lhs_V_fu_503_p1;
    end else begin
        grp_fu_392_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_392_p1 = rhs_V_4_reg_1794;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_fu_392_p1 = rhs_V_fu_388_p1;
    end else begin
        grp_fu_392_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_401_ap_start = 1'b1;
    end else begin
        grp_fu_401_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        grp_fu_662_p0 = X0_V_read_reg_1742;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_662_p0 = 32'd8;
    end else begin
        grp_fu_662_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        grp_fu_662_p1 = reg_1977;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_662_p1 = index_1_0_reg_311;
    end else begin
        grp_fu_662_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        grp_fu_733_p0 = or_ln340_20_fu_1339_p2;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        grp_fu_733_p0 = xor_ln340_2_fu_436_p2;
    end else begin
        grp_fu_733_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        grp_fu_741_p2 = reg_1917;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_741_p2 = y_V_fu_691_p1;
    end else begin
        grp_fu_741_p2 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        grp_fu_789_p0 = sext_ln78_reg_1816;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_789_p0 = 12'd8;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        grp_fu_789_p0 = zext_ln703_reg_1811;
    end else begin
        grp_fu_789_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        grp_fu_789_p1 = reg_1867;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_789_p1 = tmp_V_1_0_reg_300;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        grp_fu_789_p1 = index_0_reg_289;
    end else begin
        grp_fu_789_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        maxWidth_V_1_vld_in = 1'b1;
    end else begin
        maxWidth_V_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        unroll_1_vld_in = 1'b1;
    end else begin
        unroll_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            if ((~((unroll_1_state == 2'd1) | (maxWidth_V_1_state == 2'd1) | ((unroll_1_state == 2'd3) & (1'b1 == 1'b0)) | ((maxWidth_V_1_state == 2'd3) & (1'b1 == 1'b0))) & (1'b1 == ap_CS_fsm_state48) & ((icmp_ln78_fu_869_p2 == 1'd1) | (setup_read_reg_1755 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if ((~((unroll_1_state == 2'd1) | (maxWidth_V_1_state == 2'd1) | ((unroll_1_state == 2'd3) & (1'b1 == 1'b0)) | ((maxWidth_V_1_state == 2'd3) & (1'b1 == 1'b0))) & (icmp_ln78_fu_869_p2 == 1'd0) & (setup_read_reg_1755 == 1'd0) & (1'b1 == ap_CS_fsm_state48))) begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end
        end
        ap_ST_fsm_state49 : begin
            if (((icmp_ln79_fu_915_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49))) begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            if ((~((1'b1 == ap_block_state58_on_subcall_done) | (buf_r_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state58))) begin
                ap_NS_fsm = ap_ST_fsm_state59;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state58;
            end
        end
        ap_ST_fsm_state59 : begin
            if (((buf_r_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state59))) begin
                ap_NS_fsm = ap_ST_fsm_state60;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state59;
            end
        end
        ap_ST_fsm_state60 : begin
            if (((buf_r_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state60))) begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state60;
            end
        end
        ap_ST_fsm_state61 : begin
            if (((buf_r_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state61))) begin
                ap_NS_fsm = ap_ST_fsm_state62;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end
        end
        ap_ST_fsm_state62 : begin
            if (((buf_r_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state62))) begin
                ap_NS_fsm = ap_ST_fsm_state63;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state62;
            end
        end
        ap_ST_fsm_state63 : begin
            if (((buf_r_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state63))) begin
                ap_NS_fsm = ap_ST_fsm_state64;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state63;
            end
        end
        ap_ST_fsm_state64 : begin
            if (((buf_r_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state64))) begin
                ap_NS_fsm = ap_ST_fsm_state65;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state64;
            end
        end
        ap_ST_fsm_state65 : begin
            if (((buf_r_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state65))) begin
                ap_NS_fsm = ap_ST_fsm_state66;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state65;
            end
        end
        ap_ST_fsm_state66 : begin
            if (((buf_r_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state66))) begin
                ap_NS_fsm = ap_ST_fsm_state67;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state66;
            end
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            if (((buf_r_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state71))) begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state71;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1192_2_fu_881_p2 = ($signed(sext_ln78_reg_1816) + $signed(reg_1849));

assign add_ln1192_3_fu_927_p2 = ($signed(sext_ln78_reg_1816) + $signed(reg_1759));

assign add_ln1192_4_fu_973_p2 = ($signed(sext_ln78_reg_1816) + $signed(reg_1917));

assign add_ln1192_5_fu_1019_p2 = ($signed(sext_ln78_reg_1816) + $signed(reg_1947));

assign add_ln1192_6_fu_1065_p2 = ($signed(sext_ln78_reg_1816) + $signed(reg_1967));

assign add_ln1192_7_fu_1111_p2 = ($signed(sext_ln78_reg_1816) + $signed(reg_1987));

assign add_ln1192_fu_835_p2 = ($signed(sext_ln78_reg_1816) + $signed(reg_1957));

assign add_ln703_1_fu_847_p2 = ($signed(X0_V_read_reg_1742) + $signed(trunc_ln1192_1_reg_2199));

assign add_ln703_2_fu_893_p2 = ($signed(X0_V_read_reg_1742) + $signed(trunc_ln1192_2_reg_1942));

assign add_ln703_3_fu_939_p2 = ($signed(X0_V_read_reg_1742) + $signed(trunc_ln1192_3_reg_1952));

assign add_ln703_4_fu_985_p2 = ($signed(X0_V_read_reg_1742) + $signed(trunc_ln1192_4_reg_1962));

assign add_ln703_5_fu_1031_p2 = ($signed(X0_V_read_reg_1742) + $signed(trunc_ln1192_5_reg_1972));

assign add_ln703_6_fu_1077_p2 = ($signed(X0_V_read_reg_1742) + $signed(trunc_ln1192_6_reg_1982));

assign add_ln703_7_fu_1123_p2 = ($signed(X0_V_read_reg_1742) + $signed(trunc_ln1192_7_reg_1992));

assign and_ln785_1_fu_1322_p2 = (xor_ln785_11_fu_1231_p2 & or_ln785_6_fu_1227_p2);

assign and_ln785_2_fu_1306_p2 = (xor_ln785_12_fu_1301_p2 & or_ln785_7_fu_1297_p2);

assign and_ln785_3_fu_1376_p2 = (xor_ln785_13_fu_1371_p2 & or_ln785_8_fu_1367_p2);

assign and_ln785_4_fu_1446_p2 = (xor_ln785_14_fu_1441_p2 & or_ln785_9_fu_1437_p2);

assign and_ln785_5_fu_1516_p2 = (xor_ln785_15_fu_1511_p2 & or_ln785_10_fu_1507_p2);

assign and_ln785_6_fu_1586_p2 = (xor_ln785_16_fu_1581_p2 & or_ln785_11_fu_1577_p2);

assign and_ln785_7_fu_1656_p2 = (xor_ln785_17_fu_1651_p2 & or_ln785_12_fu_1647_p2);

assign and_ln785_fu_1236_p2 = (xor_ln785_fu_1161_p2 & or_ln785_fu_1157_p2);

assign and_ln786_12_fu_1252_p2 = (tmp_50_reg_2025 & or_ln786_1_fu_1247_p2);

assign and_ln786_14_fu_1392_p2 = (tmp_54_reg_2081 & or_ln786_3_fu_1387_p2);

assign and_ln786_15_fu_1462_p2 = (tmp_56_reg_2109 & or_ln786_4_fu_1457_p2);

assign and_ln786_16_fu_1532_p2 = (tmp_58_reg_2137 & or_ln786_5_fu_1527_p2);

assign and_ln786_17_fu_1602_p2 = (tmp_60_reg_2165 & or_ln786_6_fu_1597_p2);

assign and_ln786_18_fu_1672_p2 = (tmp_62_reg_2193 & or_ln786_7_fu_1667_p2);

assign and_ln_fu_485_p3 = {{lshr_ln_fu_472_p4}, {2'd0}};

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd65];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd70];

always @ (*) begin
    ap_block_state48 = ((unroll_1_state == 2'd1) | (maxWidth_V_1_state == 2'd1) | ((unroll_1_state == 2'd3) & (1'b1 == 1'b0)) | ((maxWidth_V_1_state == 2'd3) & (1'b1 == 1'b0)));
end

always @ (*) begin
    ap_block_state58_on_subcall_done = ((grp_mandel_calc_fu_376_ap_done == 1'b0) | (grp_mandel_calc_fu_368_ap_done == 1'b0) | (grp_mandel_calc_fu_360_ap_done == 1'b0) | (grp_mandel_calc_fu_352_ap_done == 1'b0) | (grp_mandel_calc_fu_344_ap_done == 1'b0) | (grp_mandel_calc_fu_336_ap_done == 1'b0) | (grp_mandel_calc_fu_328_ap_done == 1'b0) | (grp_mandel_calc_fu_320_ap_done == 1'b0));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign delta_V_fu_414_p1 = grp_fu_401_p2[39:0];

assign grp_fu_1166_p2 = (grp_fu_1166_p1 & grp_fu_1166_p0);

assign grp_fu_1182_p2 = (grp_fu_1182_p1 & grp_fu_1182_p0);

assign grp_fu_1199_p2 = (grp_fu_1333_p2 | grp_fu_1199_p0);

assign grp_fu_1219_p3 = ((grp_fu_1219_p0[0:0] === 1'b1) ? 40'd549755813887 : grp_fu_1219_p2);

assign grp_fu_1275_p3 = ((grp_fu_1199_p2[0:0] === 1'b1) ? grp_fu_1219_p3 : grp_fu_741_p3);

assign grp_fu_1333_p2 = (grp_fu_1333_p0 ^ 1'd1);

assign grp_fu_1359_p3 = ((grp_fu_1359_p0[0:0] === 1'b1) ? grp_fu_733_p3 : grp_fu_457_p3);

assign grp_fu_392_p2 = ($signed(grp_fu_392_p0) - $signed(grp_fu_392_p1));

assign grp_fu_401_p0 = reg_1867;

assign grp_fu_401_p1 = grp_fu_401_p10;

assign grp_fu_401_p10 = width_V_read_reg_1729;

assign grp_fu_457_p2 = reg_1759;

assign grp_fu_457_p3 = ((grp_fu_1182_p2[0:0] === 1'b1) ? 40'd549755813888 : grp_fu_457_p2);

assign grp_fu_542_p0 = grp_fu_542_p00;

assign grp_fu_542_p00 = tmp_V_1_0_reg_300;

assign grp_fu_542_p1 = sext_ln1118_reg_1806;

assign grp_fu_567_p0 = grp_fu_567_p00;

assign grp_fu_567_p00 = or_ln700_fu_557_p2;

assign grp_fu_567_p1 = sext_ln1118_reg_1806;

assign grp_fu_582_p0 = grp_fu_582_p00;

assign grp_fu_582_p00 = or_ln700_1_fu_572_p2;

assign grp_fu_582_p1 = sext_ln1118_reg_1806;

assign grp_fu_597_p0 = grp_fu_597_p00;

assign grp_fu_597_p00 = or_ln700_2_fu_587_p2;

assign grp_fu_597_p1 = sext_ln1118_reg_1806;

assign grp_fu_612_p0 = grp_fu_612_p00;

assign grp_fu_612_p00 = or_ln700_3_fu_602_p2;

assign grp_fu_612_p1 = sext_ln1118_reg_1806;

assign grp_fu_627_p0 = grp_fu_627_p00;

assign grp_fu_627_p00 = or_ln700_4_fu_617_p2;

assign grp_fu_627_p1 = sext_ln1118_reg_1806;

assign grp_fu_642_p0 = grp_fu_642_p00;

assign grp_fu_642_p00 = or_ln700_5_fu_632_p2;

assign grp_fu_642_p1 = sext_ln1118_reg_1806;

assign grp_fu_657_p0 = grp_fu_657_p00;

assign grp_fu_657_p00 = or_ln700_6_fu_647_p2;

assign grp_fu_657_p1 = sext_ln1118_reg_1806;

assign grp_fu_662_p2 = ($signed(grp_fu_662_p0) + $signed(grp_fu_662_p1));

assign grp_fu_733_p2 = reg_1759;

assign grp_fu_733_p3 = ((grp_fu_733_p0[0:0] === 1'b1) ? 40'd549755813887 : grp_fu_733_p2);

assign grp_fu_741_p3 = ((grp_fu_1166_p2[0:0] === 1'b1) ? 40'd549755813888 : grp_fu_741_p2);

assign grp_fu_789_p2 = ($signed(grp_fu_789_p0) + $signed(grp_fu_789_p1));

assign grp_mandel_calc_fu_320_ap_start = grp_mandel_calc_fu_320_ap_start_reg;

assign grp_mandel_calc_fu_320_x_in_V = reg_1867;

assign grp_mandel_calc_fu_328_ap_start = grp_mandel_calc_fu_328_ap_start_reg;

assign grp_mandel_calc_fu_328_x_in_V = reg_1917;

assign grp_mandel_calc_fu_336_ap_start = grp_mandel_calc_fu_336_ap_start_reg;

assign grp_mandel_calc_fu_336_x_in_V = reg_1849;

assign grp_mandel_calc_fu_344_ap_start = grp_mandel_calc_fu_344_ap_start_reg;

assign grp_mandel_calc_fu_344_x_in_V = reg_1759;

assign grp_mandel_calc_fu_352_ap_start = grp_mandel_calc_fu_352_ap_start_reg;

assign grp_mandel_calc_fu_352_x_in_V = reg_1947;

assign grp_mandel_calc_fu_360_ap_start = grp_mandel_calc_fu_360_ap_start_reg;

assign grp_mandel_calc_fu_360_x_in_V = reg_1957;

assign grp_mandel_calc_fu_368_ap_start = grp_mandel_calc_fu_368_ap_start_reg;

assign grp_mandel_calc_fu_368_x_in_V = reg_1967;

assign grp_mandel_calc_fu_376_ap_start = grp_mandel_calc_fu_376_ap_start_reg;

assign icmp_ln785_1_fu_823_p2 = ((tmp_9_fu_859_p4 != 12'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_2_fu_829_p2 = ((tmp_s_fu_905_p4 != 12'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_3_fu_961_p2 = ((tmp_10_fu_951_p4 != 12'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_4_fu_1007_p2 = ((tmp_11_fu_997_p4 != 12'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_5_fu_1053_p2 = ((tmp_12_fu_1043_p4 != 12'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_6_fu_1099_p2 = ((tmp_13_fu_1089_p4 != 12'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_7_fu_1145_p2 = ((tmp_14_fu_1135_p4 != 12'd0) ? 1'b1 : 1'b0);

assign icmp_ln785_fu_517_p2 = ((tmp_8_fu_813_p4 != 12'd0) ? 1'b1 : 1'b0);

assign icmp_ln786_1_fu_875_p2 = ((tmp_9_fu_859_p4 != 12'd4095) ? 1'b1 : 1'b0);

assign icmp_ln786_2_fu_921_p2 = ((tmp_s_fu_905_p4 != 12'd4095) ? 1'b1 : 1'b0);

assign icmp_ln786_3_fu_967_p2 = ((tmp_10_fu_951_p4 != 12'd4095) ? 1'b1 : 1'b0);

assign icmp_ln786_4_fu_1013_p2 = ((tmp_11_fu_997_p4 != 12'd4095) ? 1'b1 : 1'b0);

assign icmp_ln786_5_fu_1059_p2 = ((tmp_12_fu_1043_p4 != 12'd4095) ? 1'b1 : 1'b0);

assign icmp_ln786_6_fu_1105_p2 = ((tmp_13_fu_1089_p4 != 12'd4095) ? 1'b1 : 1'b0);

assign icmp_ln786_7_fu_1151_p2 = ((tmp_14_fu_1135_p4 != 12'd4095) ? 1'b1 : 1'b0);

assign icmp_ln786_fu_533_p2 = ((tmp_8_fu_813_p4 != 12'd4095) ? 1'b1 : 1'b0);

assign icmp_ln78_fu_869_p2 = ((t_V_1_reg_278 == sub_ln78_reg_1764) ? 1'b1 : 1'b0);

assign icmp_ln79_fu_915_p2 = ((tmp_V_1_0_reg_300 == width_V_read_reg_1729) ? 1'b1 : 1'b0);

assign lhs_V_3_fu_674_p1 = $signed(p_Val2_30_reg_268);

assign lhs_V_fu_503_p1 = $signed(X1_V);

assign line_V_fu_528_p2 = (t_V_1_reg_278 + 12'd1);

assign lshr_ln_fu_472_p4 = {{width_V_read_reg_1729[11:2]}};

assign or_ln340_20_fu_1339_p2 = (grp_fu_1182_p2 | and_ln785_fu_1236_p2);

assign or_ln340_21_fu_1187_p2 = (xor_ln340_5_fu_1193_p2 | and_ln785_fu_1236_p2);

assign or_ln340_22_fu_1257_p2 = (and_ln786_12_fu_1252_p2 | and_ln785_1_fu_1322_p2);

assign or_ln340_23_fu_1269_p2 = (xor_ln340_6_fu_1263_p2 | and_ln785_1_fu_1322_p2);

assign or_ln340_24_fu_1327_p2 = (grp_fu_1166_p2 | and_ln785_2_fu_1306_p2);

assign or_ln340_26_fu_1397_p2 = (and_ln786_14_fu_1392_p2 | and_ln785_3_fu_1376_p2);

assign or_ln340_27_fu_1409_p2 = (xor_ln340_8_fu_1403_p2 | and_ln785_3_fu_1376_p2);

assign or_ln340_28_fu_1467_p2 = (and_ln786_15_fu_1462_p2 | and_ln785_4_fu_1446_p2);

assign or_ln340_29_fu_1479_p2 = (xor_ln340_9_fu_1473_p2 | and_ln785_4_fu_1446_p2);

assign or_ln340_30_fu_1537_p2 = (and_ln786_16_fu_1532_p2 | and_ln785_5_fu_1516_p2);

assign or_ln340_31_fu_1549_p2 = (xor_ln340_10_fu_1543_p2 | and_ln785_5_fu_1516_p2);

assign or_ln340_32_fu_1607_p2 = (and_ln786_17_fu_1602_p2 | and_ln785_6_fu_1586_p2);

assign or_ln340_33_fu_1619_p2 = (xor_ln340_11_fu_1613_p2 | and_ln785_6_fu_1586_p2);

assign or_ln340_34_fu_1677_p2 = (and_ln786_18_fu_1672_p2 | and_ln785_7_fu_1656_p2);

assign or_ln340_35_fu_1689_p2 = (xor_ln340_12_fu_1683_p2 | and_ln785_7_fu_1656_p2);

assign or_ln340_fu_445_p2 = (xor_ln340_fu_440_p2 | p_Result_21_reg_1782);

assign or_ln700_1_fu_572_p2 = (tmp_V_1_0_reg_300 | 12'd2);

assign or_ln700_2_fu_587_p2 = (tmp_V_1_0_reg_300 | 12'd3);

assign or_ln700_3_fu_602_p2 = (tmp_V_1_0_reg_300 | 12'd4);

assign or_ln700_4_fu_617_p2 = (tmp_V_1_0_reg_300 | 12'd5);

assign or_ln700_5_fu_632_p2 = (tmp_V_1_0_reg_300 | 12'd6);

assign or_ln700_6_fu_647_p2 = (tmp_V_1_0_reg_300 | 12'd7);

assign or_ln700_fu_557_p2 = (tmp_V_1_0_reg_300 | 12'd1);

assign or_ln785_10_fu_1507_p2 = (tmp_59_reg_2149 | icmp_ln785_5_reg_2155);

assign or_ln785_11_fu_1577_p2 = (tmp_61_reg_2177 | icmp_ln785_6_reg_2183);

assign or_ln785_12_fu_1647_p2 = (tmp_63_reg_2205 | icmp_ln785_7_reg_2211);

assign or_ln785_6_fu_1227_p2 = (tmp_51_reg_2037 | icmp_ln785_1_reg_2043);

assign or_ln785_7_fu_1297_p2 = (tmp_53_reg_2065 | icmp_ln785_2_reg_2071);

assign or_ln785_8_fu_1367_p2 = (tmp_55_reg_2093 | icmp_ln785_3_reg_2099);

assign or_ln785_9_fu_1437_p2 = (tmp_57_reg_2121 | icmp_ln785_4_reg_2127);

assign or_ln785_fu_1157_p2 = (tmp_49_reg_2009 | icmp_ln785_reg_2015);

assign or_ln786_1_fu_1247_p2 = (xor_ln786_9_fu_1242_p2 | icmp_ln786_1_reg_2048);

assign or_ln786_2_fu_1317_p2 = (xor_ln786_10_fu_1312_p2 | icmp_ln786_2_reg_2076);

assign or_ln786_3_fu_1387_p2 = (xor_ln786_11_fu_1382_p2 | icmp_ln786_3_reg_2104);

assign or_ln786_4_fu_1457_p2 = (xor_ln786_12_fu_1452_p2 | icmp_ln786_4_reg_2132);

assign or_ln786_5_fu_1527_p2 = (xor_ln786_13_fu_1522_p2 | icmp_ln786_5_reg_2160);

assign or_ln786_6_fu_1597_p2 = (xor_ln786_14_fu_1592_p2 | icmp_ln786_6_reg_2188);

assign or_ln786_7_fu_1667_p2 = (xor_ln786_15_fu_1662_p2 | icmp_ln786_7_reg_2216);

assign or_ln786_fu_1177_p2 = (xor_ln786_8_fu_1172_p2 | icmp_ln786_reg_2020);

assign p_Result_22_fu_683_p3 = grp_fu_392_p2[32'd40];

assign p_Result_23_fu_695_p3 = grp_fu_392_p2[32'd39];

assign rhs_V_4_fu_384_p0 = grp_fu_1359_p3;

assign rhs_V_4_fu_384_p1 = rhs_V_4_fu_384_p0;

assign rhs_V_fu_388_p0 = X0_V;

assign rhs_V_fu_388_p1 = rhs_V_fu_388_p0;

assign select_ln340_11_fu_464_p2 = reg_1849;

assign select_ln340_11_fu_464_p3 = ((or_ln340_26_fu_1397_p2[0:0] === 1'b1) ? 40'd549755813887 : select_ln340_11_fu_464_p2);

assign select_ln340_12_fu_1485_p2 = reg_1947;

assign select_ln340_12_fu_1485_p3 = ((or_ln340_28_fu_1467_p2[0:0] === 1'b1) ? 40'd549755813887 : select_ln340_12_fu_1485_p2);

assign select_ln340_13_fu_1555_p2 = reg_1957;

assign select_ln340_13_fu_1555_p3 = ((or_ln340_30_fu_1537_p2[0:0] === 1'b1) ? 40'd549755813887 : select_ln340_13_fu_1555_p2);

assign select_ln340_14_fu_1625_p2 = reg_1967;

assign select_ln340_14_fu_1625_p3 = ((or_ln340_32_fu_1607_p2[0:0] === 1'b1) ? 40'd549755813887 : select_ln340_14_fu_1625_p2);

assign select_ln340_15_fu_1695_p3 = ((or_ln340_34_fu_1677_p2[0:0] === 1'b1) ? 40'd549755813887 : reg_1977);

assign select_ln340_19_fu_1415_p3 = ((or_ln340_23_fu_1269_p2[0:0] === 1'b1) ? select_ln340_9_fu_1352_p3 : select_ln388_9_fu_1345_p3);

assign select_ln340_21_fu_1429_p3 = ((or_ln340_27_fu_1409_p2[0:0] === 1'b1) ? select_ln340_11_fu_464_p3 : select_ln388_11_fu_1422_p3);

assign select_ln340_22_fu_1499_p3 = ((or_ln340_29_fu_1479_p2[0:0] === 1'b1) ? select_ln340_12_fu_1485_p3 : select_ln388_12_fu_1492_p3);

assign select_ln340_23_fu_1569_p3 = ((or_ln340_31_fu_1549_p2[0:0] === 1'b1) ? select_ln340_13_fu_1555_p3 : select_ln388_13_fu_1562_p3);

assign select_ln340_24_fu_1639_p3 = ((or_ln340_33_fu_1619_p2[0:0] === 1'b1) ? select_ln340_14_fu_1625_p3 : select_ln388_14_fu_1632_p3);

assign select_ln340_25_fu_1709_p3 = ((or_ln340_35_fu_1689_p2[0:0] === 1'b1) ? select_ln340_15_fu_1695_p3 : select_ln388_15_fu_1702_p3);

assign select_ln340_9_fu_1352_p2 = reg_1987;

assign select_ln340_9_fu_1352_p3 = ((or_ln340_22_fu_1257_p2[0:0] === 1'b1) ? 40'd549755813887 : select_ln340_9_fu_1352_p2);

assign select_ln388_11_fu_1422_p2 = reg_1849;

assign select_ln388_11_fu_1422_p3 = ((and_ln786_14_fu_1392_p2[0:0] === 1'b1) ? 40'd549755813888 : select_ln388_11_fu_1422_p2);

assign select_ln388_12_fu_1492_p2 = reg_1947;

assign select_ln388_12_fu_1492_p3 = ((and_ln786_15_fu_1462_p2[0:0] === 1'b1) ? 40'd549755813888 : select_ln388_12_fu_1492_p2);

assign select_ln388_13_fu_1562_p2 = reg_1957;

assign select_ln388_13_fu_1562_p3 = ((and_ln786_16_fu_1532_p2[0:0] === 1'b1) ? 40'd549755813888 : select_ln388_13_fu_1562_p2);

assign select_ln388_14_fu_1632_p2 = reg_1967;

assign select_ln388_14_fu_1632_p3 = ((and_ln786_17_fu_1602_p2[0:0] === 1'b1) ? 40'd549755813888 : select_ln388_14_fu_1632_p2);

assign select_ln388_15_fu_1702_p3 = ((and_ln786_18_fu_1672_p2[0:0] === 1'b1) ? 40'd549755813888 : reg_1977);

assign select_ln388_9_fu_1345_p2 = reg_1987;

assign select_ln388_9_fu_1345_p3 = ((and_ln786_12_fu_1252_p2[0:0] === 1'b1) ? 40'd549755813888 : select_ln388_9_fu_1345_p2);

assign sext_ln1118_fu_499_p0 = grp_fu_1359_p3;

assign sext_ln1118_fu_499_p1 = sext_ln1118_fu_499_p0;

assign sext_ln78_fu_510_p1 = X0_V_read_reg_1742;

assign sub_ln78_fu_678_p2 = (and_ln_fu_485_p3 - zext_ln78_1_fu_481_p1);

assign tmp_10_fu_951_p4 = {{add_ln1192_3_fu_927_p2[51:40]}};

assign tmp_11_fu_997_p4 = {{add_ln1192_4_fu_973_p2[51:40]}};

assign tmp_12_fu_1043_p4 = {{add_ln1192_5_fu_1019_p2[51:40]}};

assign tmp_13_fu_1089_p4 = {{add_ln1192_6_fu_1065_p2[51:40]}};

assign tmp_14_fu_1135_p4 = {{add_ln1192_7_fu_1111_p2[51:40]}};

assign tmp_8_fu_813_p4 = {{add_ln1192_fu_835_p2[51:40]}};

assign tmp_9_fu_859_p4 = {{grp_fu_789_p2[51:40]}};

assign tmp_s_fu_905_p4 = {{add_ln1192_2_fu_881_p2[51:40]}};

assign trunc_ln1192_1_fu_761_p1 = grp_fu_567_p2[39:0];

assign trunc_ln1192_2_fu_765_p1 = grp_fu_582_p2[39:0];

assign trunc_ln1192_3_fu_769_p1 = grp_fu_597_p2[39:0];

assign trunc_ln1192_4_fu_773_p1 = grp_fu_612_p2[39:0];

assign trunc_ln1192_5_fu_777_p1 = grp_fu_627_p2[39:0];

assign trunc_ln1192_6_fu_781_p1 = grp_fu_642_p2[39:0];

assign trunc_ln1192_7_fu_785_p1 = grp_fu_657_p2[39:0];

assign trunc_ln1192_fu_757_p1 = grp_fu_542_p2[39:0];

assign xor_ln340_10_fu_1543_p2 = (1'd1 ^ and_ln786_16_fu_1532_p2);

assign xor_ln340_11_fu_1613_p2 = (1'd1 ^ and_ln786_17_fu_1602_p2);

assign xor_ln340_12_fu_1683_p2 = (1'd1 ^ and_ln786_18_fu_1672_p2);

assign xor_ln340_2_fu_436_p2 = (p_Result_s_reg_1769 ^ p_Result_21_reg_1782);

assign xor_ln340_3_fu_715_p2 = (p_Result_23_fu_695_p3 ^ p_Result_22_fu_683_p3);

assign xor_ln340_5_fu_1193_p2 = (grp_fu_1182_p2 ^ 1'd1);

assign xor_ln340_6_fu_1263_p2 = (1'd1 ^ and_ln786_12_fu_1252_p2);

assign xor_ln340_8_fu_1403_p2 = (1'd1 ^ and_ln786_14_fu_1392_p2);

assign xor_ln340_9_fu_1473_p2 = (1'd1 ^ and_ln786_15_fu_1462_p2);

assign xor_ln340_fu_440_p2 = (p_Result_s_reg_1769 ^ 1'd1);

assign xor_ln785_11_fu_1231_p2 = (tmp_50_reg_2025 ^ 1'd1);

assign xor_ln785_12_fu_1301_p2 = (tmp_52_reg_2053 ^ 1'd1);

assign xor_ln785_13_fu_1371_p2 = (tmp_54_reg_2081 ^ 1'd1);

assign xor_ln785_14_fu_1441_p2 = (tmp_56_reg_2109 ^ 1'd1);

assign xor_ln785_15_fu_1511_p2 = (tmp_58_reg_2137 ^ 1'd1);

assign xor_ln785_16_fu_1581_p2 = (tmp_60_reg_2165 ^ 1'd1);

assign xor_ln785_17_fu_1651_p2 = (tmp_62_reg_2193 ^ 1'd1);

assign xor_ln785_fu_1161_p2 = (tmp_48_reg_1997 ^ 1'd1);

assign xor_ln786_10_fu_1312_p2 = (tmp_53_reg_2065 ^ 1'd1);

assign xor_ln786_11_fu_1382_p2 = (tmp_55_reg_2093 ^ 1'd1);

assign xor_ln786_12_fu_1452_p2 = (tmp_57_reg_2121 ^ 1'd1);

assign xor_ln786_13_fu_1522_p2 = (tmp_59_reg_2149 ^ 1'd1);

assign xor_ln786_14_fu_1592_p2 = (tmp_61_reg_2177 ^ 1'd1);

assign xor_ln786_15_fu_1662_p2 = (tmp_63_reg_2205 ^ 1'd1);

assign xor_ln786_7_fu_703_p2 = (p_Result_23_fu_695_p3 ^ 1'd1);

assign xor_ln786_8_fu_1172_p2 = (tmp_49_reg_2009 ^ 1'd1);

assign xor_ln786_9_fu_1242_p2 = (tmp_51_reg_2037 ^ 1'd1);

assign xor_ln786_fu_426_p2 = (p_Result_21_reg_1782 ^ 1'd1);

assign y_V_fu_691_p1 = grp_fu_392_p2[39:0];

assign zext_ln1116_1_fu_563_p1 = or_ln700_fu_557_p2;

assign zext_ln1116_2_fu_578_p1 = or_ln700_1_fu_572_p2;

assign zext_ln1116_3_fu_593_p1 = or_ln700_2_fu_587_p2;

assign zext_ln1116_4_fu_608_p1 = or_ln700_3_fu_602_p2;

assign zext_ln1116_5_fu_623_p1 = or_ln700_4_fu_617_p2;

assign zext_ln1116_6_fu_638_p1 = or_ln700_5_fu_632_p2;

assign zext_ln1116_7_fu_653_p1 = or_ln700_6_fu_647_p2;

assign zext_ln1116_fu_538_p1 = tmp_V_1_0_reg_300;

assign zext_ln1148_fu_398_p1 = width_V_read_reg_1729;

assign zext_ln703_fu_507_p1 = width_V_read_reg_1729;

assign zext_ln78_1_fu_481_p1 = lshr_ln_fu_472_p4;

assign zext_ln78_fu_513_p1 = index_0_reg_289;

assign zext_ln85_fu_547_p1 = index_1_0_reg_311;

always @ (posedge ap_clk) begin
    maxWidth_V_1_data_reg[6:0] <= 7'b0000000;
    maxWidth_V_1_data_reg[11] <= 1'b0;
    unroll_1_data_reg[2:0] <= 3'b000;
    unroll_1_data_reg[15:4] <= 12'b000000000000;
    zext_ln703_reg_1811[23:12] <= 12'b000000000000;
    maxWidth_V_1_state[1:0] <= 2'b00;
    unroll_1_state[1:0] <= 2'b00;
end

endmodule //calc
