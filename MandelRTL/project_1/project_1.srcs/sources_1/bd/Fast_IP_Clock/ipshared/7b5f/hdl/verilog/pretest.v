// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module pretest (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        x_V,
        y_V,
        ap_return
);

parameter    ap_ST_fsm_state1 = 8'd1;
parameter    ap_ST_fsm_state2 = 8'd2;
parameter    ap_ST_fsm_state3 = 8'd4;
parameter    ap_ST_fsm_state4 = 8'd8;
parameter    ap_ST_fsm_state5 = 8'd16;
parameter    ap_ST_fsm_state6 = 8'd32;
parameter    ap_ST_fsm_state7 = 8'd64;
parameter    ap_ST_fsm_state8 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [39:0] x_V;
input  [39:0] y_V;
output  [0:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [79:0] r_V_7_fu_86_p2;
reg   [79:0] r_V_7_reg_841;
reg   [0:0] p_Result_s_reg_850;
wire   [33:0] tmp_11_fu_100_p1;
reg   [33:0] tmp_11_reg_856;
reg   [3:0] p_Result_s_17_reg_861;
reg   [4:0] p_Result_1_reg_866;
wire  signed [39:0] p_Val2_6_fu_202_p3;
reg  signed [39:0] p_Val2_6_reg_872;
wire   [40:0] ret_V_1_fu_210_p2;
reg   [40:0] ret_V_1_reg_878;
wire   [39:0] y2_V_1_fu_267_p2;
reg   [39:0] y2_V_1_reg_883;
wire    ap_CS_fsm_state2;
wire   [0:0] carry_1_fu_287_p2;
reg   [0:0] carry_1_reg_889;
wire   [0:0] p_Result_3_fu_293_p3;
reg   [0:0] p_Result_3_reg_895;
wire   [0:0] Range1_all_ones_fu_306_p2;
reg   [0:0] Range1_all_ones_reg_900;
wire   [0:0] Range1_all_zeros_fu_311_p2;
reg   [0:0] Range1_all_zeros_reg_906;
wire   [0:0] brmerge961_demorgan_fu_343_p2;
reg   [0:0] brmerge961_demorgan_reg_911;
wire  signed [79:0] r_V_6_cast_fu_349_p1;
wire   [39:0] p_Val2_13_fu_436_p3;
reg   [39:0] p_Val2_13_reg_923;
wire    ap_CS_fsm_state3;
wire   [79:0] r_V_8_fu_447_p2;
reg   [79:0] r_V_8_reg_931;
wire   [33:0] tmp_28_fu_453_p1;
reg   [33:0] tmp_28_reg_936;
wire   [79:0] grp_fu_352_p2;
reg   [79:0] r_V_9_reg_941;
wire   [79:0] ret_V_6_fu_468_p2;
reg   [79:0] ret_V_6_reg_946;
wire    ap_CS_fsm_state4;
reg   [0:0] p_Result_6_reg_951;
wire   [39:0] q_V_1_fu_536_p2;
reg   [39:0] q_V_1_reg_957;
wire   [0:0] carry_3_fu_556_p2;
reg   [0:0] carry_3_reg_963;
reg   [0:0] p_Result_8_reg_970;
wire   [0:0] Range2_all_ones_1_fu_580_p2;
reg   [0:0] Range2_all_ones_1_reg_976;
wire   [0:0] Range1_all_ones_2_fu_596_p2;
reg   [0:0] Range1_all_ones_2_reg_981;
wire   [0:0] Range1_all_zeros_1_fu_602_p2;
reg   [0:0] Range1_all_zeros_1_reg_988;
wire   [0:0] notrhs_fu_613_p2;
reg   [0:0] notrhs_reg_993;
wire  signed [39:0] p_Val2_11_fu_728_p3;
reg  signed [39:0] p_Val2_11_reg_998;
wire    ap_CS_fsm_state5;
wire   [40:0] ret_V_fu_743_p2;
reg  signed [40:0] ret_V_reg_1003;
wire    ap_CS_fsm_state6;
wire   [80:0] grp_fu_755_p2;
reg   [80:0] r_V_5_reg_1018;
wire    ap_CS_fsm_state7;
reg   [37:0] tmp_reg_1023;
wire  signed [39:0] r_V_7_fu_86_p0;
wire  signed [79:0] r_V_fu_82_p1;
wire  signed [39:0] r_V_7_fu_86_p1;
wire  signed [39:0] lhs_V_fu_124_p0;
wire  signed [40:0] lhs_V_fu_124_p1;
wire   [40:0] ret_V_5_fu_128_p2;
wire  signed [39:0] x_1_V_fu_142_p1;
wire   [39:0] x_1_V_fu_142_p2;
wire   [0:0] p_Result_5_fu_148_p3;
wire   [0:0] p_Result_4_fu_134_p3;
wire   [0:0] tmp_1_fu_156_p2;
wire   [0:0] signbit_i_i_i_i160_fu_174_p2;
wire   [0:0] brmerge5_fu_168_p2;
wire   [0:0] underflow_1_fu_162_p2;
wire   [0:0] brmerge6_fu_180_p2;
wire   [39:0] p_mux1_fu_186_p3;
wire   [39:0] p_7_fu_194_p3;
wire   [0:0] r_1_fu_232_p2;
wire   [0:0] tmp_4_fu_225_p3;
wire   [0:0] tmp_20_fu_250_p3;
wire   [0:0] r_assign_1_fu_244_p2;
wire   [0:0] tmp_7_fu_257_p2;
wire   [39:0] tmp_8_fu_263_p1;
wire   [39:0] y2_V_fu_216_p4;
wire   [0:0] tmp_21_fu_273_p3;
wire   [0:0] p_Result_2_fu_237_p3;
wire   [0:0] rev_fu_281_p2;
wire   [0:0] tmp_23_fu_316_p3;
wire   [0:0] Range2_all_ones_fu_301_p2;
wire   [0:0] rev1_fu_323_p2;
wire   [0:0] p_s_fu_329_p2;
wire   [0:0] deleted_ones_fu_335_p3;
wire  signed [40:0] grp_fu_352_p0;
wire  signed [40:0] grp_fu_352_p1;
wire   [0:0] deleted_zeros_fu_358_p3;
wire   [0:0] p_not_fu_367_p2;
wire   [0:0] brmerge_fu_373_p2;
wire   [0:0] tmp_9_fu_378_p2;
wire   [0:0] phitmp959_demorgan_fu_363_p2;
wire   [0:0] tmp2_demorgan_fu_389_p2;
wire   [0:0] tmp2_fu_394_p2;
wire   [0:0] underflow_fu_400_p2;
wire   [0:0] overflow_fu_383_p2;
wire   [0:0] tmp3_fu_411_p2;
wire   [0:0] brmerge2_fu_405_p2;
wire   [0:0] p_984_not_fu_416_p2;
wire   [39:0] p_mux_fu_422_p3;
wire   [39:0] p_4_fu_429_p3;
wire  signed [39:0] r_V_8_fu_447_p0;
wire  signed [79:0] r_V_2_fu_444_p1;
wire  signed [39:0] r_V_8_fu_447_p1;
wire   [74:0] rhs_V_fu_457_p3;
wire  signed [79:0] rhs_V_1_cast_fu_464_p1;
wire   [0:0] r_2_fu_499_p2;
wire   [0:0] tmp_27_fu_491_p3;
wire   [0:0] tmp_30_fu_518_p3;
wire   [0:0] r_fu_512_p2;
wire   [0:0] tmp_6_fu_526_p2;
wire   [39:0] tmp_2_fu_532_p1;
wire   [39:0] q_V_fu_481_p4;
wire   [0:0] tmp_31_fu_542_p3;
wire   [0:0] p_Result_7_fu_504_p3;
wire   [0:0] rev2_fu_550_p2;
wire   [3:0] tmp_5_fu_570_p4;
wire   [4:0] tmp_s_fu_586_p4;
wire   [79:0] ret_V_2_fu_608_p2;
wire   [0:0] tmp_33_fu_624_p3;
wire   [0:0] rev3_fu_631_p2;
wire   [0:0] p_8_fu_637_p2;
wire   [0:0] deleted_zeros_1_fu_619_p3;
wire   [0:0] p_not2_fu_652_p2;
wire   [0:0] brmerge7_fu_658_p2;
wire   [0:0] tmp_3_fu_663_p2;
wire   [0:0] deleted_ones_2_fu_642_p3;
wire   [0:0] phitmp_demorgan_fu_648_p2;
wire   [0:0] brmerge973_demorgan_fu_674_p2;
wire   [0:0] tmp4_demorgan_fu_679_p2;
wire   [0:0] tmp4_fu_685_p2;
wire   [0:0] underflow_2_fu_691_p2;
wire   [0:0] overflow_1_fu_668_p2;
wire   [0:0] tmp5_fu_702_p2;
wire   [0:0] brmerge9_fu_696_p2;
wire   [0:0] p_985_not_fu_708_p2;
wire   [39:0] p_mux2_fu_714_p3;
wire   [39:0] p_1_fu_721_p3;
wire  signed [40:0] lhs_V_1_fu_736_p1;
wire  signed [40:0] rhs_V_1_fu_740_p1;
wire   [39:0] p_neg_fu_761_p2;
wire    ap_CS_fsm_state8;
wire   [38:0] p_lshr_cast_fu_783_p1;
wire   [37:0] tmp_12_fu_792_p4;
wire   [0:0] tmp_34_fu_776_p3;
wire   [38:0] p_neg_t_fu_786_p2;
wire   [38:0] tmp_13_fu_801_p1;
wire   [38:0] tmp_14_fu_805_p3;
wire   [73:0] tmp_15_fu_813_p3;
wire  signed [80:0] tmp_16_fu_821_p1;
wire   [0:0] slt_fu_825_p2;
wire   [0:0] rev4_fu_830_p2;
reg   [7:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
end

calc_mul_41s_41s_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 41 ),
    .din1_WIDTH( 41 ),
    .dout_WIDTH( 80 ))
calc_mul_41s_41s_bkb_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_352_p0),
    .din1(grp_fu_352_p1),
    .ce(1'b1),
    .dout(grp_fu_352_p2)
);

calc_mul_40s_41s_cud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 40 ),
    .din1_WIDTH( 41 ),
    .dout_WIDTH( 81 ))
calc_mul_40s_41s_cud_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_Val2_11_reg_998),
    .din1(ret_V_reg_1003),
    .ce(1'b1),
    .dout(grp_fu_755_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        Range1_all_ones_2_reg_981 <= Range1_all_ones_2_fu_596_p2;
        Range1_all_zeros_1_reg_988 <= Range1_all_zeros_1_fu_602_p2;
        Range2_all_ones_1_reg_976 <= Range2_all_ones_1_fu_580_p2;
        carry_3_reg_963 <= carry_3_fu_556_p2;
        notrhs_reg_993 <= notrhs_fu_613_p2;
        p_Result_6_reg_951 <= ret_V_6_fu_468_p2[32'd79];
        p_Result_8_reg_970 <= q_V_1_fu_536_p2[32'd39];
        q_V_1_reg_957 <= q_V_1_fu_536_p2;
        ret_V_6_reg_946 <= ret_V_6_fu_468_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        Range1_all_ones_reg_900 <= Range1_all_ones_fu_306_p2;
        Range1_all_zeros_reg_906 <= Range1_all_zeros_fu_311_p2;
        brmerge961_demorgan_reg_911 <= brmerge961_demorgan_fu_343_p2;
        carry_1_reg_889 <= carry_1_fu_287_p2;
        p_Result_3_reg_895 <= y2_V_1_fu_267_p2[32'd39];
        y2_V_1_reg_883 <= y2_V_1_fu_267_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        p_Result_1_reg_866 <= {{r_V_7_fu_86_p2[79:75]}};
        p_Result_s_17_reg_861 <= {{r_V_7_fu_86_p2[79:76]}};
        p_Result_s_reg_850 <= r_V_7_fu_86_p2[32'd79];
        p_Val2_6_reg_872 <= p_Val2_6_fu_202_p3;
        r_V_7_reg_841 <= r_V_7_fu_86_p2;
        ret_V_1_reg_878 <= ret_V_1_fu_210_p2;
        tmp_11_reg_856 <= tmp_11_fu_100_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        p_Val2_11_reg_998 <= p_Val2_11_fu_728_p3;
        ret_V_reg_1003 <= ret_V_fu_743_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        p_Val2_13_reg_923 <= p_Val2_13_fu_436_p3;
        r_V_8_reg_931 <= r_V_8_fu_447_p2;
        r_V_9_reg_941 <= grp_fu_352_p2;
        tmp_28_reg_936 <= tmp_28_fu_453_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        r_V_5_reg_1018 <= grp_fu_755_p2;
        tmp_reg_1023 <= {{p_neg_fu_761_p2[39:2]}};
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Range1_all_ones_2_fu_596_p2 = ((tmp_s_fu_586_p4 == 5'd31) ? 1'b1 : 1'b0);

assign Range1_all_ones_fu_306_p2 = ((p_Result_1_reg_866 == 5'd31) ? 1'b1 : 1'b0);

assign Range1_all_zeros_1_fu_602_p2 = ((tmp_s_fu_586_p4 == 5'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_fu_311_p2 = ((p_Result_1_reg_866 == 5'd0) ? 1'b1 : 1'b0);

assign Range2_all_ones_1_fu_580_p2 = ((tmp_5_fu_570_p4 == 4'd15) ? 1'b1 : 1'b0);

assign Range2_all_ones_fu_301_p2 = ((p_Result_s_17_reg_861 == 4'd15) ? 1'b1 : 1'b0);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_return = (rev4_fu_830_p2 | notrhs_reg_993);

assign brmerge2_fu_405_p2 = (underflow_fu_400_p2 | overflow_fu_383_p2);

assign brmerge5_fu_168_p2 = (p_Result_5_fu_148_p3 ^ p_Result_4_fu_134_p3);

assign brmerge6_fu_180_p2 = (signbit_i_i_i_i160_fu_174_p2 | p_Result_5_fu_148_p3);

assign brmerge7_fu_658_p2 = (p_not2_fu_652_p2 | p_Result_8_reg_970);

assign brmerge961_demorgan_fu_343_p2 = (p_Result_3_fu_293_p3 & deleted_ones_fu_335_p3);

assign brmerge973_demorgan_fu_674_p2 = (p_Result_8_reg_970 & deleted_ones_2_fu_642_p3);

assign brmerge9_fu_696_p2 = (underflow_2_fu_691_p2 | overflow_1_fu_668_p2);

assign brmerge_fu_373_p2 = (p_not_fu_367_p2 | p_Result_3_reg_895);

assign carry_1_fu_287_p2 = (rev_fu_281_p2 & p_Result_2_fu_237_p3);

assign carry_3_fu_556_p2 = (rev2_fu_550_p2 & p_Result_7_fu_504_p3);

assign deleted_ones_2_fu_642_p3 = ((carry_3_reg_963[0:0] === 1'b1) ? p_8_fu_637_p2 : Range1_all_ones_2_reg_981);

assign deleted_ones_fu_335_p3 = ((carry_1_fu_287_p2[0:0] === 1'b1) ? p_s_fu_329_p2 : Range1_all_ones_fu_306_p2);

assign deleted_zeros_1_fu_619_p3 = ((carry_3_reg_963[0:0] === 1'b1) ? Range1_all_ones_2_reg_981 : Range1_all_zeros_1_reg_988);

assign deleted_zeros_fu_358_p3 = ((carry_1_reg_889[0:0] === 1'b1) ? Range1_all_ones_reg_900 : Range1_all_zeros_reg_906);

assign grp_fu_352_p0 = r_V_6_cast_fu_349_p1;

assign grp_fu_352_p1 = r_V_6_cast_fu_349_p1;

assign lhs_V_1_fu_736_p1 = p_Val2_11_fu_728_p3;

assign lhs_V_fu_124_p0 = x_V;

assign lhs_V_fu_124_p1 = lhs_V_fu_124_p0;

assign notrhs_fu_613_p2 = (($signed(ret_V_2_fu_608_p2) < $signed(80'd73786976294838206465)) ? 1'b1 : 1'b0);

assign overflow_1_fu_668_p2 = (tmp_3_fu_663_p2 & brmerge7_fu_658_p2);

assign overflow_fu_383_p2 = (tmp_9_fu_378_p2 & brmerge_fu_373_p2);

assign p_1_fu_721_p3 = ((underflow_2_fu_691_p2[0:0] === 1'b1) ? 40'd549755813888 : q_V_1_reg_957);

assign p_4_fu_429_p3 = ((underflow_fu_400_p2[0:0] === 1'b1) ? 40'd549755813888 : y2_V_1_reg_883);

assign p_7_fu_194_p3 = ((underflow_1_fu_162_p2[0:0] === 1'b1) ? 40'd549755813888 : x_1_V_fu_142_p2);

assign p_8_fu_637_p2 = (rev3_fu_631_p2 & Range2_all_ones_1_reg_976);

assign p_984_not_fu_416_p2 = (tmp3_fu_411_p2 | phitmp959_demorgan_fu_363_p2);

assign p_985_not_fu_708_p2 = (tmp5_fu_702_p2 | phitmp_demorgan_fu_648_p2);

assign p_Result_2_fu_237_p3 = r_V_7_reg_841[32'd74];

assign p_Result_3_fu_293_p3 = y2_V_1_fu_267_p2[32'd39];

assign p_Result_4_fu_134_p3 = ret_V_5_fu_128_p2[32'd40];

assign p_Result_5_fu_148_p3 = x_1_V_fu_142_p2[32'd39];

assign p_Result_7_fu_504_p3 = ret_V_6_fu_468_p2[32'd74];

assign p_Val2_11_fu_728_p3 = ((p_985_not_fu_708_p2[0:0] === 1'b1) ? p_mux2_fu_714_p3 : p_1_fu_721_p3);

assign p_Val2_13_fu_436_p3 = ((p_984_not_fu_416_p2[0:0] === 1'b1) ? p_mux_fu_422_p3 : p_4_fu_429_p3);

assign p_Val2_6_fu_202_p3 = ((brmerge6_fu_180_p2[0:0] === 1'b1) ? p_mux1_fu_186_p3 : p_7_fu_194_p3);

assign p_lshr_cast_fu_783_p1 = tmp_reg_1023;

assign p_mux1_fu_186_p3 = ((brmerge5_fu_168_p2[0:0] === 1'b1) ? 40'd549755813887 : x_1_V_fu_142_p2);

assign p_mux2_fu_714_p3 = ((brmerge9_fu_696_p2[0:0] === 1'b1) ? 40'd549755813887 : q_V_1_reg_957);

assign p_mux_fu_422_p3 = ((brmerge2_fu_405_p2[0:0] === 1'b1) ? 40'd549755813887 : y2_V_1_reg_883);

assign p_neg_fu_761_p2 = (40'd0 - p_Val2_13_reg_923);

assign p_neg_t_fu_786_p2 = (39'd0 - p_lshr_cast_fu_783_p1);

assign p_not2_fu_652_p2 = (deleted_zeros_1_fu_619_p3 ^ 1'd1);

assign p_not_fu_367_p2 = (deleted_zeros_fu_358_p3 ^ 1'd1);

assign p_s_fu_329_p2 = (rev1_fu_323_p2 & Range2_all_ones_fu_301_p2);

assign phitmp959_demorgan_fu_363_p2 = (carry_1_reg_889 & Range1_all_ones_reg_900);

assign phitmp_demorgan_fu_648_p2 = (carry_3_reg_963 & Range1_all_ones_2_reg_981);

assign q_V_1_fu_536_p2 = (tmp_2_fu_532_p1 + q_V_fu_481_p4);

assign q_V_fu_481_p4 = {{ret_V_6_fu_468_p2[74:35]}};

assign r_1_fu_232_p2 = ((tmp_11_reg_856 != 34'd0) ? 1'b1 : 1'b0);

assign r_2_fu_499_p2 = ((tmp_28_reg_936 != 34'd0) ? 1'b1 : 1'b0);

assign r_V_2_fu_444_p1 = p_Val2_6_reg_872;

assign r_V_6_cast_fu_349_p1 = $signed(ret_V_1_reg_878);

assign r_V_7_fu_86_p0 = r_V_fu_82_p1;

assign r_V_7_fu_86_p1 = r_V_fu_82_p1;

assign r_V_7_fu_86_p2 = ($signed(r_V_7_fu_86_p0) * $signed(r_V_7_fu_86_p1));

assign r_V_8_fu_447_p0 = r_V_2_fu_444_p1;

assign r_V_8_fu_447_p1 = r_V_2_fu_444_p1;

assign r_V_8_fu_447_p2 = ($signed(r_V_8_fu_447_p0) * $signed(r_V_8_fu_447_p1));

assign r_V_fu_82_p1 = $signed(y_V);

assign r_assign_1_fu_244_p2 = (tmp_4_fu_225_p3 | r_1_fu_232_p2);

assign r_fu_512_p2 = (tmp_27_fu_491_p3 | r_2_fu_499_p2);

assign ret_V_1_fu_210_p2 = ($signed(41'd34359738368) + $signed(lhs_V_fu_124_p1));

assign ret_V_2_fu_608_p2 = ($signed(r_V_9_reg_941) + $signed(rhs_V_1_cast_fu_464_p1));

assign ret_V_5_fu_128_p2 = ($signed(41'd2190433320960) + $signed(lhs_V_fu_124_p1));

assign ret_V_6_fu_468_p2 = ($signed(r_V_8_reg_931) + $signed(rhs_V_1_cast_fu_464_p1));

assign ret_V_fu_743_p2 = ($signed(lhs_V_1_fu_736_p1) + $signed(rhs_V_1_fu_740_p1));

assign rev1_fu_323_p2 = (tmp_23_fu_316_p3 ^ 1'd1);

assign rev2_fu_550_p2 = (tmp_31_fu_542_p3 ^ 1'd1);

assign rev3_fu_631_p2 = (tmp_33_fu_624_p3 ^ 1'd1);

assign rev4_fu_830_p2 = (slt_fu_825_p2 ^ 1'd1);

assign rev_fu_281_p2 = (tmp_21_fu_273_p3 ^ 1'd1);

assign rhs_V_1_cast_fu_464_p1 = $signed(rhs_V_fu_457_p3);

assign rhs_V_1_fu_740_p1 = p_Val2_6_reg_872;

assign rhs_V_fu_457_p3 = {{p_Val2_13_reg_923}, {35'd0}};

assign signbit_i_i_i_i160_fu_174_p2 = (p_Result_4_fu_134_p3 ^ 1'd1);

assign slt_fu_825_p2 = (($signed(tmp_16_fu_821_p1) < $signed(r_V_5_reg_1018)) ? 1'b1 : 1'b0);

assign tmp2_demorgan_fu_389_p2 = (phitmp959_demorgan_fu_363_p2 | brmerge961_demorgan_reg_911);

assign tmp2_fu_394_p2 = (tmp2_demorgan_fu_389_p2 ^ 1'd1);

assign tmp3_fu_411_p2 = (tmp_9_fu_378_p2 | brmerge961_demorgan_reg_911);

assign tmp4_demorgan_fu_679_p2 = (phitmp_demorgan_fu_648_p2 | brmerge973_demorgan_fu_674_p2);

assign tmp4_fu_685_p2 = (tmp4_demorgan_fu_679_p2 ^ 1'd1);

assign tmp5_fu_702_p2 = (tmp_3_fu_663_p2 | brmerge973_demorgan_fu_674_p2);

assign tmp_11_fu_100_p1 = r_V_7_fu_86_p2[33:0];

assign tmp_12_fu_792_p4 = {{p_Val2_13_reg_923[39:2]}};

assign tmp_13_fu_801_p1 = tmp_12_fu_792_p4;

assign tmp_14_fu_805_p3 = ((tmp_34_fu_776_p3[0:0] === 1'b1) ? p_neg_t_fu_786_p2 : tmp_13_fu_801_p1);

assign tmp_15_fu_813_p3 = {{tmp_14_fu_805_p3}, {35'd0}};

assign tmp_16_fu_821_p1 = $signed(tmp_15_fu_813_p3);

assign tmp_1_fu_156_p2 = (p_Result_5_fu_148_p3 ^ 1'd1);

assign tmp_20_fu_250_p3 = r_V_7_reg_841[32'd34];

assign tmp_21_fu_273_p3 = y2_V_1_fu_267_p2[32'd39];

assign tmp_23_fu_316_p3 = r_V_7_reg_841[32'd75];

assign tmp_27_fu_491_p3 = ret_V_6_fu_468_p2[32'd35];

assign tmp_28_fu_453_p1 = r_V_8_fu_447_p2[33:0];

assign tmp_2_fu_532_p1 = tmp_6_fu_526_p2;

assign tmp_30_fu_518_p3 = ret_V_6_fu_468_p2[32'd34];

assign tmp_31_fu_542_p3 = q_V_1_fu_536_p2[32'd39];

assign tmp_33_fu_624_p3 = ret_V_6_reg_946[32'd75];

assign tmp_34_fu_776_p3 = p_Val2_13_reg_923[32'd39];

assign tmp_3_fu_663_p2 = (p_Result_6_reg_951 ^ 1'd1);

assign tmp_4_fu_225_p3 = r_V_7_reg_841[32'd35];

assign tmp_5_fu_570_p4 = {{ret_V_6_fu_468_p2[79:76]}};

assign tmp_6_fu_526_p2 = (tmp_30_fu_518_p3 & r_fu_512_p2);

assign tmp_7_fu_257_p2 = (tmp_20_fu_250_p3 & r_assign_1_fu_244_p2);

assign tmp_8_fu_263_p1 = tmp_7_fu_257_p2;

assign tmp_9_fu_378_p2 = (p_Result_s_reg_850 ^ 1'd1);

assign tmp_s_fu_586_p4 = {{ret_V_6_fu_468_p2[79:75]}};

assign underflow_1_fu_162_p2 = (tmp_1_fu_156_p2 & p_Result_4_fu_134_p3);

assign underflow_2_fu_691_p2 = (tmp4_fu_685_p2 & p_Result_6_reg_951);

assign underflow_fu_400_p2 = (tmp2_fu_394_p2 & p_Result_s_reg_850);

assign x_1_V_fu_142_p1 = x_V;

assign x_1_V_fu_142_p2 = ($signed(40'd1090921693184) + $signed(x_1_V_fu_142_p1));

assign y2_V_1_fu_267_p2 = (tmp_8_fu_263_p1 + y2_V_fu_216_p4);

assign y2_V_fu_216_p4 = {{r_V_7_reg_841[74:35]}};

endmodule //pretest
