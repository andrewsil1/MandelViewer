// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="calc,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7a100tcsg324-1,HLS_INPUT_CLOCK=6.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=5.250000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=12,HLS_SYN_DSP=176,HLS_SYN_FF=22082,HLS_SYN_LUT=24974,HLS_VERSION=2018_3}" *)

module calc (
        ap_clk,
        ap_rst_n,
        m_axi_buf_r_AWVALID,
        m_axi_buf_r_AWREADY,
        m_axi_buf_r_AWADDR,
        m_axi_buf_r_AWID,
        m_axi_buf_r_AWLEN,
        m_axi_buf_r_AWSIZE,
        m_axi_buf_r_AWBURST,
        m_axi_buf_r_AWLOCK,
        m_axi_buf_r_AWCACHE,
        m_axi_buf_r_AWPROT,
        m_axi_buf_r_AWQOS,
        m_axi_buf_r_AWREGION,
        m_axi_buf_r_AWUSER,
        m_axi_buf_r_WVALID,
        m_axi_buf_r_WREADY,
        m_axi_buf_r_WDATA,
        m_axi_buf_r_WSTRB,
        m_axi_buf_r_WLAST,
        m_axi_buf_r_WID,
        m_axi_buf_r_WUSER,
        m_axi_buf_r_ARVALID,
        m_axi_buf_r_ARREADY,
        m_axi_buf_r_ARADDR,
        m_axi_buf_r_ARID,
        m_axi_buf_r_ARLEN,
        m_axi_buf_r_ARSIZE,
        m_axi_buf_r_ARBURST,
        m_axi_buf_r_ARLOCK,
        m_axi_buf_r_ARCACHE,
        m_axi_buf_r_ARPROT,
        m_axi_buf_r_ARQOS,
        m_axi_buf_r_ARREGION,
        m_axi_buf_r_ARUSER,
        m_axi_buf_r_RVALID,
        m_axi_buf_r_RREADY,
        m_axi_buf_r_RDATA,
        m_axi_buf_r_RLAST,
        m_axi_buf_r_RID,
        m_axi_buf_r_RUSER,
        m_axi_buf_r_RRESP,
        m_axi_buf_r_BVALID,
        m_axi_buf_r_BREADY,
        m_axi_buf_r_BRESP,
        m_axi_buf_r_BID,
        m_axi_buf_r_BUSER,
        s_axi_in_parms_AWVALID,
        s_axi_in_parms_AWREADY,
        s_axi_in_parms_AWADDR,
        s_axi_in_parms_WVALID,
        s_axi_in_parms_WREADY,
        s_axi_in_parms_WDATA,
        s_axi_in_parms_WSTRB,
        s_axi_in_parms_ARVALID,
        s_axi_in_parms_ARREADY,
        s_axi_in_parms_ARADDR,
        s_axi_in_parms_RVALID,
        s_axi_in_parms_RREADY,
        s_axi_in_parms_RDATA,
        s_axi_in_parms_RRESP,
        s_axi_in_parms_BVALID,
        s_axi_in_parms_BREADY,
        s_axi_in_parms_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 61'd1;
parameter    ap_ST_fsm_state2 = 61'd2;
parameter    ap_ST_fsm_state3 = 61'd4;
parameter    ap_ST_fsm_state4 = 61'd8;
parameter    ap_ST_fsm_state5 = 61'd16;
parameter    ap_ST_fsm_state6 = 61'd32;
parameter    ap_ST_fsm_state7 = 61'd64;
parameter    ap_ST_fsm_state8 = 61'd128;
parameter    ap_ST_fsm_state9 = 61'd256;
parameter    ap_ST_fsm_state10 = 61'd512;
parameter    ap_ST_fsm_state11 = 61'd1024;
parameter    ap_ST_fsm_state12 = 61'd2048;
parameter    ap_ST_fsm_state13 = 61'd4096;
parameter    ap_ST_fsm_state14 = 61'd8192;
parameter    ap_ST_fsm_state15 = 61'd16384;
parameter    ap_ST_fsm_state16 = 61'd32768;
parameter    ap_ST_fsm_state17 = 61'd65536;
parameter    ap_ST_fsm_state18 = 61'd131072;
parameter    ap_ST_fsm_state19 = 61'd262144;
parameter    ap_ST_fsm_state20 = 61'd524288;
parameter    ap_ST_fsm_state21 = 61'd1048576;
parameter    ap_ST_fsm_state22 = 61'd2097152;
parameter    ap_ST_fsm_state23 = 61'd4194304;
parameter    ap_ST_fsm_state24 = 61'd8388608;
parameter    ap_ST_fsm_state25 = 61'd16777216;
parameter    ap_ST_fsm_state26 = 61'd33554432;
parameter    ap_ST_fsm_state27 = 61'd67108864;
parameter    ap_ST_fsm_state28 = 61'd134217728;
parameter    ap_ST_fsm_state29 = 61'd268435456;
parameter    ap_ST_fsm_state30 = 61'd536870912;
parameter    ap_ST_fsm_state31 = 61'd1073741824;
parameter    ap_ST_fsm_state32 = 61'd2147483648;
parameter    ap_ST_fsm_state33 = 61'd4294967296;
parameter    ap_ST_fsm_state34 = 61'd8589934592;
parameter    ap_ST_fsm_state35 = 61'd17179869184;
parameter    ap_ST_fsm_state36 = 61'd34359738368;
parameter    ap_ST_fsm_state37 = 61'd68719476736;
parameter    ap_ST_fsm_state38 = 61'd137438953472;
parameter    ap_ST_fsm_state39 = 61'd274877906944;
parameter    ap_ST_fsm_state40 = 61'd549755813888;
parameter    ap_ST_fsm_state41 = 61'd1099511627776;
parameter    ap_ST_fsm_state42 = 61'd2199023255552;
parameter    ap_ST_fsm_state43 = 61'd4398046511104;
parameter    ap_ST_fsm_state44 = 61'd8796093022208;
parameter    ap_ST_fsm_state45 = 61'd17592186044416;
parameter    ap_ST_fsm_state46 = 61'd35184372088832;
parameter    ap_ST_fsm_state47 = 61'd70368744177664;
parameter    ap_ST_fsm_state48 = 61'd140737488355328;
parameter    ap_ST_fsm_state49 = 61'd281474976710656;
parameter    ap_ST_fsm_state50 = 61'd562949953421312;
parameter    ap_ST_fsm_state51 = 61'd1125899906842624;
parameter    ap_ST_fsm_state52 = 61'd2251799813685248;
parameter    ap_ST_fsm_state53 = 61'd4503599627370496;
parameter    ap_ST_fsm_state54 = 61'd9007199254740992;
parameter    ap_ST_fsm_state55 = 61'd18014398509481984;
parameter    ap_ST_fsm_state56 = 61'd36028797018963968;
parameter    ap_ST_fsm_state57 = 61'd72057594037927936;
parameter    ap_ST_fsm_state58 = 61'd144115188075855872;
parameter    ap_ST_fsm_state59 = 61'd288230376151711744;
parameter    ap_ST_fsm_pp0_stage0 = 61'd576460752303423488;
parameter    ap_ST_fsm_state69 = 61'd1152921504606846976;
parameter    C_S_AXI_IN_PARMS_DATA_WIDTH = 32;
parameter    C_S_AXI_IN_PARMS_ADDR_WIDTH = 7;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_BUF_R_ID_WIDTH = 1;
parameter    C_M_AXI_BUF_R_ADDR_WIDTH = 32;
parameter    C_M_AXI_BUF_R_DATA_WIDTH = 32;
parameter    C_M_AXI_BUF_R_AWUSER_WIDTH = 1;
parameter    C_M_AXI_BUF_R_ARUSER_WIDTH = 1;
parameter    C_M_AXI_BUF_R_WUSER_WIDTH = 1;
parameter    C_M_AXI_BUF_R_RUSER_WIDTH = 1;
parameter    C_M_AXI_BUF_R_BUSER_WIDTH = 1;
parameter    C_M_AXI_BUF_R_TARGET_ADDR = 0;
parameter    C_M_AXI_BUF_R_USER_VALUE = 0;
parameter    C_M_AXI_BUF_R_PROT_VALUE = 0;
parameter    C_M_AXI_BUF_R_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_IN_PARMS_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_BUF_R_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_buf_r_AWVALID;
input   m_axi_buf_r_AWREADY;
output  [C_M_AXI_BUF_R_ADDR_WIDTH - 1:0] m_axi_buf_r_AWADDR;
output  [C_M_AXI_BUF_R_ID_WIDTH - 1:0] m_axi_buf_r_AWID;
output  [7:0] m_axi_buf_r_AWLEN;
output  [2:0] m_axi_buf_r_AWSIZE;
output  [1:0] m_axi_buf_r_AWBURST;
output  [1:0] m_axi_buf_r_AWLOCK;
output  [3:0] m_axi_buf_r_AWCACHE;
output  [2:0] m_axi_buf_r_AWPROT;
output  [3:0] m_axi_buf_r_AWQOS;
output  [3:0] m_axi_buf_r_AWREGION;
output  [C_M_AXI_BUF_R_AWUSER_WIDTH - 1:0] m_axi_buf_r_AWUSER;
output   m_axi_buf_r_WVALID;
input   m_axi_buf_r_WREADY;
output  [C_M_AXI_BUF_R_DATA_WIDTH - 1:0] m_axi_buf_r_WDATA;
output  [C_M_AXI_BUF_R_WSTRB_WIDTH - 1:0] m_axi_buf_r_WSTRB;
output   m_axi_buf_r_WLAST;
output  [C_M_AXI_BUF_R_ID_WIDTH - 1:0] m_axi_buf_r_WID;
output  [C_M_AXI_BUF_R_WUSER_WIDTH - 1:0] m_axi_buf_r_WUSER;
output   m_axi_buf_r_ARVALID;
input   m_axi_buf_r_ARREADY;
output  [C_M_AXI_BUF_R_ADDR_WIDTH - 1:0] m_axi_buf_r_ARADDR;
output  [C_M_AXI_BUF_R_ID_WIDTH - 1:0] m_axi_buf_r_ARID;
output  [7:0] m_axi_buf_r_ARLEN;
output  [2:0] m_axi_buf_r_ARSIZE;
output  [1:0] m_axi_buf_r_ARBURST;
output  [1:0] m_axi_buf_r_ARLOCK;
output  [3:0] m_axi_buf_r_ARCACHE;
output  [2:0] m_axi_buf_r_ARPROT;
output  [3:0] m_axi_buf_r_ARQOS;
output  [3:0] m_axi_buf_r_ARREGION;
output  [C_M_AXI_BUF_R_ARUSER_WIDTH - 1:0] m_axi_buf_r_ARUSER;
input   m_axi_buf_r_RVALID;
output   m_axi_buf_r_RREADY;
input  [C_M_AXI_BUF_R_DATA_WIDTH - 1:0] m_axi_buf_r_RDATA;
input   m_axi_buf_r_RLAST;
input  [C_M_AXI_BUF_R_ID_WIDTH - 1:0] m_axi_buf_r_RID;
input  [C_M_AXI_BUF_R_RUSER_WIDTH - 1:0] m_axi_buf_r_RUSER;
input  [1:0] m_axi_buf_r_RRESP;
input   m_axi_buf_r_BVALID;
output   m_axi_buf_r_BREADY;
input  [1:0] m_axi_buf_r_BRESP;
input  [C_M_AXI_BUF_R_ID_WIDTH - 1:0] m_axi_buf_r_BID;
input  [C_M_AXI_BUF_R_BUSER_WIDTH - 1:0] m_axi_buf_r_BUSER;
input   s_axi_in_parms_AWVALID;
output   s_axi_in_parms_AWREADY;
input  [C_S_AXI_IN_PARMS_ADDR_WIDTH - 1:0] s_axi_in_parms_AWADDR;
input   s_axi_in_parms_WVALID;
output   s_axi_in_parms_WREADY;
input  [C_S_AXI_IN_PARMS_DATA_WIDTH - 1:0] s_axi_in_parms_WDATA;
input  [C_S_AXI_IN_PARMS_WSTRB_WIDTH - 1:0] s_axi_in_parms_WSTRB;
input   s_axi_in_parms_ARVALID;
output   s_axi_in_parms_ARREADY;
input  [C_S_AXI_IN_PARMS_ADDR_WIDTH - 1:0] s_axi_in_parms_ARADDR;
output   s_axi_in_parms_RVALID;
input   s_axi_in_parms_RREADY;
output  [C_S_AXI_IN_PARMS_DATA_WIDTH - 1:0] s_axi_in_parms_RDATA;
output  [1:0] s_axi_in_parms_RRESP;
output   s_axi_in_parms_BVALID;
input   s_axi_in_parms_BREADY;
output  [1:0] s_axi_in_parms_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [60:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [39:0] X0_V;
wire   [39:0] Y0_V;
wire   [39:0] X1_V;
wire   [11:0] width_V;
wire   [15:0] maxIter;
reg    buf_r_blk_n_AW;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond2_reg_2483;
reg   [0:0] exitcond2_reg_2483_pp0_iter1_reg;
reg    buf_r_blk_n_W;
reg    ap_enable_reg_pp0_iter3;
reg   [0:0] exitcond2_reg_2483_pp0_iter2_reg;
reg    buf_r_blk_n_B;
reg    ap_enable_reg_pp0_iter8;
reg   [0:0] exitcond2_reg_2483_pp0_iter7_reg;
reg    buf_r_AWVALID;
wire    buf_r_AWREADY;
wire   [31:0] buf_r_AWADDR;
reg    buf_r_WVALID;
wire    buf_r_WREADY;
wire   [15:0] buf_r_WDATA;
wire    buf_r_ARREADY;
wire    buf_r_RVALID;
wire   [15:0] buf_r_RDATA;
wire    buf_r_RLAST;
wire   [0:0] buf_r_RID;
wire   [0:0] buf_r_RUSER;
wire   [1:0] buf_r_RRESP;
wire    buf_r_BVALID;
reg    buf_r_BREADY;
wire   [1:0] buf_r_BRESP;
wire   [0:0] buf_r_BID;
wire   [0:0] buf_r_BUSER;
reg   [23:0] index_1_reg_428;
reg   [11:0] i_op_assign_reg_438;
reg   [39:0] reg_1922;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state60_pp0_stage0_iter0;
wire    ap_block_state61_pp0_stage0_iter1;
wire    ap_block_state62_pp0_stage0_iter2;
reg    ap_sig_ioackin_buf_r_AWREADY;
reg    ap_block_state62_io;
wire    ap_block_state63_pp0_stage0_iter3;
reg    ap_sig_ioackin_buf_r_WREADY;
reg    ap_block_state63_io;
wire    ap_block_state64_pp0_stage0_iter4;
wire    ap_block_state65_pp0_stage0_iter5;
wire    ap_block_state66_pp0_stage0_iter6;
wire    ap_block_state67_pp0_stage0_iter7;
reg    ap_block_state68_pp0_stage0_iter8;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] exitcond2_fu_1763_p2;
wire   [39:0] p_Val2_13_6_fu_1112_p2;
wire    ap_CS_fsm_state55;
wire   [39:0] p_0_4_fu_1534_p3;
wire    ap_CS_fsm_state56;
wire   [15:0] grp_mandel_calc_fu_489_ap_return;
wire    ap_CS_fsm_state58;
wire    grp_mandel_calc_fu_449_ap_ready;
wire    grp_mandel_calc_fu_449_ap_done;
wire    grp_mandel_calc_fu_457_ap_ready;
wire    grp_mandel_calc_fu_457_ap_done;
wire    grp_mandel_calc_fu_465_ap_ready;
wire    grp_mandel_calc_fu_465_ap_done;
wire    grp_mandel_calc_fu_473_ap_ready;
wire    grp_mandel_calc_fu_473_ap_done;
wire    grp_mandel_calc_fu_481_ap_ready;
wire    grp_mandel_calc_fu_481_ap_done;
wire    grp_mandel_calc_fu_489_ap_ready;
wire    grp_mandel_calc_fu_489_ap_done;
wire    grp_mandel_calc_fu_497_ap_ready;
wire    grp_mandel_calc_fu_497_ap_done;
wire    grp_mandel_calc_fu_505_ap_ready;
wire    grp_mandel_calc_fu_505_ap_done;
reg    ap_block_state58_on_subcall_done;
wire   [39:0] tmp_81_fu_812_p1;
wire    ap_CS_fsm_state54;
reg   [15:0] maxIter_read_reg_1934;
reg   [39:0] Y0_V_read_reg_1943;
reg  signed [39:0] X0_V_read_reg_1948;
wire   [15:0] mem_4_q0;
reg   [39:0] reg_1961;
reg    ap_enable_reg_pp0_iter1;
wire   [39:0] p_0_7_fu_1744_p3;
wire   [15:0] grp_mandel_calc_fu_465_ap_return;
wire   [39:0] tmp_66_fu_792_p1;
wire   [39:0] p_Val2_12_fu_824_p2;
wire   [39:0] p_Val2_28_fu_543_p1;
wire    ap_CS_fsm_state46;
reg   [11:0] height_V_reg_1966;
wire    ap_CS_fsm_state47;
reg   [0:0] p_Result_s_reg_1971;
wire   [39:0] grp_fu_1917_p2;
reg   [11:0] pix_x_V_7_reg_1978;
wire    ap_CS_fsm_state49;
wire   [0:0] exitcond3_fu_652_p2;
reg   [0:0] p_Result_21_reg_1984;
reg   [39:0] reg_1991;
wire   [15:0] grp_mandel_calc_fu_449_ap_return;
wire   [39:0] tmp_84_fu_816_p1;
wire   [39:0] p_Val2_13_5_fu_1066_p2;
wire   [23:0] tmp_cast_fu_627_p1;
reg   [23:0] tmp_cast_reg_1996;
wire  signed [51:0] tmp_31_fu_630_p1;
reg  signed [51:0] tmp_31_reg_2003;
wire  signed [51:0] lhs_V_8_cast_fu_634_p1;
reg  signed [51:0] lhs_V_8_cast_reg_2015;
wire  signed [40:0] rhs_V_4_fu_637_p1;
reg  signed [40:0] rhs_V_4_reg_2027;
reg   [0:0] tmp_67_reg_2032;
wire   [11:0] grp_fu_646_p2;
reg   [11:0] line_V_reg_2035;
wire    ap_CS_fsm_state48;
wire   [15:0] mem_0_q0;
reg   [51:0] reg_2044;
wire   [39:0] p_Val2_13_4_fu_1020_p2;
wire   [39:0] p_0_6_fu_1674_p3;
wire   [15:0] grp_mandel_calc_fu_497_ap_return;
wire   [51:0] r_V_1_fu_682_p1;
wire   [51:0] grp_fu_686_p2;
wire   [40:0] grp_fu_1838_p2;
reg   [0:0] tmp_68_reg_2049;
reg   [51:0] reg_2054;
wire   [51:0] grp_fu_701_p2;
wire   [15:0] grp_mandel_calc_fu_473_ap_return;
wire   [51:0] r_V_2_fu_697_p1;
wire   [39:0] p_0_3_fu_1464_p3;
wire   [39:0] p_Val2_13_3_fu_974_p2;
wire   [40:0] tmp_s_fu_527_p1;
wire    ap_CS_fsm_state2;
wire   [0:0] p_not_fu_858_p2;
reg   [0:0] p_not_reg_2059;
wire   [15:0] mem_5_q0;
reg   [39:0] reg_2064;
wire   [39:0] grp_fu_1909_p3;
wire   [39:0] p_Val2_13_7_fu_1158_p2;
wire   [39:0] tmp_69_fu_796_p1;
wire   [15:0] tmp_42_fu_1820_p10;
reg   [39:0] reg_2074;
wire   [39:0] p_Val2_13_2_fu_928_p2;
wire   [15:0] grp_mandel_calc_fu_457_ap_return;
wire   [39:0] tmp_72_fu_800_p1;
wire   [15:0] mem_6_q0;
reg   [39:0] reg_2079;
wire   [39:0] tmp_75_fu_804_p1;
wire   [15:0] grp_mandel_calc_fu_505_ap_return;
wire   [39:0] p_0_2_fu_1394_p3;
wire   [15:0] mem_7_q0;
reg   [39:0] reg_2084;
wire   [39:0] grp_fu_1310_p3;
wire   [39:0] tmp_78_fu_808_p1;
reg   [11:0] width_V_read_reg_2089;
reg   [51:0] reg_2099;
wire   [39:0] p_0_5_fu_1604_p3;
wire   [15:0] grp_mandel_calc_fu_481_ap_return;
wire   [51:0] r_V_fu_657_p1;
wire   [51:0] grp_fu_661_p2;
reg   [51:0] reg_2129;
reg   [51:0] reg_2129_pp0_iter1_reg;
wire   [51:0] r_V_3_fu_712_p1;
wire   [51:0] grp_fu_716_p2;
wire   [15:0] mem_2_q0;
reg   [51:0] reg_2139;
wire   [51:0] grp_fu_731_p2;
wire   [51:0] r_V_4_fu_727_p1;
reg   [51:0] reg_2149;
wire   [51:0] grp_fu_746_p2;
wire   [51:0] r_V_5_fu_742_p1;
wire   [2:0] tmp_93_fu_1775_p1;
reg   [51:0] reg_2159;
reg   [51:0] reg_2159_pp0_iter1_reg;
wire   [51:0] r_V_6_fu_757_p1;
wire   [51:0] grp_fu_761_p2;
wire   [15:0] mem_3_q0;
reg   [51:0] reg_2169;
wire   [51:0] r_V_7_fu_772_p1;
wire   [51:0] grp_fu_776_p2;
wire   [15:0] mem_1_q0;
reg   [39:0] reg_2174;
wire   [39:0] tmp_87_fu_820_p1;
wire   [0:0] p_not4_fu_864_p2;
reg   [0:0] p_not4_reg_2202;
reg   [0:0] tmp_70_reg_2207;
reg   [0:0] tmp_71_reg_2219;
wire   [0:0] p_not_1_fu_904_p2;
reg   [0:0] p_not_1_reg_2225;
wire   [0:0] p_not4_1_fu_910_p2;
reg   [0:0] p_not4_1_reg_2230;
reg   [0:0] tmp_73_reg_2235;
reg   [0:0] tmp_74_reg_2247;
wire   [0:0] p_not_2_fu_950_p2;
reg   [0:0] p_not_2_reg_2253;
wire   [0:0] p_not4_2_fu_956_p2;
reg   [0:0] p_not4_2_reg_2258;
reg   [0:0] tmp_76_reg_2263;
reg   [0:0] tmp_77_reg_2275;
wire   [0:0] p_not_3_fu_996_p2;
reg   [0:0] p_not_3_reg_2281;
wire   [0:0] p_not4_3_fu_1002_p2;
reg   [0:0] p_not4_3_reg_2286;
reg   [0:0] tmp_79_reg_2291;
reg   [0:0] tmp_80_reg_2303;
wire   [0:0] p_not_4_fu_1042_p2;
reg   [0:0] p_not_4_reg_2309;
wire   [0:0] p_not4_4_fu_1048_p2;
reg   [0:0] p_not4_4_reg_2314;
reg   [0:0] tmp_82_reg_2319;
reg   [0:0] tmp_83_reg_2331;
wire   [0:0] p_not_5_fu_1088_p2;
reg   [0:0] p_not_5_reg_2337;
wire   [0:0] p_not4_5_fu_1094_p2;
reg   [0:0] p_not4_5_reg_2342;
reg   [0:0] tmp_85_reg_2347;
reg   [0:0] tmp_86_reg_2359;
wire   [0:0] p_not_6_fu_1134_p2;
reg   [0:0] p_not_6_reg_2365;
wire   [0:0] p_not4_6_fu_1140_p2;
reg   [0:0] p_not4_6_reg_2370;
reg   [0:0] tmp_88_reg_2375;
reg   [0:0] tmp_89_reg_2387;
wire   [0:0] p_not_7_fu_1180_p2;
reg   [0:0] p_not_7_reg_2393;
wire   [0:0] p_not4_7_fu_1186_p2;
reg   [0:0] p_not4_7_reg_2398;
reg   [0:0] exitcond2_reg_2483_pp0_iter3_reg;
reg   [0:0] exitcond2_reg_2483_pp0_iter4_reg;
reg   [0:0] exitcond2_reg_2483_pp0_iter5_reg;
reg   [0:0] exitcond2_reg_2483_pp0_iter6_reg;
reg    ap_enable_reg_pp0_iter0;
reg   [8:0] reg_2502;
wire    ap_CS_fsm_state69;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state60;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg   [7:0] mem_0_address0;
reg    mem_0_ce0;
reg    mem_0_we0;
wire   [15:0] mem_0_d0;
reg   [7:0] mem_1_address0;
reg    mem_1_ce0;
reg    mem_1_we0;
wire   [15:0] mem_1_d0;
reg   [7:0] mem_2_address0;
reg    mem_2_ce0;
reg    mem_2_we0;
wire   [15:0] mem_2_d0;
reg   [7:0] mem_3_address0;
reg    mem_3_ce0;
reg    mem_3_we0;
wire   [15:0] mem_3_d0;
reg   [7:0] mem_4_address0;
reg    mem_4_ce0;
reg    mem_4_we0;
wire   [15:0] mem_4_d0;
reg   [7:0] mem_5_address0;
reg    mem_5_ce0;
reg    mem_5_we0;
wire   [15:0] mem_5_d0;
reg   [7:0] mem_6_address0;
reg    mem_6_ce0;
reg    mem_6_we0;
wire   [15:0] mem_6_d0;
reg   [7:0] mem_7_address0;
reg    mem_7_ce0;
reg    mem_7_we0;
wire   [15:0] mem_7_d0;
wire    grp_mandel_calc_fu_449_ap_start;
wire    grp_mandel_calc_fu_449_ap_idle;
wire    grp_mandel_calc_fu_457_ap_start;
wire    grp_mandel_calc_fu_457_ap_idle;
wire    grp_mandel_calc_fu_465_ap_start;
wire    grp_mandel_calc_fu_465_ap_idle;
wire    grp_mandel_calc_fu_473_ap_start;
wire    grp_mandel_calc_fu_473_ap_idle;
wire   [39:0] grp_mandel_calc_fu_473_x_in_V;
wire    grp_mandel_calc_fu_481_ap_start;
wire    grp_mandel_calc_fu_481_ap_idle;
wire    grp_mandel_calc_fu_489_ap_start;
wire    grp_mandel_calc_fu_489_ap_idle;
wire   [39:0] grp_mandel_calc_fu_489_x_in_V;
wire    grp_mandel_calc_fu_497_ap_start;
wire    grp_mandel_calc_fu_497_ap_idle;
wire   [39:0] grp_mandel_calc_fu_497_x_in_V;
wire    grp_mandel_calc_fu_505_ap_start;
wire    grp_mandel_calc_fu_505_ap_idle;
reg   [23:0] indvars_iv_reg_374;
reg   [39:0] p_Val2_29_reg_384;
reg   [11:0] t_V_1_reg_394;
reg   [23:0] index_reg_405;
reg   [11:0] tmp_V_1_reg_417;
wire    ap_CS_fsm_state59;
wire   [0:0] exitcond_fu_641_p2;
reg    grp_mandel_calc_fu_449_ap_start_reg;
wire    ap_CS_fsm_state57;
reg    grp_mandel_calc_fu_457_ap_start_reg;
reg    grp_mandel_calc_fu_465_ap_start_reg;
reg    grp_mandel_calc_fu_473_ap_start_reg;
reg    grp_mandel_calc_fu_481_ap_start_reg;
reg    grp_mandel_calc_fu_489_ap_start_reg;
reg    grp_mandel_calc_fu_497_ap_start_reg;
reg    grp_mandel_calc_fu_505_ap_start_reg;
wire   [63:0] newIndex3_fu_1752_p1;
wire   [63:0] newIndex1_fu_1789_p1;
wire   [63:0] tmp_43_fu_1807_p1;
reg    ap_reg_ioackin_buf_r_AWREADY;
reg    ap_block_pp0_stage0_01001;
reg    ap_reg_ioackin_buf_r_WREADY;
wire  signed [39:0] rhs_V_fu_517_p0;
wire   [40:0] grp_fu_530_p0;
wire   [12:0] grp_fu_530_p1;
wire   [40:0] grp_fu_530_p2;
wire   [0:0] tmp_30_fu_555_p2;
wire   [0:0] signbit_i_i_i_i27_0_s_fu_569_p2;
wire   [0:0] brmerge34_2_fu_1362_p2;
reg   [0:0] grp_fu_586_p0;
wire   [0:0] underflow_7_1_fu_1287_p2;
wire   [0:0] underflow_8_fu_1869_p2;
reg   [39:0] grp_fu_586_p2;
wire   [39:0] y_V_fu_1851_p1;
wire   [13:0] height_V_fu_617_p1;
wire  signed [39:0] tmp_31_fu_630_p0;
wire  signed [39:0] rhs_V_4_fu_637_p0;
reg   [11:0] grp_fu_646_p0;
wire   [11:0] grp_fu_661_p0;
wire  signed [39:0] grp_fu_661_p1;
wire   [11:0] pix_x_V_s_fu_676_p2;
wire   [11:0] grp_fu_686_p0;
wire  signed [39:0] grp_fu_686_p1;
wire   [11:0] pix_x_V_1_fu_691_p2;
wire   [11:0] grp_fu_701_p0;
wire  signed [39:0] grp_fu_701_p1;
wire   [11:0] pix_x_V_2_fu_706_p2;
wire   [11:0] grp_fu_716_p0;
wire  signed [39:0] grp_fu_716_p1;
wire   [11:0] pix_x_V_3_fu_721_p2;
wire   [11:0] grp_fu_731_p0;
wire  signed [39:0] grp_fu_731_p1;
wire   [11:0] pix_x_V_4_fu_736_p2;
wire   [11:0] grp_fu_746_p0;
wire  signed [39:0] grp_fu_746_p1;
wire   [11:0] pix_x_V_5_fu_751_p2;
wire   [11:0] grp_fu_761_p0;
wire  signed [39:0] grp_fu_761_p1;
wire   [11:0] pix_x_V_6_fu_766_p2;
wire   [11:0] grp_fu_776_p0;
wire  signed [39:0] grp_fu_776_p1;
wire   [51:0] ret_V_s_fu_836_p2;
wire   [11:0] tmp_fu_848_p4;
wire   [51:0] ret_V_21_1_fu_870_p2;
wire   [11:0] tmp_34_fu_894_p4;
wire   [51:0] ret_V_21_2_fu_916_p2;
wire   [11:0] tmp_35_fu_940_p4;
wire   [51:0] ret_V_21_3_fu_962_p2;
wire   [11:0] tmp_36_fu_986_p4;
wire   [51:0] ret_V_21_4_fu_1008_p2;
wire   [11:0] tmp_37_fu_1032_p4;
wire   [51:0] ret_V_21_5_fu_1054_p2;
wire   [11:0] tmp_38_fu_1078_p4;
wire   [51:0] ret_V_21_6_fu_1100_p2;
wire   [11:0] tmp_39_fu_1124_p4;
wire   [51:0] ret_V_21_7_fu_1146_p2;
wire   [11:0] tmp_40_fu_1170_p4;
wire   [0:0] brmerge1_fu_1192_p2;
wire   [0:0] tmp_32_fu_1196_p2;
wire   [0:0] newsignbit_i_i_i_i_fu_1207_p2;
wire   [0:0] brmerge2_fu_1212_p2;
wire   [0:0] underflow_7_fu_1217_p2;
wire   [0:0] overflow_7_fu_1201_p2;
wire   [0:0] p_707_not_fu_1228_p2;
reg   [0:0] grp_fu_1240_p0;
wire   [0:0] brmerge3_fu_1222_p2;
wire   [0:0] brmerge_fu_565_p2;
reg   [0:0] grp_fu_1247_p0;
wire   [0:0] underflow_fu_560_p2;
reg   [0:0] grp_fu_1254_p0;
wire   [0:0] brmerge34_1_fu_1292_p2;
wire   [0:0] brmerge5_fu_1875_p2;
reg   [39:0] grp_fu_1254_p2;
wire   [0:0] brmerge32_1_fu_1262_p2;
wire   [0:0] tmp_76_1_fu_1266_p2;
wire   [0:0] newsignbit_i_i_i_i_0_1_fu_1277_p2;
wire   [0:0] brmerge33_1_fu_1282_p2;
wire   [0:0] overflow_7_1_fu_1271_p2;
wire   [0:0] p_707_not_1_fu_1298_p2;
reg   [0:0] grp_fu_1310_p0;
wire   [0:0] brmerge4_fu_1234_p2;
wire   [0:0] brmerge9_fu_574_p2;
wire   [39:0] grp_fu_1240_p3;
wire   [39:0] grp_fu_1247_p3;
wire   [0:0] brmerge32_2_fu_1332_p2;
wire   [0:0] tmp_76_2_fu_1336_p2;
wire   [0:0] newsignbit_i_i_i_i_0_2_fu_1347_p2;
wire   [0:0] brmerge33_2_fu_1352_p2;
wire   [0:0] underflow_7_2_fu_1357_p2;
wire   [0:0] overflow_7_2_fu_1341_p2;
wire   [0:0] p_707_not_2_fu_1368_p2;
wire   [0:0] brmerge35_2_fu_1374_p2;
wire   [39:0] p_mux7_2_fu_579_p3;
wire   [39:0] p_11_2_fu_1387_p3;
wire   [0:0] brmerge32_3_fu_1402_p2;
wire   [0:0] tmp_76_3_fu_1406_p2;
wire   [0:0] newsignbit_i_i_i_i_0_3_fu_1417_p2;
wire   [0:0] brmerge33_3_fu_1422_p2;
wire   [0:0] underflow_7_3_fu_1427_p2;
wire   [0:0] overflow_7_3_fu_1411_p2;
wire   [0:0] p_707_not_3_fu_1438_p2;
wire   [0:0] brmerge34_3_fu_1432_p2;
wire   [39:0] p_mux7_3_fu_1450_p2;
wire   [39:0] p_11_3_fu_1457_p2;
wire   [0:0] brmerge35_3_fu_1444_p2;
wire   [39:0] p_mux7_3_fu_1450_p3;
wire   [39:0] p_11_3_fu_1457_p3;
wire   [0:0] brmerge32_4_fu_1472_p2;
wire   [0:0] tmp_76_4_fu_1476_p2;
wire   [0:0] newsignbit_i_i_i_i_0_4_fu_1487_p2;
wire   [0:0] brmerge33_4_fu_1492_p2;
wire   [0:0] underflow_7_4_fu_1497_p2;
wire   [0:0] overflow_7_4_fu_1481_p2;
wire   [0:0] p_707_not_4_fu_1508_p2;
wire   [0:0] brmerge34_4_fu_1502_p2;
wire   [39:0] p_mux7_4_fu_1520_p2;
wire   [39:0] p_11_4_fu_1527_p2;
wire   [0:0] brmerge35_4_fu_1514_p2;
wire   [39:0] p_mux7_4_fu_1520_p3;
wire   [39:0] p_11_4_fu_1527_p3;
wire   [0:0] brmerge32_5_fu_1542_p2;
wire   [0:0] tmp_76_5_fu_1546_p2;
wire   [0:0] newsignbit_i_i_i_i_0_5_fu_1557_p2;
wire   [0:0] brmerge33_5_fu_1562_p2;
wire   [0:0] underflow_7_5_fu_1567_p2;
wire   [0:0] overflow_7_5_fu_1551_p2;
wire   [0:0] p_707_not_5_fu_1578_p2;
wire   [0:0] brmerge34_5_fu_1572_p2;
wire   [0:0] brmerge35_5_fu_1584_p2;
wire   [39:0] p_mux7_5_fu_1590_p3;
wire   [39:0] p_11_5_fu_1597_p3;
wire   [0:0] brmerge32_6_fu_1612_p2;
wire   [0:0] tmp_76_6_fu_1616_p2;
wire   [0:0] newsignbit_i_i_i_i_0_6_fu_1627_p2;
wire   [0:0] brmerge33_6_fu_1632_p2;
wire   [0:0] underflow_7_6_fu_1637_p2;
wire   [0:0] overflow_7_6_fu_1621_p2;
wire   [0:0] p_707_not_6_fu_1648_p2;
wire   [0:0] brmerge34_6_fu_1642_p2;
wire   [0:0] brmerge35_6_fu_1654_p2;
wire   [39:0] p_mux7_6_fu_1660_p3;
wire   [39:0] p_11_6_fu_1667_p3;
wire   [0:0] brmerge32_7_fu_1682_p2;
wire   [0:0] tmp_76_7_fu_1686_p2;
wire   [0:0] newsignbit_i_i_i_i_0_7_fu_1697_p2;
wire   [0:0] brmerge33_7_fu_1702_p2;
wire   [0:0] underflow_7_7_fu_1707_p2;
wire   [0:0] overflow_7_7_fu_1691_p2;
wire   [0:0] p_707_not_7_fu_1718_p2;
wire   [0:0] brmerge34_7_fu_1712_p2;
wire   [0:0] brmerge35_7_fu_1724_p2;
wire   [39:0] p_mux7_7_fu_1730_p3;
wire   [39:0] p_11_7_fu_1737_p3;
wire   [8:0] newIndex_fu_1779_p4;
wire   [2:0] arrayNo_fu_1817_p0;
wire   [15:0] tmp_42_fu_1820_p1;
wire   [15:0] tmp_42_fu_1820_p2;
wire   [15:0] tmp_42_fu_1820_p3;
wire   [15:0] tmp_42_fu_1820_p4;
wire   [15:0] tmp_42_fu_1820_p5;
wire   [15:0] tmp_42_fu_1820_p6;
wire   [15:0] tmp_42_fu_1820_p7;
wire   [15:0] tmp_42_fu_1820_p8;
wire   [31:0] tmp_42_fu_1820_p9;
reg   [40:0] grp_fu_1838_p0;
wire   [13:0] p_shl_fu_604_p3;
wire  signed [40:0] lhs_V_3_fu_1834_p1;
wire  signed [40:0] lhs_V_fu_513_p1;
reg   [40:0] grp_fu_1838_p1;
wire   [13:0] lhs_V_7_cast_fu_601_p1;
wire  signed [40:0] rhs_V_fu_517_p1;
wire   [0:0] p_Result_23_fu_1855_p3;
wire   [0:0] p_Result_22_fu_1843_p3;
wire   [0:0] tmp_41_fu_1863_p2;
wire   [0:0] signbit_i_i_0_not_fu_1881_p2;
reg   [0:0] grp_fu_1909_p0;
wire   [0:0] brmerge35_1_fu_1304_p2;
wire   [0:0] brmerge6_fu_1887_p2;
wire   [39:0] grp_fu_1254_p3;
wire   [39:0] grp_fu_586_p3;
reg  signed [39:0] grp_fu_1917_p0;
reg   [39:0] grp_fu_1917_p1;
reg    grp_fu_530_ap_start;
wire    grp_fu_530_ap_done;
reg   [60:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [40:0] grp_fu_530_p10;
wire   [51:0] grp_fu_661_p00;
wire   [51:0] grp_fu_686_p00;
wire   [51:0] grp_fu_701_p00;
wire   [51:0] grp_fu_716_p00;
wire   [51:0] grp_fu_731_p00;
wire   [51:0] grp_fu_746_p00;
wire   [51:0] grp_fu_761_p00;
wire   [51:0] grp_fu_776_p00;

// power-on initialization
initial begin
#0 ap_CS_fsm = 61'd1;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 grp_mandel_calc_fu_449_ap_start_reg = 1'b0;
#0 grp_mandel_calc_fu_457_ap_start_reg = 1'b0;
#0 grp_mandel_calc_fu_465_ap_start_reg = 1'b0;
#0 grp_mandel_calc_fu_473_ap_start_reg = 1'b0;
#0 grp_mandel_calc_fu_481_ap_start_reg = 1'b0;
#0 grp_mandel_calc_fu_489_ap_start_reg = 1'b0;
#0 grp_mandel_calc_fu_497_ap_start_reg = 1'b0;
#0 grp_mandel_calc_fu_505_ap_start_reg = 1'b0;
#0 ap_reg_ioackin_buf_r_AWREADY = 1'b0;
#0 ap_reg_ioackin_buf_r_WREADY = 1'b0;
end

calc_in_parms_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_IN_PARMS_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_IN_PARMS_DATA_WIDTH ))
calc_in_parms_s_axi_U(
    .AWVALID(s_axi_in_parms_AWVALID),
    .AWREADY(s_axi_in_parms_AWREADY),
    .AWADDR(s_axi_in_parms_AWADDR),
    .WVALID(s_axi_in_parms_WVALID),
    .WREADY(s_axi_in_parms_WREADY),
    .WDATA(s_axi_in_parms_WDATA),
    .WSTRB(s_axi_in_parms_WSTRB),
    .ARVALID(s_axi_in_parms_ARVALID),
    .ARREADY(s_axi_in_parms_ARREADY),
    .ARADDR(s_axi_in_parms_ARADDR),
    .RVALID(s_axi_in_parms_RVALID),
    .RREADY(s_axi_in_parms_RREADY),
    .RDATA(s_axi_in_parms_RDATA),
    .RRESP(s_axi_in_parms_RRESP),
    .BVALID(s_axi_in_parms_BVALID),
    .BREADY(s_axi_in_parms_BREADY),
    .BRESP(s_axi_in_parms_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .X0_V(X0_V),
    .Y0_V(Y0_V),
    .X1_V(X1_V),
    .width_V(width_V),
    .maxIter(maxIter)
);

calc_buf_r_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 16 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_BUF_R_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_BUF_R_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_BUF_R_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_BUF_R_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_BUF_R_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_BUF_R_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_BUF_R_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_BUF_R_BUSER_WIDTH ),
    .C_TARGET_ADDR( C_M_AXI_BUF_R_TARGET_ADDR ),
    .C_USER_VALUE( C_M_AXI_BUF_R_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_BUF_R_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_BUF_R_CACHE_VALUE ))
calc_buf_r_m_axi_U(
    .AWVALID(m_axi_buf_r_AWVALID),
    .AWREADY(m_axi_buf_r_AWREADY),
    .AWADDR(m_axi_buf_r_AWADDR),
    .AWID(m_axi_buf_r_AWID),
    .AWLEN(m_axi_buf_r_AWLEN),
    .AWSIZE(m_axi_buf_r_AWSIZE),
    .AWBURST(m_axi_buf_r_AWBURST),
    .AWLOCK(m_axi_buf_r_AWLOCK),
    .AWCACHE(m_axi_buf_r_AWCACHE),
    .AWPROT(m_axi_buf_r_AWPROT),
    .AWQOS(m_axi_buf_r_AWQOS),
    .AWREGION(m_axi_buf_r_AWREGION),
    .AWUSER(m_axi_buf_r_AWUSER),
    .WVALID(m_axi_buf_r_WVALID),
    .WREADY(m_axi_buf_r_WREADY),
    .WDATA(m_axi_buf_r_WDATA),
    .WSTRB(m_axi_buf_r_WSTRB),
    .WLAST(m_axi_buf_r_WLAST),
    .WID(m_axi_buf_r_WID),
    .WUSER(m_axi_buf_r_WUSER),
    .ARVALID(m_axi_buf_r_ARVALID),
    .ARREADY(m_axi_buf_r_ARREADY),
    .ARADDR(m_axi_buf_r_ARADDR),
    .ARID(m_axi_buf_r_ARID),
    .ARLEN(m_axi_buf_r_ARLEN),
    .ARSIZE(m_axi_buf_r_ARSIZE),
    .ARBURST(m_axi_buf_r_ARBURST),
    .ARLOCK(m_axi_buf_r_ARLOCK),
    .ARCACHE(m_axi_buf_r_ARCACHE),
    .ARPROT(m_axi_buf_r_ARPROT),
    .ARQOS(m_axi_buf_r_ARQOS),
    .ARREGION(m_axi_buf_r_ARREGION),
    .ARUSER(m_axi_buf_r_ARUSER),
    .RVALID(m_axi_buf_r_RVALID),
    .RREADY(m_axi_buf_r_RREADY),
    .RDATA(m_axi_buf_r_RDATA),
    .RLAST(m_axi_buf_r_RLAST),
    .RID(m_axi_buf_r_RID),
    .RUSER(m_axi_buf_r_RUSER),
    .RRESP(m_axi_buf_r_RRESP),
    .BVALID(m_axi_buf_r_BVALID),
    .BREADY(m_axi_buf_r_BREADY),
    .BRESP(m_axi_buf_r_BRESP),
    .BID(m_axi_buf_r_BID),
    .BUSER(m_axi_buf_r_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(buf_r_ARREADY),
    .I_ARADDR(32'd0),
    .I_ARID(1'd0),
    .I_ARLEN(32'd0),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(buf_r_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(buf_r_RDATA),
    .I_RID(buf_r_RID),
    .I_RUSER(buf_r_RUSER),
    .I_RRESP(buf_r_RRESP),
    .I_RLAST(buf_r_RLAST),
    .I_AWVALID(buf_r_AWVALID),
    .I_AWREADY(buf_r_AWREADY),
    .I_AWADDR(buf_r_AWADDR),
    .I_AWID(1'd0),
    .I_AWLEN(32'd1),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(buf_r_WVALID),
    .I_WREADY(buf_r_WREADY),
    .I_WDATA(buf_r_WDATA),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(2'd3),
    .I_BVALID(buf_r_BVALID),
    .I_BREADY(buf_r_BREADY),
    .I_BRESP(buf_r_BRESP),
    .I_BID(buf_r_BID),
    .I_BUSER(buf_r_BUSER)
);

calc_mem_0 #(
    .DataWidth( 16 ),
    .AddressRange( 240 ),
    .AddressWidth( 8 ))
mem_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(mem_0_address0),
    .ce0(mem_0_ce0),
    .we0(mem_0_we0),
    .d0(mem_0_d0),
    .q0(mem_0_q0)
);

calc_mem_0 #(
    .DataWidth( 16 ),
    .AddressRange( 240 ),
    .AddressWidth( 8 ))
mem_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(mem_1_address0),
    .ce0(mem_1_ce0),
    .we0(mem_1_we0),
    .d0(mem_1_d0),
    .q0(mem_1_q0)
);

calc_mem_0 #(
    .DataWidth( 16 ),
    .AddressRange( 240 ),
    .AddressWidth( 8 ))
mem_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(mem_2_address0),
    .ce0(mem_2_ce0),
    .we0(mem_2_we0),
    .d0(mem_2_d0),
    .q0(mem_2_q0)
);

calc_mem_0 #(
    .DataWidth( 16 ),
    .AddressRange( 240 ),
    .AddressWidth( 8 ))
mem_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(mem_3_address0),
    .ce0(mem_3_ce0),
    .we0(mem_3_we0),
    .d0(mem_3_d0),
    .q0(mem_3_q0)
);

calc_mem_0 #(
    .DataWidth( 16 ),
    .AddressRange( 240 ),
    .AddressWidth( 8 ))
mem_4_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(mem_4_address0),
    .ce0(mem_4_ce0),
    .we0(mem_4_we0),
    .d0(mem_4_d0),
    .q0(mem_4_q0)
);

calc_mem_0 #(
    .DataWidth( 16 ),
    .AddressRange( 240 ),
    .AddressWidth( 8 ))
mem_5_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(mem_5_address0),
    .ce0(mem_5_ce0),
    .we0(mem_5_we0),
    .d0(mem_5_d0),
    .q0(mem_5_q0)
);

calc_mem_0 #(
    .DataWidth( 16 ),
    .AddressRange( 240 ),
    .AddressWidth( 8 ))
mem_6_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(mem_6_address0),
    .ce0(mem_6_ce0),
    .we0(mem_6_we0),
    .d0(mem_6_d0),
    .q0(mem_6_q0)
);

calc_mem_0 #(
    .DataWidth( 16 ),
    .AddressRange( 240 ),
    .AddressWidth( 8 ))
mem_7_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(mem_7_address0),
    .ce0(mem_7_ce0),
    .we0(mem_7_we0),
    .d0(mem_7_d0),
    .q0(mem_7_q0)
);

mandel_calc grp_mandel_calc_fu_449(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_mandel_calc_fu_449_ap_start),
    .ap_done(grp_mandel_calc_fu_449_ap_done),
    .ap_idle(grp_mandel_calc_fu_449_ap_idle),
    .ap_ready(grp_mandel_calc_fu_449_ap_ready),
    .x_in_V(reg_2084),
    .y_in_V(p_Val2_29_reg_384),
    .maxIter(maxIter_read_reg_1934),
    .ap_return(grp_mandel_calc_fu_449_ap_return)
);

mandel_calc grp_mandel_calc_fu_457(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_mandel_calc_fu_457_ap_start),
    .ap_done(grp_mandel_calc_fu_457_ap_done),
    .ap_idle(grp_mandel_calc_fu_457_ap_idle),
    .ap_ready(grp_mandel_calc_fu_457_ap_ready),
    .x_in_V(reg_2064),
    .y_in_V(p_Val2_29_reg_384),
    .maxIter(maxIter_read_reg_1934),
    .ap_return(grp_mandel_calc_fu_457_ap_return)
);

mandel_calc grp_mandel_calc_fu_465(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_mandel_calc_fu_465_ap_start),
    .ap_done(grp_mandel_calc_fu_465_ap_done),
    .ap_idle(grp_mandel_calc_fu_465_ap_idle),
    .ap_ready(grp_mandel_calc_fu_465_ap_ready),
    .x_in_V(reg_2079),
    .y_in_V(p_Val2_29_reg_384),
    .maxIter(maxIter_read_reg_1934),
    .ap_return(grp_mandel_calc_fu_465_ap_return)
);

mandel_calc grp_mandel_calc_fu_473(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_mandel_calc_fu_473_ap_start),
    .ap_done(grp_mandel_calc_fu_473_ap_done),
    .ap_idle(grp_mandel_calc_fu_473_ap_idle),
    .ap_ready(grp_mandel_calc_fu_473_ap_ready),
    .x_in_V(grp_mandel_calc_fu_473_x_in_V),
    .y_in_V(p_Val2_29_reg_384),
    .maxIter(maxIter_read_reg_1934),
    .ap_return(grp_mandel_calc_fu_473_ap_return)
);

mandel_calc grp_mandel_calc_fu_481(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_mandel_calc_fu_481_ap_start),
    .ap_done(grp_mandel_calc_fu_481_ap_done),
    .ap_idle(grp_mandel_calc_fu_481_ap_idle),
    .ap_ready(grp_mandel_calc_fu_481_ap_ready),
    .x_in_V(reg_1922),
    .y_in_V(p_Val2_29_reg_384),
    .maxIter(maxIter_read_reg_1934),
    .ap_return(grp_mandel_calc_fu_481_ap_return)
);

mandel_calc grp_mandel_calc_fu_489(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_mandel_calc_fu_489_ap_start),
    .ap_done(grp_mandel_calc_fu_489_ap_done),
    .ap_idle(grp_mandel_calc_fu_489_ap_idle),
    .ap_ready(grp_mandel_calc_fu_489_ap_ready),
    .x_in_V(grp_mandel_calc_fu_489_x_in_V),
    .y_in_V(p_Val2_29_reg_384),
    .maxIter(maxIter_read_reg_1934),
    .ap_return(grp_mandel_calc_fu_489_ap_return)
);

mandel_calc grp_mandel_calc_fu_497(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_mandel_calc_fu_497_ap_start),
    .ap_done(grp_mandel_calc_fu_497_ap_done),
    .ap_idle(grp_mandel_calc_fu_497_ap_idle),
    .ap_ready(grp_mandel_calc_fu_497_ap_ready),
    .x_in_V(grp_mandel_calc_fu_497_x_in_V),
    .y_in_V(p_Val2_29_reg_384),
    .maxIter(maxIter_read_reg_1934),
    .ap_return(grp_mandel_calc_fu_497_ap_return)
);

mandel_calc grp_mandel_calc_fu_505(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_mandel_calc_fu_505_ap_start),
    .ap_done(grp_mandel_calc_fu_505_ap_done),
    .ap_idle(grp_mandel_calc_fu_505_ap_idle),
    .ap_ready(grp_mandel_calc_fu_505_ap_ready),
    .x_in_V(reg_1961),
    .y_in_V(p_Val2_29_reg_384),
    .maxIter(maxIter_read_reg_1934),
    .ap_return(grp_mandel_calc_fu_505_ap_return)
);

calc_sdiv_41ns_13eOg #(
    .ID( 1 ),
    .NUM_STAGE( 45 ),
    .din0_WIDTH( 41 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 41 ))
calc_sdiv_41ns_13eOg_U13(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .start(grp_fu_530_ap_start),
    .done(grp_fu_530_ap_done),
    .din0(grp_fu_530_p0),
    .din1(grp_fu_530_p1),
    .ce(1'b1),
    .dout(grp_fu_530_p2)
);

calc_mul_12ns_40sfYi #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 40 ),
    .dout_WIDTH( 52 ))
calc_mul_12ns_40sfYi_U14(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_661_p0),
    .din1(grp_fu_661_p1),
    .ce(1'b1),
    .dout(grp_fu_661_p2)
);

calc_mul_12ns_40sfYi #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 40 ),
    .dout_WIDTH( 52 ))
calc_mul_12ns_40sfYi_U15(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_686_p0),
    .din1(grp_fu_686_p1),
    .ce(1'b1),
    .dout(grp_fu_686_p2)
);

calc_mul_12ns_40sfYi #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 40 ),
    .dout_WIDTH( 52 ))
calc_mul_12ns_40sfYi_U16(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_701_p0),
    .din1(grp_fu_701_p1),
    .ce(1'b1),
    .dout(grp_fu_701_p2)
);

calc_mul_12ns_40sfYi #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 40 ),
    .dout_WIDTH( 52 ))
calc_mul_12ns_40sfYi_U17(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_716_p0),
    .din1(grp_fu_716_p1),
    .ce(1'b1),
    .dout(grp_fu_716_p2)
);

calc_mul_12ns_40sfYi #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 40 ),
    .dout_WIDTH( 52 ))
calc_mul_12ns_40sfYi_U18(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_731_p0),
    .din1(grp_fu_731_p1),
    .ce(1'b1),
    .dout(grp_fu_731_p2)
);

calc_mul_12ns_40sfYi #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 40 ),
    .dout_WIDTH( 52 ))
calc_mul_12ns_40sfYi_U19(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_746_p0),
    .din1(grp_fu_746_p1),
    .ce(1'b1),
    .dout(grp_fu_746_p2)
);

calc_mul_12ns_40sfYi #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 40 ),
    .dout_WIDTH( 52 ))
calc_mul_12ns_40sfYi_U20(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_761_p0),
    .din1(grp_fu_761_p1),
    .ce(1'b1),
    .dout(grp_fu_761_p2)
);

calc_mul_12ns_40sfYi #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 40 ),
    .dout_WIDTH( 52 ))
calc_mul_12ns_40sfYi_U21(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_776_p0),
    .din1(grp_fu_776_p1),
    .ce(1'b1),
    .dout(grp_fu_776_p2)
);

calc_mux_832_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 32 ),
    .dout_WIDTH( 16 ))
calc_mux_832_16_1_1_U22(
    .din0(tmp_42_fu_1820_p1),
    .din1(tmp_42_fu_1820_p2),
    .din2(tmp_42_fu_1820_p3),
    .din3(tmp_42_fu_1820_p4),
    .din4(tmp_42_fu_1820_p5),
    .din5(tmp_42_fu_1820_p6),
    .din6(tmp_42_fu_1820_p7),
    .din7(tmp_42_fu_1820_p8),
    .din8(tmp_42_fu_1820_p9),
    .dout(tmp_42_fu_1820_p10)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state60) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((exitcond3_fu_652_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state60)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state60);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end else if (((exitcond3_fu_652_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49))) begin
            ap_enable_reg_pp0_iter8 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_buf_r_AWREADY <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter2 == 1'b1) & (exitcond2_reg_2483_pp0_iter1_reg == 1'd0))) begin
            if ((1'b0 == ap_block_pp0_stage0_11001)) begin
                ap_reg_ioackin_buf_r_AWREADY <= 1'b0;
            end else if (((1'b0 == ap_block_pp0_stage0_01001) & (buf_r_AWREADY == 1'b1))) begin
                ap_reg_ioackin_buf_r_AWREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_buf_r_WREADY <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter3 == 1'b1) & (exitcond2_reg_2483_pp0_iter2_reg == 1'd0))) begin
            if ((1'b0 == ap_block_pp0_stage0_11001)) begin
                ap_reg_ioackin_buf_r_WREADY <= 1'b0;
            end else if (((1'b0 == ap_block_pp0_stage0_01001) & (buf_r_WREADY == 1'b1))) begin
                ap_reg_ioackin_buf_r_WREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_mandel_calc_fu_449_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state57)) begin
            grp_mandel_calc_fu_449_ap_start_reg <= 1'b1;
        end else if ((grp_mandel_calc_fu_449_ap_ready == 1'b1)) begin
            grp_mandel_calc_fu_449_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_mandel_calc_fu_457_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state57)) begin
            grp_mandel_calc_fu_457_ap_start_reg <= 1'b1;
        end else if ((grp_mandel_calc_fu_457_ap_ready == 1'b1)) begin
            grp_mandel_calc_fu_457_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_mandel_calc_fu_465_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state57)) begin
            grp_mandel_calc_fu_465_ap_start_reg <= 1'b1;
        end else if ((grp_mandel_calc_fu_465_ap_ready == 1'b1)) begin
            grp_mandel_calc_fu_465_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_mandel_calc_fu_473_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state57)) begin
            grp_mandel_calc_fu_473_ap_start_reg <= 1'b1;
        end else if ((grp_mandel_calc_fu_473_ap_ready == 1'b1)) begin
            grp_mandel_calc_fu_473_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_mandel_calc_fu_481_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state57)) begin
            grp_mandel_calc_fu_481_ap_start_reg <= 1'b1;
        end else if ((grp_mandel_calc_fu_481_ap_ready == 1'b1)) begin
            grp_mandel_calc_fu_481_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_mandel_calc_fu_489_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state57)) begin
            grp_mandel_calc_fu_489_ap_start_reg <= 1'b1;
        end else if ((grp_mandel_calc_fu_489_ap_ready == 1'b1)) begin
            grp_mandel_calc_fu_489_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_mandel_calc_fu_497_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state57)) begin
            grp_mandel_calc_fu_497_ap_start_reg <= 1'b1;
        end else if ((grp_mandel_calc_fu_497_ap_ready == 1'b1)) begin
            grp_mandel_calc_fu_497_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_mandel_calc_fu_505_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state57)) begin
            grp_mandel_calc_fu_505_ap_start_reg <= 1'b1;
        end else if ((grp_mandel_calc_fu_505_ap_ready == 1'b1)) begin
            grp_mandel_calc_fu_505_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_652_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49))) begin
        i_op_assign_reg_438 <= 12'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond2_fu_1763_p2 == 1'd0))) begin
        i_op_assign_reg_438 <= grp_fu_646_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond3_fu_652_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49))) begin
        index_1_reg_428 <= index_reg_405;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond2_fu_1763_p2 == 1'd0))) begin
        index_1_reg_428 <= grp_fu_1917_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        index_reg_405 <= reg_2099;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        index_reg_405 <= 24'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        indvars_iv_reg_374 <= grp_fu_1917_p2;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        indvars_iv_reg_374 <= tmp_cast_fu_627_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        p_Val2_29_reg_384 <= grp_fu_1909_p3;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        p_Val2_29_reg_384 <= Y0_V_read_reg_1943;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        reg_1922 <= tmp_81_fu_812_p1;
    end else if (((1'b0 == ap_block_state58_on_subcall_done) & (1'b1 == ap_CS_fsm_state58))) begin
        reg_1922 <= grp_mandel_calc_fu_489_ap_return;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        reg_1922 <= p_0_4_fu_1534_p3;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        reg_1922 <= p_Val2_13_6_fu_1112_p2;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond2_fu_1763_p2 == 1'd0))) begin
        reg_1922 <= newIndex1_fu_1789_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        reg_1961 <= p_Val2_28_fu_543_p1;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        reg_1961 <= p_Val2_12_fu_824_p2;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        reg_1961 <= tmp_66_fu_792_p1;
    end else if (((1'b0 == ap_block_state58_on_subcall_done) & (1'b1 == ap_CS_fsm_state58))) begin
        reg_1961 <= grp_mandel_calc_fu_465_ap_return;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        reg_1961 <= p_0_7_fu_1744_p3;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond2_reg_2483 == 1'd0))) begin
        reg_1961 <= mem_4_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        reg_1991 <= p_Val2_13_5_fu_1066_p2;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        reg_1991 <= tmp_84_fu_816_p1;
    end else if (((1'b0 == ap_block_state58_on_subcall_done) & (1'b1 == ap_CS_fsm_state58))) begin
        reg_1991 <= grp_mandel_calc_fu_449_ap_return;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond2_fu_1763_p2 == 1'd0))) begin
        reg_1991 <= newIndex1_fu_1789_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        reg_2044 <= grp_fu_1838_p2;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        reg_2044 <= grp_fu_686_p2;
    end else if (((1'b1 == ap_CS_fsm_state49) & (exitcond3_fu_652_p2 == 1'd0))) begin
        reg_2044 <= r_V_1_fu_682_p1;
    end else if (((1'b0 == ap_block_state58_on_subcall_done) & (1'b1 == ap_CS_fsm_state58))) begin
        reg_2044 <= grp_mandel_calc_fu_497_ap_return;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        reg_2044 <= p_0_6_fu_1674_p3;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        reg_2044 <= p_Val2_13_4_fu_1020_p2;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond2_reg_2483 == 1'd0))) begin
        reg_2044 <= mem_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        reg_2054 <= tmp_s_fu_527_p1;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        reg_2054 <= p_Val2_13_3_fu_974_p2;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        reg_2054 <= p_0_3_fu_1464_p3;
    end else if (((1'b1 == ap_CS_fsm_state49) & (exitcond3_fu_652_p2 == 1'd0))) begin
        reg_2054 <= r_V_2_fu_697_p1;
    end else if (((1'b0 == ap_block_state58_on_subcall_done) & (1'b1 == ap_CS_fsm_state58))) begin
        reg_2054 <= grp_mandel_calc_fu_473_ap_return;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        reg_2054 <= grp_fu_701_p2;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond2_fu_1763_p2 == 1'd0))) begin
        reg_2054 <= newIndex1_fu_1789_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        reg_2064 <= tmp_69_fu_796_p1;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        reg_2064 <= p_Val2_13_7_fu_1158_p2;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        reg_2064 <= grp_fu_1909_p3;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond2_reg_2483 == 1'd0))) begin
        reg_2064 <= mem_5_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        reg_2074 <= tmp_72_fu_800_p1;
    end else if (((1'b0 == ap_block_state58_on_subcall_done) & (1'b1 == ap_CS_fsm_state58))) begin
        reg_2074 <= grp_mandel_calc_fu_457_ap_return;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        reg_2074 <= p_Val2_13_2_fu_928_p2;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond2_reg_2483_pp0_iter1_reg == 1'd0))) begin
        reg_2074 <= tmp_42_fu_1820_p10;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        reg_2079 <= p_0_2_fu_1394_p3;
    end else if (((1'b0 == ap_block_state58_on_subcall_done) & (1'b1 == ap_CS_fsm_state58))) begin
        reg_2079 <= grp_mandel_calc_fu_505_ap_return;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        reg_2079 <= tmp_75_fu_804_p1;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond2_reg_2483 == 1'd0))) begin
        reg_2079 <= mem_6_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        reg_2084 <= tmp_78_fu_808_p1;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        reg_2084 <= grp_fu_1310_p3;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond2_reg_2483 == 1'd0))) begin
        reg_2084 <= mem_7_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        reg_2099 <= grp_fu_661_p2;
    end else if (((1'b1 == ap_CS_fsm_state49) & (exitcond3_fu_652_p2 == 1'd0))) begin
        reg_2099 <= r_V_fu_657_p1;
    end else if (((1'b0 == ap_block_state58_on_subcall_done) & (1'b1 == ap_CS_fsm_state58))) begin
        reg_2099 <= grp_mandel_calc_fu_481_ap_return;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        reg_2099 <= p_0_5_fu_1604_p3;
    end else if (((1'b1 == ap_CS_fsm_state55) | ((exitcond3_fu_652_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49)))) begin
        reg_2099 <= grp_fu_1917_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        reg_2129 <= grp_fu_716_p2;
    end else if (((1'b1 == ap_CS_fsm_state49) & (exitcond3_fu_652_p2 == 1'd0))) begin
        reg_2129 <= r_V_3_fu_712_p1;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond2_fu_1763_p2 == 1'd0))) begin
        reg_2129 <= tmp_43_fu_1807_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state49) & (exitcond3_fu_652_p2 == 1'd0))) begin
        reg_2139 <= r_V_4_fu_727_p1;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        reg_2139 <= grp_fu_731_p2;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond2_reg_2483 == 1'd0))) begin
        reg_2139 <= mem_2_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state49) & (exitcond3_fu_652_p2 == 1'd0))) begin
        reg_2149 <= r_V_5_fu_742_p1;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        reg_2149 <= grp_fu_746_p2;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond2_fu_1763_p2 == 1'd0))) begin
        reg_2149 <= newIndex1_fu_1789_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        reg_2159 <= grp_fu_761_p2;
    end else if (((1'b1 == ap_CS_fsm_state49) & (exitcond3_fu_652_p2 == 1'd0))) begin
        reg_2159 <= r_V_6_fu_757_p1;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond2_fu_1763_p2 == 1'd0))) begin
        reg_2159 <= tmp_93_fu_1775_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        reg_2169 <= grp_fu_776_p2;
    end else if (((1'b1 == ap_CS_fsm_state49) & (exitcond3_fu_652_p2 == 1'd0))) begin
        reg_2169 <= r_V_7_fu_772_p1;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond2_reg_2483 == 1'd0))) begin
        reg_2169 <= mem_3_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        reg_2174 <= tmp_87_fu_820_p1;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond2_reg_2483 == 1'd0))) begin
        reg_2174 <= mem_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state49) & (exitcond3_fu_652_p2 == 1'd0))) begin
        reg_2502 <= {{tmp_V_1_reg_417[11:3]}};
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond2_fu_1763_p2 == 1'd0))) begin
        reg_2502 <= newIndex1_fu_1789_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        t_V_1_reg_394 <= line_V_reg_2035;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        t_V_1_reg_394 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state48) & (exitcond_fu_641_p2 == 1'd0))) begin
        tmp_V_1_reg_417 <= 12'd0;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        tmp_V_1_reg_417 <= pix_x_V_7_reg_1978;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        X0_V_read_reg_1948 <= X0_V;
        Y0_V_read_reg_1943 <= Y0_V;
        maxIter_read_reg_1934 <= maxIter;
        width_V_read_reg_2089 <= width_V;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exitcond2_reg_2483 <= exitcond2_fu_1763_p2;
        exitcond2_reg_2483_pp0_iter1_reg <= exitcond2_reg_2483;
        reg_2129_pp0_iter1_reg <= reg_2129;
        reg_2159_pp0_iter1_reg <= reg_2159;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        exitcond2_reg_2483_pp0_iter2_reg <= exitcond2_reg_2483_pp0_iter1_reg;
        exitcond2_reg_2483_pp0_iter3_reg <= exitcond2_reg_2483_pp0_iter2_reg;
        exitcond2_reg_2483_pp0_iter4_reg <= exitcond2_reg_2483_pp0_iter3_reg;
        exitcond2_reg_2483_pp0_iter5_reg <= exitcond2_reg_2483_pp0_iter4_reg;
        exitcond2_reg_2483_pp0_iter6_reg <= exitcond2_reg_2483_pp0_iter5_reg;
        exitcond2_reg_2483_pp0_iter7_reg <= exitcond2_reg_2483_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        height_V_reg_1966 <= {{height_V_fu_617_p1[13:2]}};
        lhs_V_8_cast_reg_2015 <= lhs_V_8_cast_fu_634_p1;
        rhs_V_4_reg_2027 <= rhs_V_4_fu_637_p1;
        tmp_31_reg_2003 <= tmp_31_fu_630_p1;
        tmp_cast_reg_1996[11 : 0] <= tmp_cast_fu_627_p1[11 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        line_V_reg_2035 <= grp_fu_646_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        p_Result_21_reg_1984 <= grp_fu_530_p2[32'd39];
        p_Result_s_reg_1971 <= grp_fu_530_p2[32'd40];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        p_not4_1_reg_2230 <= p_not4_1_fu_910_p2;
        p_not4_2_reg_2258 <= p_not4_2_fu_956_p2;
        p_not4_3_reg_2286 <= p_not4_3_fu_1002_p2;
        p_not4_4_reg_2314 <= p_not4_4_fu_1048_p2;
        p_not4_5_reg_2342 <= p_not4_5_fu_1094_p2;
        p_not4_6_reg_2370 <= p_not4_6_fu_1140_p2;
        p_not4_7_reg_2398 <= p_not4_7_fu_1186_p2;
        p_not4_reg_2202 <= p_not4_fu_864_p2;
        p_not_1_reg_2225 <= p_not_1_fu_904_p2;
        p_not_2_reg_2253 <= p_not_2_fu_950_p2;
        p_not_3_reg_2281 <= p_not_3_fu_996_p2;
        p_not_4_reg_2309 <= p_not_4_fu_1042_p2;
        p_not_5_reg_2337 <= p_not_5_fu_1088_p2;
        p_not_6_reg_2365 <= p_not_6_fu_1134_p2;
        p_not_7_reg_2393 <= p_not_7_fu_1180_p2;
        p_not_reg_2059 <= p_not_fu_858_p2;
        tmp_67_reg_2032 <= ret_V_s_fu_836_p2[32'd51];
        tmp_68_reg_2049 <= p_Val2_12_fu_824_p2[32'd39];
        tmp_70_reg_2207 <= ret_V_21_1_fu_870_p2[32'd51];
        tmp_71_reg_2219 <= grp_fu_1917_p2[32'd39];
        tmp_73_reg_2235 <= ret_V_21_2_fu_916_p2[32'd51];
        tmp_74_reg_2247 <= p_Val2_13_2_fu_928_p2[32'd39];
        tmp_76_reg_2263 <= ret_V_21_3_fu_962_p2[32'd51];
        tmp_77_reg_2275 <= p_Val2_13_3_fu_974_p2[32'd39];
        tmp_79_reg_2291 <= ret_V_21_4_fu_1008_p2[32'd51];
        tmp_80_reg_2303 <= p_Val2_13_4_fu_1020_p2[32'd39];
        tmp_82_reg_2319 <= ret_V_21_5_fu_1054_p2[32'd51];
        tmp_83_reg_2331 <= p_Val2_13_5_fu_1066_p2[32'd39];
        tmp_85_reg_2347 <= ret_V_21_6_fu_1100_p2[32'd51];
        tmp_86_reg_2359 <= p_Val2_13_6_fu_1112_p2[32'd39];
        tmp_88_reg_2375 <= ret_V_21_7_fu_1146_p2[32'd51];
        tmp_89_reg_2387 <= p_Val2_13_7_fu_1158_p2[32'd39];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state49) & (exitcond3_fu_652_p2 == 1'd0))) begin
        pix_x_V_7_reg_1978 <= grp_fu_1917_p2;
    end
end

always @ (*) begin
    if ((exitcond2_fu_1763_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state60 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state60 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_fu_641_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state48))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_fu_641_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state48))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_buf_r_AWREADY == 1'b0)) begin
        ap_sig_ioackin_buf_r_AWREADY = buf_r_AWREADY;
    end else begin
        ap_sig_ioackin_buf_r_AWREADY = 1'b1;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_buf_r_WREADY == 1'b0)) begin
        ap_sig_ioackin_buf_r_WREADY = buf_r_WREADY;
    end else begin
        ap_sig_ioackin_buf_r_WREADY = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_reg_ioackin_buf_r_AWREADY == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (exitcond2_reg_2483_pp0_iter1_reg == 1'd0))) begin
        buf_r_AWVALID = 1'b1;
    end else begin
        buf_r_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (exitcond2_reg_2483_pp0_iter7_reg == 1'd0))) begin
        buf_r_BREADY = 1'b1;
    end else begin
        buf_r_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_reg_ioackin_buf_r_WREADY == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (exitcond2_reg_2483_pp0_iter2_reg == 1'd0))) begin
        buf_r_WVALID = 1'b1;
    end else begin
        buf_r_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (exitcond2_reg_2483_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        buf_r_blk_n_AW = m_axi_buf_r_AWREADY;
    end else begin
        buf_r_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b1) & (exitcond2_reg_2483_pp0_iter7_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        buf_r_blk_n_B = m_axi_buf_r_BVALID;
    end else begin
        buf_r_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (exitcond2_reg_2483_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        buf_r_blk_n_W = m_axi_buf_r_WREADY;
    end else begin
        buf_r_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        grp_fu_1240_p0 = brmerge3_fu_1222_p2;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        grp_fu_1240_p0 = brmerge_fu_565_p2;
    end else begin
        grp_fu_1240_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        grp_fu_1247_p0 = underflow_7_fu_1217_p2;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        grp_fu_1247_p0 = underflow_fu_560_p2;
    end else begin
        grp_fu_1247_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        grp_fu_1254_p0 = brmerge5_fu_1875_p2;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        grp_fu_1254_p0 = brmerge34_1_fu_1292_p2;
    end else begin
        grp_fu_1254_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        grp_fu_1254_p2 = y_V_fu_1851_p1;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        grp_fu_1254_p2 = reg_2099;
    end else begin
        grp_fu_1254_p2 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        grp_fu_1310_p0 = brmerge4_fu_1234_p2;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        grp_fu_1310_p0 = brmerge9_fu_574_p2;
    end else begin
        grp_fu_1310_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        grp_fu_1838_p0 = lhs_V_3_fu_1834_p1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        grp_fu_1838_p0 = p_shl_fu_604_p3;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_fu_1838_p0 = lhs_V_fu_513_p1;
    end else begin
        grp_fu_1838_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        grp_fu_1838_p1 = rhs_V_4_reg_2027;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        grp_fu_1838_p1 = lhs_V_7_cast_fu_601_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_fu_1838_p1 = rhs_V_fu_517_p1;
    end else begin
        grp_fu_1838_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        grp_fu_1909_p0 = brmerge6_fu_1887_p2;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        grp_fu_1909_p0 = brmerge35_1_fu_1304_p2;
    end else begin
        grp_fu_1909_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_1917_p0 = 24'd1;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        grp_fu_1917_p0 = X0_V_read_reg_1948;
    end else if (((1'b1 == ap_CS_fsm_state69) | ((exitcond3_fu_652_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49)))) begin
        grp_fu_1917_p0 = tmp_cast_reg_1996;
    end else if (((1'b1 == ap_CS_fsm_state49) & (exitcond3_fu_652_p2 == 1'd0))) begin
        grp_fu_1917_p0 = 12'd8;
    end else begin
        grp_fu_1917_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        grp_fu_1917_p1 = indvars_iv_reg_374;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_1917_p1 = index_1_reg_428;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        grp_fu_1917_p1 = reg_2064;
    end else if (((exitcond3_fu_652_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49))) begin
        grp_fu_1917_p1 = index_reg_405;
    end else if (((1'b1 == ap_CS_fsm_state49) & (exitcond3_fu_652_p2 == 1'd0))) begin
        grp_fu_1917_p1 = tmp_V_1_reg_417;
    end else begin
        grp_fu_1917_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_530_ap_start = 1'b1;
    end else begin
        grp_fu_530_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        grp_fu_586_p0 = underflow_8_fu_1869_p2;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        grp_fu_586_p0 = underflow_7_1_fu_1287_p2;
    end else begin
        grp_fu_586_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        grp_fu_586_p2 = y_V_fu_1851_p1;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        grp_fu_586_p2 = reg_2099;
    end else begin
        grp_fu_586_p2 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        grp_fu_646_p0 = i_op_assign_reg_438;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        grp_fu_646_p0 = t_V_1_reg_394;
    end else begin
        grp_fu_646_p0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        mem_0_address0 = newIndex1_fu_1789_p1;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        mem_0_address0 = newIndex3_fu_1752_p1;
    end else begin
        mem_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state59) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        mem_0_ce0 = 1'b1;
    end else begin
        mem_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        mem_0_we0 = 1'b1;
    end else begin
        mem_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        mem_1_address0 = newIndex1_fu_1789_p1;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        mem_1_address0 = newIndex3_fu_1752_p1;
    end else begin
        mem_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state59) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        mem_1_ce0 = 1'b1;
    end else begin
        mem_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        mem_1_we0 = 1'b1;
    end else begin
        mem_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        mem_2_address0 = newIndex1_fu_1789_p1;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        mem_2_address0 = newIndex3_fu_1752_p1;
    end else begin
        mem_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state59) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        mem_2_ce0 = 1'b1;
    end else begin
        mem_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        mem_2_we0 = 1'b1;
    end else begin
        mem_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        mem_3_address0 = newIndex1_fu_1789_p1;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        mem_3_address0 = newIndex3_fu_1752_p1;
    end else begin
        mem_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state59) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        mem_3_ce0 = 1'b1;
    end else begin
        mem_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        mem_3_we0 = 1'b1;
    end else begin
        mem_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        mem_4_address0 = newIndex1_fu_1789_p1;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        mem_4_address0 = newIndex3_fu_1752_p1;
    end else begin
        mem_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state59) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        mem_4_ce0 = 1'b1;
    end else begin
        mem_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        mem_4_we0 = 1'b1;
    end else begin
        mem_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        mem_5_address0 = newIndex1_fu_1789_p1;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        mem_5_address0 = newIndex3_fu_1752_p1;
    end else begin
        mem_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state59) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        mem_5_ce0 = 1'b1;
    end else begin
        mem_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        mem_5_we0 = 1'b1;
    end else begin
        mem_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        mem_6_address0 = newIndex1_fu_1789_p1;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        mem_6_address0 = newIndex3_fu_1752_p1;
    end else begin
        mem_6_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state59) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        mem_6_ce0 = 1'b1;
    end else begin
        mem_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        mem_6_we0 = 1'b1;
    end else begin
        mem_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        mem_7_address0 = newIndex1_fu_1789_p1;
    end else if ((1'b1 == ap_CS_fsm_state59)) begin
        mem_7_address0 = newIndex3_fu_1752_p1;
    end else begin
        mem_7_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state59) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        mem_7_ce0 = 1'b1;
    end else begin
        mem_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        mem_7_we0 = 1'b1;
    end else begin
        mem_7_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            if (((exitcond_fu_641_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state48))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end
        end
        ap_ST_fsm_state49 : begin
            if (((exitcond3_fu_652_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            if (((1'b0 == ap_block_state58_on_subcall_done) & (1'b1 == ap_CS_fsm_state58))) begin
                ap_NS_fsm = ap_ST_fsm_state59;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state58;
            end
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (exitcond2_fu_1763_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter7 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter8 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (exitcond2_fu_1763_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter7 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter8 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state69;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd60];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((buf_r_BVALID == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b1) & (exitcond2_reg_2483_pp0_iter7_reg == 1'd0));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((buf_r_BVALID == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b1) & (exitcond2_reg_2483_pp0_iter7_reg == 1'd0)) | ((1'b1 == ap_block_state63_io) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'b1 == ap_block_state62_io) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((buf_r_BVALID == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b1) & (exitcond2_reg_2483_pp0_iter7_reg == 1'd0)) | ((1'b1 == ap_block_state63_io) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'b1 == ap_block_state62_io) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

always @ (*) begin
    ap_block_state58_on_subcall_done = ((grp_mandel_calc_fu_505_ap_done == 1'b0) | (grp_mandel_calc_fu_497_ap_done == 1'b0) | (grp_mandel_calc_fu_489_ap_done == 1'b0) | (grp_mandel_calc_fu_481_ap_done == 1'b0) | (grp_mandel_calc_fu_473_ap_done == 1'b0) | (grp_mandel_calc_fu_465_ap_done == 1'b0) | (grp_mandel_calc_fu_457_ap_done == 1'b0) | (grp_mandel_calc_fu_449_ap_done == 1'b0));
end

assign ap_block_state60_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state62_io = ((ap_sig_ioackin_buf_r_AWREADY == 1'b0) & (exitcond2_reg_2483_pp0_iter1_reg == 1'd0));
end

assign ap_block_state62_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state63_io = ((ap_sig_ioackin_buf_r_WREADY == 1'b0) & (exitcond2_reg_2483_pp0_iter2_reg == 1'd0));
end

assign ap_block_state63_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state68_pp0_stage0_iter8 = ((buf_r_BVALID == 1'b0) & (exitcond2_reg_2483_pp0_iter7_reg == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign arrayNo_fu_1817_p0 = reg_2159_pp0_iter1_reg;

assign brmerge1_fu_1192_p2 = (tmp_68_reg_2049 | p_not_reg_2059);

assign brmerge2_fu_1212_p2 = (p_not4_reg_2202 | newsignbit_i_i_i_i_fu_1207_p2);

assign brmerge32_1_fu_1262_p2 = (tmp_71_reg_2219 | p_not_1_reg_2225);

assign brmerge32_2_fu_1332_p2 = (tmp_74_reg_2247 | p_not_2_reg_2253);

assign brmerge32_3_fu_1402_p2 = (tmp_77_reg_2275 | p_not_3_reg_2281);

assign brmerge32_4_fu_1472_p2 = (tmp_80_reg_2303 | p_not_4_reg_2309);

assign brmerge32_5_fu_1542_p2 = (tmp_83_reg_2331 | p_not_5_reg_2337);

assign brmerge32_6_fu_1612_p2 = (tmp_86_reg_2359 | p_not_6_reg_2365);

assign brmerge32_7_fu_1682_p2 = (tmp_89_reg_2387 | p_not_7_reg_2393);

assign brmerge33_1_fu_1282_p2 = (p_not4_1_reg_2230 | newsignbit_i_i_i_i_0_1_fu_1277_p2);

assign brmerge33_2_fu_1352_p2 = (p_not4_2_reg_2258 | newsignbit_i_i_i_i_0_2_fu_1347_p2);

assign brmerge33_3_fu_1422_p2 = (p_not4_3_reg_2286 | newsignbit_i_i_i_i_0_3_fu_1417_p2);

assign brmerge33_4_fu_1492_p2 = (p_not4_4_reg_2314 | newsignbit_i_i_i_i_0_4_fu_1487_p2);

assign brmerge33_5_fu_1562_p2 = (p_not4_5_reg_2342 | newsignbit_i_i_i_i_0_5_fu_1557_p2);

assign brmerge33_6_fu_1632_p2 = (p_not4_6_reg_2370 | newsignbit_i_i_i_i_0_6_fu_1627_p2);

assign brmerge33_7_fu_1702_p2 = (p_not4_7_reg_2398 | newsignbit_i_i_i_i_0_7_fu_1697_p2);

assign brmerge34_1_fu_1292_p2 = (underflow_7_1_fu_1287_p2 | overflow_7_1_fu_1271_p2);

assign brmerge34_2_fu_1362_p2 = (underflow_7_2_fu_1357_p2 | overflow_7_2_fu_1341_p2);

assign brmerge34_3_fu_1432_p2 = (underflow_7_3_fu_1427_p2 | overflow_7_3_fu_1411_p2);

assign brmerge34_4_fu_1502_p2 = (underflow_7_4_fu_1497_p2 | overflow_7_4_fu_1481_p2);

assign brmerge34_5_fu_1572_p2 = (underflow_7_5_fu_1567_p2 | overflow_7_5_fu_1551_p2);

assign brmerge34_6_fu_1642_p2 = (underflow_7_6_fu_1637_p2 | overflow_7_6_fu_1621_p2);

assign brmerge34_7_fu_1712_p2 = (underflow_7_7_fu_1707_p2 | overflow_7_7_fu_1691_p2);

assign brmerge35_1_fu_1304_p2 = (p_707_not_1_fu_1298_p2 | overflow_7_1_fu_1271_p2);

assign brmerge35_2_fu_1374_p2 = (p_707_not_2_fu_1368_p2 | overflow_7_2_fu_1341_p2);

assign brmerge35_3_fu_1444_p2 = (p_707_not_3_fu_1438_p2 | overflow_7_3_fu_1411_p2);

assign brmerge35_4_fu_1514_p2 = (p_707_not_4_fu_1508_p2 | overflow_7_4_fu_1481_p2);

assign brmerge35_5_fu_1584_p2 = (p_707_not_5_fu_1578_p2 | overflow_7_5_fu_1551_p2);

assign brmerge35_6_fu_1654_p2 = (p_707_not_6_fu_1648_p2 | overflow_7_6_fu_1621_p2);

assign brmerge35_7_fu_1724_p2 = (p_707_not_7_fu_1718_p2 | overflow_7_7_fu_1691_p2);

assign brmerge3_fu_1222_p2 = (underflow_7_fu_1217_p2 | overflow_7_fu_1201_p2);

assign brmerge4_fu_1234_p2 = (p_707_not_fu_1228_p2 | overflow_7_fu_1201_p2);

assign brmerge5_fu_1875_p2 = (p_Result_23_fu_1855_p3 ^ p_Result_22_fu_1843_p3);

assign brmerge6_fu_1887_p2 = (signbit_i_i_0_not_fu_1881_p2 | p_Result_23_fu_1855_p3);

assign brmerge9_fu_574_p2 = (signbit_i_i_i_i27_0_s_fu_569_p2 | p_Result_21_reg_1984);

assign brmerge_fu_565_p2 = (p_Result_s_reg_1971 ^ p_Result_21_reg_1984);

assign buf_r_AWADDR = reg_2129_pp0_iter1_reg;

assign buf_r_WDATA = reg_2074;

assign exitcond2_fu_1763_p2 = ((index_1_reg_428 == indvars_iv_reg_374) ? 1'b1 : 1'b0);

assign exitcond3_fu_652_p2 = ((tmp_V_1_reg_417 == width_V_read_reg_2089) ? 1'b1 : 1'b0);

assign exitcond_fu_641_p2 = ((t_V_1_reg_394 == height_V_reg_1966) ? 1'b1 : 1'b0);

assign grp_fu_1240_p3 = ((grp_fu_1240_p0[0:0] === 1'b1) ? 40'd549755813887 : reg_1961);

assign grp_fu_1247_p3 = ((grp_fu_1247_p0[0:0] === 1'b1) ? 40'd549755813888 : reg_1961);

assign grp_fu_1254_p3 = ((grp_fu_1254_p0[0:0] === 1'b1) ? 40'd549755813887 : grp_fu_1254_p2);

assign grp_fu_1310_p3 = ((grp_fu_1310_p0[0:0] === 1'b1) ? grp_fu_1240_p3 : grp_fu_1247_p3);

assign grp_fu_1838_p2 = (grp_fu_1838_p0 - grp_fu_1838_p1);

assign grp_fu_1909_p3 = ((grp_fu_1909_p0[0:0] === 1'b1) ? grp_fu_1254_p3 : grp_fu_586_p3);

assign grp_fu_1917_p2 = ($signed(grp_fu_1917_p0) + $signed(grp_fu_1917_p1));

assign grp_fu_530_p0 = reg_2044;

assign grp_fu_530_p1 = grp_fu_530_p10;

assign grp_fu_530_p10 = width_V_read_reg_2089;

assign grp_fu_586_p3 = ((grp_fu_586_p0[0:0] === 1'b1) ? 40'd549755813888 : grp_fu_586_p2);

assign grp_fu_646_p2 = (grp_fu_646_p0 + 12'd1);

assign grp_fu_661_p0 = grp_fu_661_p00;

assign grp_fu_661_p00 = tmp_V_1_reg_417;

assign grp_fu_661_p1 = tmp_31_reg_2003;

assign grp_fu_686_p0 = grp_fu_686_p00;

assign grp_fu_686_p00 = pix_x_V_s_fu_676_p2;

assign grp_fu_686_p1 = tmp_31_reg_2003;

assign grp_fu_701_p0 = grp_fu_701_p00;

assign grp_fu_701_p00 = pix_x_V_1_fu_691_p2;

assign grp_fu_701_p1 = tmp_31_reg_2003;

assign grp_fu_716_p0 = grp_fu_716_p00;

assign grp_fu_716_p00 = pix_x_V_2_fu_706_p2;

assign grp_fu_716_p1 = tmp_31_reg_2003;

assign grp_fu_731_p0 = grp_fu_731_p00;

assign grp_fu_731_p00 = pix_x_V_3_fu_721_p2;

assign grp_fu_731_p1 = tmp_31_reg_2003;

assign grp_fu_746_p0 = grp_fu_746_p00;

assign grp_fu_746_p00 = pix_x_V_4_fu_736_p2;

assign grp_fu_746_p1 = tmp_31_reg_2003;

assign grp_fu_761_p0 = grp_fu_761_p00;

assign grp_fu_761_p00 = pix_x_V_5_fu_751_p2;

assign grp_fu_761_p1 = tmp_31_reg_2003;

assign grp_fu_776_p0 = grp_fu_776_p00;

assign grp_fu_776_p00 = pix_x_V_6_fu_766_p2;

assign grp_fu_776_p1 = tmp_31_reg_2003;

assign grp_mandel_calc_fu_449_ap_start = grp_mandel_calc_fu_449_ap_start_reg;

assign grp_mandel_calc_fu_457_ap_start = grp_mandel_calc_fu_457_ap_start_reg;

assign grp_mandel_calc_fu_465_ap_start = grp_mandel_calc_fu_465_ap_start_reg;

assign grp_mandel_calc_fu_473_ap_start = grp_mandel_calc_fu_473_ap_start_reg;

assign grp_mandel_calc_fu_473_x_in_V = reg_2054;

assign grp_mandel_calc_fu_481_ap_start = grp_mandel_calc_fu_481_ap_start_reg;

assign grp_mandel_calc_fu_489_ap_start = grp_mandel_calc_fu_489_ap_start_reg;

assign grp_mandel_calc_fu_489_x_in_V = reg_2099;

assign grp_mandel_calc_fu_497_ap_start = grp_mandel_calc_fu_497_ap_start_reg;

assign grp_mandel_calc_fu_497_x_in_V = reg_2044;

assign grp_mandel_calc_fu_505_ap_start = grp_mandel_calc_fu_505_ap_start_reg;

assign height_V_fu_617_p1 = grp_fu_1838_p2;

assign lhs_V_3_fu_1834_p1 = $signed(p_Val2_29_reg_384);

assign lhs_V_7_cast_fu_601_p1 = width_V_read_reg_2089;

assign lhs_V_8_cast_fu_634_p1 = X0_V_read_reg_1948;

assign lhs_V_fu_513_p1 = $signed(X1_V);

assign mem_0_d0 = reg_1991;

assign mem_1_d0 = reg_2074;

assign mem_2_d0 = reg_1961;

assign mem_3_d0 = reg_2054;

assign mem_4_d0 = reg_2099;

assign mem_5_d0 = reg_1922;

assign mem_6_d0 = reg_2044;

assign mem_7_d0 = reg_2079;

assign newIndex1_fu_1789_p1 = newIndex_fu_1779_p4;

assign newIndex3_fu_1752_p1 = reg_2502;

assign newIndex_fu_1779_p4 = {{i_op_assign_reg_438[11:3]}};

assign newsignbit_i_i_i_i_0_1_fu_1277_p2 = (tmp_71_reg_2219 ^ 1'd1);

assign newsignbit_i_i_i_i_0_2_fu_1347_p2 = (tmp_74_reg_2247 ^ 1'd1);

assign newsignbit_i_i_i_i_0_3_fu_1417_p2 = (tmp_77_reg_2275 ^ 1'd1);

assign newsignbit_i_i_i_i_0_4_fu_1487_p2 = (tmp_80_reg_2303 ^ 1'd1);

assign newsignbit_i_i_i_i_0_5_fu_1557_p2 = (tmp_83_reg_2331 ^ 1'd1);

assign newsignbit_i_i_i_i_0_6_fu_1627_p2 = (tmp_86_reg_2359 ^ 1'd1);

assign newsignbit_i_i_i_i_0_7_fu_1697_p2 = (tmp_89_reg_2387 ^ 1'd1);

assign newsignbit_i_i_i_i_fu_1207_p2 = (tmp_68_reg_2049 ^ 1'd1);

assign overflow_7_1_fu_1271_p2 = (tmp_76_1_fu_1266_p2 & brmerge32_1_fu_1262_p2);

assign overflow_7_2_fu_1341_p2 = (tmp_76_2_fu_1336_p2 & brmerge32_2_fu_1332_p2);

assign overflow_7_3_fu_1411_p2 = (tmp_76_3_fu_1406_p2 & brmerge32_3_fu_1402_p2);

assign overflow_7_4_fu_1481_p2 = (tmp_76_4_fu_1476_p2 & brmerge32_4_fu_1472_p2);

assign overflow_7_5_fu_1551_p2 = (tmp_76_5_fu_1546_p2 & brmerge32_5_fu_1542_p2);

assign overflow_7_6_fu_1621_p2 = (tmp_76_6_fu_1616_p2 & brmerge32_6_fu_1612_p2);

assign overflow_7_7_fu_1691_p2 = (tmp_76_7_fu_1686_p2 & brmerge32_7_fu_1682_p2);

assign overflow_7_fu_1201_p2 = (tmp_32_fu_1196_p2 & brmerge1_fu_1192_p2);

assign p_0_2_fu_1394_p3 = ((brmerge35_2_fu_1374_p2[0:0] === 1'b1) ? p_mux7_2_fu_579_p3 : p_11_2_fu_1387_p3);

assign p_0_3_fu_1464_p3 = ((brmerge35_3_fu_1444_p2[0:0] === 1'b1) ? p_mux7_3_fu_1450_p3 : p_11_3_fu_1457_p3);

assign p_0_4_fu_1534_p3 = ((brmerge35_4_fu_1514_p2[0:0] === 1'b1) ? p_mux7_4_fu_1520_p3 : p_11_4_fu_1527_p3);

assign p_0_5_fu_1604_p3 = ((brmerge35_5_fu_1584_p2[0:0] === 1'b1) ? p_mux7_5_fu_1590_p3 : p_11_5_fu_1597_p3);

assign p_0_6_fu_1674_p3 = ((brmerge35_6_fu_1654_p2[0:0] === 1'b1) ? p_mux7_6_fu_1660_p3 : p_11_6_fu_1667_p3);

assign p_0_7_fu_1744_p3 = ((brmerge35_7_fu_1724_p2[0:0] === 1'b1) ? p_mux7_7_fu_1730_p3 : p_11_7_fu_1737_p3);

assign p_11_2_fu_1387_p3 = ((underflow_7_2_fu_1357_p2[0:0] === 1'b1) ? 40'd549755813888 : reg_2074);

assign p_11_3_fu_1457_p2 = reg_2054;

assign p_11_3_fu_1457_p3 = ((underflow_7_3_fu_1427_p2[0:0] === 1'b1) ? 40'd549755813888 : p_11_3_fu_1457_p2);

assign p_11_4_fu_1527_p2 = reg_2044;

assign p_11_4_fu_1527_p3 = ((underflow_7_4_fu_1497_p2[0:0] === 1'b1) ? 40'd549755813888 : p_11_4_fu_1527_p2);

assign p_11_5_fu_1597_p3 = ((underflow_7_5_fu_1567_p2[0:0] === 1'b1) ? 40'd549755813888 : reg_1991);

assign p_11_6_fu_1667_p3 = ((underflow_7_6_fu_1637_p2[0:0] === 1'b1) ? 40'd549755813888 : reg_1922);

assign p_11_7_fu_1737_p3 = ((underflow_7_7_fu_1707_p2[0:0] === 1'b1) ? 40'd549755813888 : reg_2064);

assign p_707_not_1_fu_1298_p2 = (underflow_7_1_fu_1287_p2 ^ 1'd1);

assign p_707_not_2_fu_1368_p2 = (underflow_7_2_fu_1357_p2 ^ 1'd1);

assign p_707_not_3_fu_1438_p2 = (underflow_7_3_fu_1427_p2 ^ 1'd1);

assign p_707_not_4_fu_1508_p2 = (underflow_7_4_fu_1497_p2 ^ 1'd1);

assign p_707_not_5_fu_1578_p2 = (underflow_7_5_fu_1567_p2 ^ 1'd1);

assign p_707_not_6_fu_1648_p2 = (underflow_7_6_fu_1637_p2 ^ 1'd1);

assign p_707_not_7_fu_1718_p2 = (underflow_7_7_fu_1707_p2 ^ 1'd1);

assign p_707_not_fu_1228_p2 = (underflow_7_fu_1217_p2 ^ 1'd1);

assign p_Result_22_fu_1843_p3 = grp_fu_1838_p2[32'd40];

assign p_Result_23_fu_1855_p3 = grp_fu_1838_p2[32'd39];

assign p_Val2_12_fu_824_p2 = ($signed(X0_V_read_reg_1948) + $signed(reg_1961));

assign p_Val2_13_2_fu_928_p2 = ($signed(X0_V_read_reg_1948) + $signed(reg_2074));

assign p_Val2_13_3_fu_974_p2 = ($signed(X0_V_read_reg_1948) + $signed(reg_2079));

assign p_Val2_13_4_fu_1020_p2 = ($signed(X0_V_read_reg_1948) + $signed(reg_2084));

assign p_Val2_13_5_fu_1066_p2 = ($signed(X0_V_read_reg_1948) + $signed(reg_1922));

assign p_Val2_13_6_fu_1112_p2 = ($signed(X0_V_read_reg_1948) + $signed(reg_1991));

assign p_Val2_13_7_fu_1158_p2 = ($signed(X0_V_read_reg_1948) + $signed(reg_2174));

assign p_Val2_28_fu_543_p1 = grp_fu_530_p2[39:0];

assign p_mux7_2_fu_579_p3 = ((brmerge34_2_fu_1362_p2[0:0] === 1'b1) ? 40'd549755813887 : reg_2074);

assign p_mux7_3_fu_1450_p2 = reg_2054;

assign p_mux7_3_fu_1450_p3 = ((brmerge34_3_fu_1432_p2[0:0] === 1'b1) ? 40'd549755813887 : p_mux7_3_fu_1450_p2);

assign p_mux7_4_fu_1520_p2 = reg_2044;

assign p_mux7_4_fu_1520_p3 = ((brmerge34_4_fu_1502_p2[0:0] === 1'b1) ? 40'd549755813887 : p_mux7_4_fu_1520_p2);

assign p_mux7_5_fu_1590_p3 = ((brmerge34_5_fu_1572_p2[0:0] === 1'b1) ? 40'd549755813887 : reg_1991);

assign p_mux7_6_fu_1660_p3 = ((brmerge34_6_fu_1642_p2[0:0] === 1'b1) ? 40'd549755813887 : reg_1922);

assign p_mux7_7_fu_1730_p3 = ((brmerge34_7_fu_1712_p2[0:0] === 1'b1) ? 40'd549755813887 : reg_2064);

assign p_not4_1_fu_910_p2 = ((tmp_34_fu_894_p4 != 12'd4095) ? 1'b1 : 1'b0);

assign p_not4_2_fu_956_p2 = ((tmp_35_fu_940_p4 != 12'd4095) ? 1'b1 : 1'b0);

assign p_not4_3_fu_1002_p2 = ((tmp_36_fu_986_p4 != 12'd4095) ? 1'b1 : 1'b0);

assign p_not4_4_fu_1048_p2 = ((tmp_37_fu_1032_p4 != 12'd4095) ? 1'b1 : 1'b0);

assign p_not4_5_fu_1094_p2 = ((tmp_38_fu_1078_p4 != 12'd4095) ? 1'b1 : 1'b0);

assign p_not4_6_fu_1140_p2 = ((tmp_39_fu_1124_p4 != 12'd4095) ? 1'b1 : 1'b0);

assign p_not4_7_fu_1186_p2 = ((tmp_40_fu_1170_p4 != 12'd4095) ? 1'b1 : 1'b0);

assign p_not4_fu_864_p2 = ((tmp_fu_848_p4 != 12'd4095) ? 1'b1 : 1'b0);

assign p_not_1_fu_904_p2 = ((tmp_34_fu_894_p4 != 12'd0) ? 1'b1 : 1'b0);

assign p_not_2_fu_950_p2 = ((tmp_35_fu_940_p4 != 12'd0) ? 1'b1 : 1'b0);

assign p_not_3_fu_996_p2 = ((tmp_36_fu_986_p4 != 12'd0) ? 1'b1 : 1'b0);

assign p_not_4_fu_1042_p2 = ((tmp_37_fu_1032_p4 != 12'd0) ? 1'b1 : 1'b0);

assign p_not_5_fu_1088_p2 = ((tmp_38_fu_1078_p4 != 12'd0) ? 1'b1 : 1'b0);

assign p_not_6_fu_1134_p2 = ((tmp_39_fu_1124_p4 != 12'd0) ? 1'b1 : 1'b0);

assign p_not_7_fu_1180_p2 = ((tmp_40_fu_1170_p4 != 12'd0) ? 1'b1 : 1'b0);

assign p_not_fu_858_p2 = ((tmp_fu_848_p4 != 12'd0) ? 1'b1 : 1'b0);

assign p_shl_fu_604_p3 = {{width_V_read_reg_2089}, {2'd0}};

assign pix_x_V_1_fu_691_p2 = (tmp_V_1_reg_417 | 12'd2);

assign pix_x_V_2_fu_706_p2 = (tmp_V_1_reg_417 | 12'd3);

assign pix_x_V_3_fu_721_p2 = (tmp_V_1_reg_417 | 12'd4);

assign pix_x_V_4_fu_736_p2 = (tmp_V_1_reg_417 | 12'd5);

assign pix_x_V_5_fu_751_p2 = (tmp_V_1_reg_417 | 12'd6);

assign pix_x_V_6_fu_766_p2 = (tmp_V_1_reg_417 | 12'd7);

assign pix_x_V_s_fu_676_p2 = (tmp_V_1_reg_417 | 12'd1);

assign r_V_1_fu_682_p1 = pix_x_V_s_fu_676_p2;

assign r_V_2_fu_697_p1 = pix_x_V_1_fu_691_p2;

assign r_V_3_fu_712_p1 = pix_x_V_2_fu_706_p2;

assign r_V_4_fu_727_p1 = pix_x_V_3_fu_721_p2;

assign r_V_5_fu_742_p1 = pix_x_V_4_fu_736_p2;

assign r_V_6_fu_757_p1 = pix_x_V_5_fu_751_p2;

assign r_V_7_fu_772_p1 = pix_x_V_6_fu_766_p2;

assign r_V_fu_657_p1 = tmp_V_1_reg_417;

assign ret_V_21_1_fu_870_p2 = ($signed(lhs_V_8_cast_reg_2015) + $signed(reg_2044));

assign ret_V_21_2_fu_916_p2 = ($signed(lhs_V_8_cast_reg_2015) + $signed(reg_2054));

assign ret_V_21_3_fu_962_p2 = ($signed(lhs_V_8_cast_reg_2015) + $signed(reg_2129));

assign ret_V_21_4_fu_1008_p2 = ($signed(lhs_V_8_cast_reg_2015) + $signed(reg_2139));

assign ret_V_21_5_fu_1054_p2 = ($signed(lhs_V_8_cast_reg_2015) + $signed(reg_2149));

assign ret_V_21_6_fu_1100_p2 = ($signed(lhs_V_8_cast_reg_2015) + $signed(reg_2159));

assign ret_V_21_7_fu_1146_p2 = ($signed(lhs_V_8_cast_reg_2015) + $signed(reg_2169));

assign ret_V_s_fu_836_p2 = ($signed(lhs_V_8_cast_reg_2015) + $signed(reg_2099));

assign rhs_V_4_fu_637_p0 = grp_fu_1310_p3;

assign rhs_V_4_fu_637_p1 = rhs_V_4_fu_637_p0;

assign rhs_V_fu_517_p0 = X0_V;

assign rhs_V_fu_517_p1 = rhs_V_fu_517_p0;

assign signbit_i_i_0_not_fu_1881_p2 = (p_Result_22_fu_1843_p3 ^ 1'd1);

assign signbit_i_i_i_i27_0_s_fu_569_p2 = (p_Result_s_reg_1971 ^ 1'd1);

assign tmp_30_fu_555_p2 = (p_Result_21_reg_1984 ^ 1'd1);

assign tmp_31_fu_630_p0 = grp_fu_1310_p3;

assign tmp_31_fu_630_p1 = tmp_31_fu_630_p0;

assign tmp_32_fu_1196_p2 = (tmp_67_reg_2032 ^ 1'd1);

assign tmp_34_fu_894_p4 = {{ret_V_21_1_fu_870_p2[51:40]}};

assign tmp_35_fu_940_p4 = {{ret_V_21_2_fu_916_p2[51:40]}};

assign tmp_36_fu_986_p4 = {{ret_V_21_3_fu_962_p2[51:40]}};

assign tmp_37_fu_1032_p4 = {{ret_V_21_4_fu_1008_p2[51:40]}};

assign tmp_38_fu_1078_p4 = {{ret_V_21_5_fu_1054_p2[51:40]}};

assign tmp_39_fu_1124_p4 = {{ret_V_21_6_fu_1100_p2[51:40]}};

assign tmp_40_fu_1170_p4 = {{ret_V_21_7_fu_1146_p2[51:40]}};

assign tmp_41_fu_1863_p2 = (p_Result_23_fu_1855_p3 ^ 1'd1);

assign tmp_42_fu_1820_p1 = reg_2044;

assign tmp_42_fu_1820_p2 = reg_2174;

assign tmp_42_fu_1820_p3 = reg_2139;

assign tmp_42_fu_1820_p4 = reg_2169;

assign tmp_42_fu_1820_p5 = reg_1961;

assign tmp_42_fu_1820_p6 = reg_2064;

assign tmp_42_fu_1820_p7 = reg_2079;

assign tmp_42_fu_1820_p8 = reg_2084;

assign tmp_42_fu_1820_p9 = arrayNo_fu_1817_p0;

assign tmp_43_fu_1807_p1 = index_1_reg_428;

assign tmp_66_fu_792_p1 = grp_fu_661_p2[39:0];

assign tmp_69_fu_796_p1 = grp_fu_686_p2[39:0];

assign tmp_72_fu_800_p1 = grp_fu_701_p2[39:0];

assign tmp_75_fu_804_p1 = grp_fu_716_p2[39:0];

assign tmp_76_1_fu_1266_p2 = (tmp_70_reg_2207 ^ 1'd1);

assign tmp_76_2_fu_1336_p2 = (tmp_73_reg_2235 ^ 1'd1);

assign tmp_76_3_fu_1406_p2 = (tmp_76_reg_2263 ^ 1'd1);

assign tmp_76_4_fu_1476_p2 = (tmp_79_reg_2291 ^ 1'd1);

assign tmp_76_5_fu_1546_p2 = (tmp_82_reg_2319 ^ 1'd1);

assign tmp_76_6_fu_1616_p2 = (tmp_85_reg_2347 ^ 1'd1);

assign tmp_76_7_fu_1686_p2 = (tmp_88_reg_2375 ^ 1'd1);

assign tmp_78_fu_808_p1 = grp_fu_731_p2[39:0];

assign tmp_81_fu_812_p1 = grp_fu_746_p2[39:0];

assign tmp_84_fu_816_p1 = grp_fu_761_p2[39:0];

assign tmp_87_fu_820_p1 = grp_fu_776_p2[39:0];

assign tmp_93_fu_1775_p1 = i_op_assign_reg_438[2:0];

assign tmp_cast_fu_627_p1 = width_V_read_reg_2089;

assign tmp_fu_848_p4 = {{ret_V_s_fu_836_p2[51:40]}};

assign tmp_s_fu_527_p1 = width_V_read_reg_2089;

assign underflow_7_1_fu_1287_p2 = (tmp_70_reg_2207 & brmerge33_1_fu_1282_p2);

assign underflow_7_2_fu_1357_p2 = (tmp_73_reg_2235 & brmerge33_2_fu_1352_p2);

assign underflow_7_3_fu_1427_p2 = (tmp_76_reg_2263 & brmerge33_3_fu_1422_p2);

assign underflow_7_4_fu_1497_p2 = (tmp_79_reg_2291 & brmerge33_4_fu_1492_p2);

assign underflow_7_5_fu_1567_p2 = (tmp_82_reg_2319 & brmerge33_5_fu_1562_p2);

assign underflow_7_6_fu_1637_p2 = (tmp_85_reg_2347 & brmerge33_6_fu_1632_p2);

assign underflow_7_7_fu_1707_p2 = (tmp_88_reg_2375 & brmerge33_7_fu_1702_p2);

assign underflow_7_fu_1217_p2 = (tmp_67_reg_2032 & brmerge2_fu_1212_p2);

assign underflow_8_fu_1869_p2 = (tmp_41_fu_1863_p2 & p_Result_22_fu_1843_p3);

assign underflow_fu_560_p2 = (tmp_30_fu_555_p2 & p_Result_s_reg_1971);

assign y_V_fu_1851_p1 = grp_fu_1838_p2[39:0];

always @ (posedge ap_clk) begin
    tmp_cast_reg_1996[23:12] <= 12'b000000000000;
end

endmodule //calc
