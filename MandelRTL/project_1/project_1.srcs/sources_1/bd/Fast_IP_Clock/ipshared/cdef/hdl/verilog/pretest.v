// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module pretest (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        x_V,
        y_V,
        ap_return
);

parameter    ap_ST_fsm_state1 = 20'd1;
parameter    ap_ST_fsm_state2 = 20'd2;
parameter    ap_ST_fsm_state3 = 20'd4;
parameter    ap_ST_fsm_state4 = 20'd8;
parameter    ap_ST_fsm_state5 = 20'd16;
parameter    ap_ST_fsm_state6 = 20'd32;
parameter    ap_ST_fsm_state7 = 20'd64;
parameter    ap_ST_fsm_state8 = 20'd128;
parameter    ap_ST_fsm_state9 = 20'd256;
parameter    ap_ST_fsm_state10 = 20'd512;
parameter    ap_ST_fsm_state11 = 20'd1024;
parameter    ap_ST_fsm_state12 = 20'd2048;
parameter    ap_ST_fsm_state13 = 20'd4096;
parameter    ap_ST_fsm_state14 = 20'd8192;
parameter    ap_ST_fsm_state15 = 20'd16384;
parameter    ap_ST_fsm_state16 = 20'd32768;
parameter    ap_ST_fsm_state17 = 20'd65536;
parameter    ap_ST_fsm_state18 = 20'd131072;
parameter    ap_ST_fsm_state19 = 20'd262144;
parameter    ap_ST_fsm_state20 = 20'd524288;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [39:0] x_V;
input  [39:0] y_V;
output  [0:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [19:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire  signed [79:0] r_V_fu_78_p1;
wire  signed [39:0] p_Val2_13_fu_166_p3;
reg  signed [39:0] p_Val2_13_reg_873;
wire    ap_CS_fsm_state2;
reg   [0:0] p_Result_9_reg_879;
wire   [39:0] xp1_V_fu_188_p2;
reg   [39:0] xp1_V_reg_885;
reg   [0:0] p_Result_10_reg_891;
reg   [0:0] tmp_31_reg_897;
wire   [39:0] p_0424_1_fu_266_p3;
reg   [39:0] p_0424_1_reg_903;
wire    ap_CS_fsm_state3;
wire  signed [79:0] r_V_2_fu_274_p1;
wire    ap_CS_fsm_state4;
wire  signed [79:0] r_V_7_fu_283_p1;
wire   [79:0] grp_fu_82_p2;
reg   [79:0] r_V_9_reg_920;
wire    ap_CS_fsm_state6;
reg   [0:0] p_Result_s_reg_929;
wire   [33:0] tmp_3_fu_300_p1;
reg   [33:0] tmp_3_reg_935;
reg   [3:0] p_Result_s_15_reg_940;
reg   [4:0] p_Result_1_reg_945;
wire   [0:0] r_1_fu_324_p2;
reg   [0:0] r_1_reg_951;
wire    ap_CS_fsm_state7;
wire   [0:0] Range2_all_ones_fu_329_p2;
reg   [0:0] Range2_all_ones_reg_956;
wire   [0:0] Range1_all_ones_fu_334_p2;
reg   [0:0] Range1_all_ones_reg_961;
wire   [0:0] Range1_all_zeros_fu_339_p2;
reg   [0:0] Range1_all_zeros_reg_968;
wire   [39:0] y2_V_1_fu_389_p2;
reg   [39:0] y2_V_1_reg_973;
wire    ap_CS_fsm_state8;
wire   [0:0] carry_1_fu_409_p2;
reg   [0:0] carry_1_reg_979;
wire   [0:0] p_Result_3_fu_415_p3;
reg   [0:0] p_Result_3_reg_985;
wire   [0:0] brmerge968_demorgan_fu_448_p2;
reg   [0:0] brmerge968_demorgan_reg_990;
wire   [39:0] p_Val2_6_fu_532_p3;
reg   [39:0] p_Val2_6_reg_996;
wire    ap_CS_fsm_state9;
wire   [79:0] grp_fu_277_p2;
reg   [79:0] r_V_10_reg_1002;
wire   [33:0] tmp_23_fu_540_p1;
reg   [33:0] tmp_23_reg_1007;
wire   [79:0] grp_fu_286_p2;
reg   [79:0] r_V_11_reg_1012;
wire   [79:0] ret_V_6_fu_555_p2;
reg   [79:0] ret_V_6_reg_1017;
wire    ap_CS_fsm_state10;
reg   [0:0] p_Result_6_reg_1026;
wire   [0:0] r_3_fu_568_p2;
reg   [0:0] r_3_reg_1032;
reg   [3:0] tmp_5_reg_1037;
reg   [4:0] tmp_s_reg_1042;
wire   [79:0] ret_V_1_fu_593_p2;
reg   [79:0] ret_V_1_reg_1048;
wire   [39:0] q_V_1_fu_643_p2;
reg   [39:0] q_V_1_reg_1053;
wire    ap_CS_fsm_state11;
wire   [0:0] carry_3_fu_663_p2;
reg   [0:0] carry_3_reg_1059;
wire   [0:0] p_Result_8_fu_669_p3;
reg   [0:0] p_Result_8_reg_1065;
wire   [0:0] Range1_all_ones_2_fu_682_p2;
reg   [0:0] Range1_all_ones_2_reg_1070;
wire   [0:0] Range1_all_zeros_1_fu_687_p2;
reg   [0:0] Range1_all_zeros_1_reg_1076;
wire   [0:0] brmerge980_demorgan_fu_719_p2;
reg   [0:0] brmerge980_demorgan_reg_1081;
wire   [0:0] notrhs_fu_725_p2;
reg   [0:0] notrhs_reg_1087;
wire  signed [39:0] p_Val2_10_fu_808_p3;
reg  signed [39:0] p_Val2_10_reg_1092;
wire    ap_CS_fsm_state12;
wire   [40:0] ret_V_fu_822_p2;
reg  signed [40:0] ret_V_reg_1098;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
wire   [80:0] grp_fu_834_p2;
reg   [80:0] r_V_5_reg_1113;
wire    ap_CS_fsm_state19;
wire  signed [39:0] grp_fu_82_p0;
wire  signed [39:0] grp_fu_82_p1;
wire  signed [39:0] lhs_V_fu_88_p0;
wire  signed [40:0] lhs_V_fu_88_p1;
wire   [40:0] ret_V_5_fu_92_p2;
wire  signed [39:0] x_1_V_fu_106_p1;
wire   [39:0] x_1_V_fu_106_p2;
wire   [0:0] p_Result_5_fu_112_p3;
wire   [0:0] p_Result_4_fu_98_p3;
wire   [0:0] tmp_1_fu_120_p2;
wire   [0:0] signbit_i_i_i_i169_fu_138_p2;
wire   [0:0] brmerge5_fu_132_p2;
wire   [0:0] underflow_1_fu_126_p2;
wire   [0:0] brmerge6_fu_144_p2;
wire   [39:0] p_mux1_fu_150_p3;
wire   [39:0] p_6_fu_158_p3;
wire   [40:0] ret_V_7_fu_174_p2;
wire  signed [39:0] xp1_V_fu_188_p1;
wire   [0:0] brmerge1_fu_210_p2;
wire   [0:0] tmp_10_fu_214_p2;
wire   [0:0] brmerge12_demorgan_fu_225_p2;
wire   [0:0] brmerge3_fu_229_p2;
wire   [0:0] underflow_3_fu_235_p2;
wire   [0:0] overflow_2_fu_219_p2;
wire   [0:0] brmerge4_fu_240_p2;
wire   [0:0] p_997_not_fu_246_p2;
wire   [39:0] p_mux3_fu_252_p3;
wire   [39:0] p_2_fu_259_p3;
wire  signed [39:0] grp_fu_277_p0;
wire  signed [39:0] grp_fu_277_p1;
wire  signed [39:0] grp_fu_286_p0;
wire  signed [39:0] grp_fu_286_p1;
wire   [0:0] tmp_fu_353_p3;
wire   [0:0] tmp_11_fu_372_p3;
wire   [0:0] r_fu_367_p2;
wire   [0:0] tmp_7_fu_379_p2;
wire   [39:0] y2_V_fu_344_p4;
wire   [39:0] tmp_8_fu_385_p1;
wire   [0:0] tmp_13_fu_395_p3;
wire   [0:0] p_Result_2_fu_360_p3;
wire   [0:0] rev_fu_403_p2;
wire   [0:0] tmp_18_fu_423_p3;
wire   [0:0] rev1_fu_430_p2;
wire   [0:0] p_s_fu_436_p2;
wire   [0:0] deleted_ones_fu_441_p3;
wire   [0:0] deleted_zeros_fu_454_p3;
wire   [0:0] p_not_fu_463_p2;
wire   [0:0] brmerge_fu_469_p2;
wire   [0:0] tmp_9_fu_474_p2;
wire   [0:0] phitmp966_demorgan_fu_459_p2;
wire   [0:0] tmp2_demorgan_fu_485_p2;
wire   [0:0] tmp2_fu_490_p2;
wire   [0:0] underflow_fu_496_p2;
wire   [0:0] overflow_fu_479_p2;
wire   [0:0] tmp3_fu_507_p2;
wire   [0:0] brmerge2_fu_501_p2;
wire   [0:0] p_1000_not_fu_512_p2;
wire   [39:0] p_mux_fu_518_p3;
wire   [39:0] p_3_fu_525_p3;
wire   [74:0] rhs_V_fu_544_p3;
wire  signed [79:0] rhs_V_1_cast_fu_551_p1;
wire   [0:0] tmp_22_fu_607_p3;
wire   [0:0] tmp_25_fu_626_p3;
wire   [0:0] r_2_fu_621_p2;
wire   [0:0] tmp_6_fu_633_p2;
wire   [39:0] q_V_fu_598_p4;
wire   [39:0] tmp_2_fu_639_p1;
wire   [0:0] tmp_26_fu_649_p3;
wire   [0:0] p_Result_7_fu_614_p3;
wire   [0:0] rev2_fu_657_p2;
wire   [0:0] tmp_28_fu_692_p3;
wire   [0:0] Range2_all_ones_1_fu_677_p2;
wire   [0:0] rev3_fu_699_p2;
wire   [0:0] p_7_fu_705_p2;
wire   [0:0] deleted_ones_2_fu_711_p3;
wire   [0:0] deleted_zeros_1_fu_730_p3;
wire   [0:0] p_not2_fu_739_p2;
wire   [0:0] brmerge7_fu_745_p2;
wire   [0:0] tmp_4_fu_750_p2;
wire   [0:0] phitmp964_demorgan_fu_735_p2;
wire   [0:0] tmp4_demorgan_fu_761_p2;
wire   [0:0] tmp4_fu_766_p2;
wire   [0:0] underflow_2_fu_772_p2;
wire   [0:0] overflow_1_fu_755_p2;
wire   [0:0] tmp5_fu_783_p2;
wire   [0:0] brmerge9_fu_777_p2;
wire   [0:0] p_1001_not_fu_788_p2;
wire   [39:0] p_mux2_fu_794_p3;
wire   [39:0] p_1_fu_801_p3;
wire  signed [40:0] lhs_V_1_fu_816_p1;
wire  signed [40:0] rhs_V_1_fu_819_p1;
wire    ap_CS_fsm_state20;
wire   [72:0] r_V_6_fu_840_p3;
wire  signed [80:0] tmp_14_fu_847_p1;
wire   [0:0] slt_fu_851_p2;
wire   [0:0] rev4_fu_856_p2;
reg   [19:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 20'd1;
end

calc_mul_40s_40s_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 40 ),
    .din1_WIDTH( 40 ),
    .dout_WIDTH( 80 ))
calc_mul_40s_40s_bkb_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_82_p0),
    .din1(grp_fu_82_p1),
    .ce(1'b1),
    .dout(grp_fu_82_p2)
);

calc_mul_40s_40s_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 40 ),
    .din1_WIDTH( 40 ),
    .dout_WIDTH( 80 ))
calc_mul_40s_40s_bkb_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_277_p0),
    .din1(grp_fu_277_p1),
    .ce(1'b1),
    .dout(grp_fu_277_p2)
);

calc_mul_40s_40s_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 40 ),
    .din1_WIDTH( 40 ),
    .dout_WIDTH( 80 ))
calc_mul_40s_40s_bkb_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_286_p0),
    .din1(grp_fu_286_p1),
    .ce(1'b1),
    .dout(grp_fu_286_p2)
);

calc_mul_41s_40s_cud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 41 ),
    .din1_WIDTH( 40 ),
    .dout_WIDTH( 81 ))
calc_mul_41s_40s_cud_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ret_V_reg_1098),
    .din1(p_Val2_10_reg_1092),
    .ce(1'b1),
    .dout(grp_fu_834_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        Range1_all_ones_2_reg_1070 <= Range1_all_ones_2_fu_682_p2;
        Range1_all_zeros_1_reg_1076 <= Range1_all_zeros_1_fu_687_p2;
        brmerge980_demorgan_reg_1081 <= brmerge980_demorgan_fu_719_p2;
        carry_3_reg_1059 <= carry_3_fu_663_p2;
        notrhs_reg_1087 <= notrhs_fu_725_p2;
        p_Result_8_reg_1065 <= q_V_1_fu_643_p2[32'd39];
        q_V_1_reg_1053 <= q_V_1_fu_643_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        Range1_all_ones_reg_961 <= Range1_all_ones_fu_334_p2;
        Range1_all_zeros_reg_968 <= Range1_all_zeros_fu_339_p2;
        Range2_all_ones_reg_956 <= Range2_all_ones_fu_329_p2;
        r_1_reg_951 <= r_1_fu_324_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        brmerge968_demorgan_reg_990 <= brmerge968_demorgan_fu_448_p2;
        carry_1_reg_979 <= carry_1_fu_409_p2;
        p_Result_3_reg_985 <= y2_V_1_fu_389_p2[32'd39];
        y2_V_1_reg_973 <= y2_V_1_fu_389_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        p_0424_1_reg_903 <= p_0424_1_fu_266_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        p_Result_10_reg_891 <= xp1_V_fu_188_p2[32'd39];
        p_Result_9_reg_879 <= ret_V_7_fu_174_p2[32'd40];
        p_Val2_13_reg_873 <= p_Val2_13_fu_166_p3;
        tmp_31_reg_897 <= ret_V_7_fu_174_p2[32'd40];
        xp1_V_reg_885 <= xp1_V_fu_188_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        p_Result_1_reg_945 <= {{grp_fu_82_p2[79:75]}};
        p_Result_s_15_reg_940 <= {{grp_fu_82_p2[79:76]}};
        p_Result_s_reg_929 <= grp_fu_82_p2[32'd79];
        r_V_9_reg_920 <= grp_fu_82_p2;
        tmp_3_reg_935 <= tmp_3_fu_300_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        p_Result_6_reg_1026 <= ret_V_6_fu_555_p2[32'd79];
        r_3_reg_1032 <= r_3_fu_568_p2;
        ret_V_1_reg_1048 <= ret_V_1_fu_593_p2;
        ret_V_6_reg_1017 <= ret_V_6_fu_555_p2;
        tmp_5_reg_1037 <= {{ret_V_6_fu_555_p2[79:76]}};
        tmp_s_reg_1042 <= {{ret_V_6_fu_555_p2[79:75]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        p_Val2_10_reg_1092 <= p_Val2_10_fu_808_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        p_Val2_6_reg_996 <= p_Val2_6_fu_532_p3;
        r_V_10_reg_1002 <= grp_fu_277_p2;
        r_V_11_reg_1012 <= grp_fu_286_p2;
        tmp_23_reg_1007 <= tmp_23_fu_540_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        r_V_5_reg_1113 <= grp_fu_834_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        ret_V_reg_1098 <= ret_V_fu_822_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Range1_all_ones_2_fu_682_p2 = ((tmp_s_reg_1042 == 5'd31) ? 1'b1 : 1'b0);

assign Range1_all_ones_fu_334_p2 = ((p_Result_1_reg_945 == 5'd31) ? 1'b1 : 1'b0);

assign Range1_all_zeros_1_fu_687_p2 = ((tmp_s_reg_1042 == 5'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_fu_339_p2 = ((p_Result_1_reg_945 == 5'd0) ? 1'b1 : 1'b0);

assign Range2_all_ones_1_fu_677_p2 = ((tmp_5_reg_1037 == 4'd15) ? 1'b1 : 1'b0);

assign Range2_all_ones_fu_329_p2 = ((p_Result_s_15_reg_940 == 4'd15) ? 1'b1 : 1'b0);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_return = (rev4_fu_856_p2 | notrhs_reg_1087);

assign brmerge12_demorgan_fu_225_p2 = (tmp_31_reg_897 & p_Result_10_reg_891);

assign brmerge1_fu_210_p2 = (tmp_31_reg_897 | p_Result_10_reg_891);

assign brmerge2_fu_501_p2 = (underflow_fu_496_p2 | overflow_fu_479_p2);

assign brmerge3_fu_229_p2 = (brmerge12_demorgan_fu_225_p2 ^ 1'd1);

assign brmerge4_fu_240_p2 = (underflow_3_fu_235_p2 | overflow_2_fu_219_p2);

assign brmerge5_fu_132_p2 = (p_Result_5_fu_112_p3 ^ p_Result_4_fu_98_p3);

assign brmerge6_fu_144_p2 = (signbit_i_i_i_i169_fu_138_p2 | p_Result_5_fu_112_p3);

assign brmerge7_fu_745_p2 = (p_not2_fu_739_p2 | p_Result_8_reg_1065);

assign brmerge968_demorgan_fu_448_p2 = (p_Result_3_fu_415_p3 & deleted_ones_fu_441_p3);

assign brmerge980_demorgan_fu_719_p2 = (p_Result_8_fu_669_p3 & deleted_ones_2_fu_711_p3);

assign brmerge9_fu_777_p2 = (underflow_2_fu_772_p2 | overflow_1_fu_755_p2);

assign brmerge_fu_469_p2 = (p_not_fu_463_p2 | p_Result_3_reg_985);

assign carry_1_fu_409_p2 = (rev_fu_403_p2 & p_Result_2_fu_360_p3);

assign carry_3_fu_663_p2 = (rev2_fu_657_p2 & p_Result_7_fu_614_p3);

assign deleted_ones_2_fu_711_p3 = ((carry_3_fu_663_p2[0:0] === 1'b1) ? p_7_fu_705_p2 : Range1_all_ones_2_fu_682_p2);

assign deleted_ones_fu_441_p3 = ((carry_1_fu_409_p2[0:0] === 1'b1) ? p_s_fu_436_p2 : Range1_all_ones_reg_961);

assign deleted_zeros_1_fu_730_p3 = ((carry_3_reg_1059[0:0] === 1'b1) ? Range1_all_ones_2_reg_1070 : Range1_all_zeros_1_reg_1076);

assign deleted_zeros_fu_454_p3 = ((carry_1_reg_979[0:0] === 1'b1) ? Range1_all_ones_reg_961 : Range1_all_zeros_reg_968);

assign grp_fu_277_p0 = r_V_2_fu_274_p1;

assign grp_fu_277_p1 = r_V_2_fu_274_p1;

assign grp_fu_286_p0 = r_V_7_fu_283_p1;

assign grp_fu_286_p1 = r_V_7_fu_283_p1;

assign grp_fu_82_p0 = r_V_fu_78_p1;

assign grp_fu_82_p1 = r_V_fu_78_p1;

assign lhs_V_1_fu_816_p1 = p_Val2_10_reg_1092;

assign lhs_V_fu_88_p0 = x_V;

assign lhs_V_fu_88_p1 = lhs_V_fu_88_p0;

assign notrhs_fu_725_p2 = (($signed(ret_V_1_reg_1048) < $signed(80'd73786976294838206465)) ? 1'b1 : 1'b0);

assign overflow_1_fu_755_p2 = (tmp_4_fu_750_p2 & brmerge7_fu_745_p2);

assign overflow_2_fu_219_p2 = (tmp_10_fu_214_p2 & brmerge1_fu_210_p2);

assign overflow_fu_479_p2 = (tmp_9_fu_474_p2 & brmerge_fu_469_p2);

assign p_0424_1_fu_266_p3 = ((p_997_not_fu_246_p2[0:0] === 1'b1) ? p_mux3_fu_252_p3 : p_2_fu_259_p3);

assign p_1000_not_fu_512_p2 = (tmp3_fu_507_p2 | phitmp966_demorgan_fu_459_p2);

assign p_1001_not_fu_788_p2 = (tmp5_fu_783_p2 | phitmp964_demorgan_fu_735_p2);

assign p_1_fu_801_p3 = ((underflow_2_fu_772_p2[0:0] === 1'b1) ? 40'd549755813888 : q_V_1_reg_1053);

assign p_2_fu_259_p3 = ((underflow_3_fu_235_p2[0:0] === 1'b1) ? 40'd549755813888 : xp1_V_reg_885);

assign p_3_fu_525_p3 = ((underflow_fu_496_p2[0:0] === 1'b1) ? 40'd549755813888 : y2_V_1_reg_973);

assign p_6_fu_158_p3 = ((underflow_1_fu_126_p2[0:0] === 1'b1) ? 40'd549755813888 : x_1_V_fu_106_p2);

assign p_7_fu_705_p2 = (rev3_fu_699_p2 & Range2_all_ones_1_fu_677_p2);

assign p_997_not_fu_246_p2 = (tmp_10_fu_214_p2 | brmerge12_demorgan_fu_225_p2);

assign p_Result_2_fu_360_p3 = r_V_9_reg_920[32'd74];

assign p_Result_3_fu_415_p3 = y2_V_1_fu_389_p2[32'd39];

assign p_Result_4_fu_98_p3 = ret_V_5_fu_92_p2[32'd40];

assign p_Result_5_fu_112_p3 = x_1_V_fu_106_p2[32'd39];

assign p_Result_7_fu_614_p3 = ret_V_6_reg_1017[32'd74];

assign p_Result_8_fu_669_p3 = q_V_1_fu_643_p2[32'd39];

assign p_Val2_10_fu_808_p3 = ((p_1001_not_fu_788_p2[0:0] === 1'b1) ? p_mux2_fu_794_p3 : p_1_fu_801_p3);

assign p_Val2_13_fu_166_p3 = ((brmerge6_fu_144_p2[0:0] === 1'b1) ? p_mux1_fu_150_p3 : p_6_fu_158_p3);

assign p_Val2_6_fu_532_p3 = ((p_1000_not_fu_512_p2[0:0] === 1'b1) ? p_mux_fu_518_p3 : p_3_fu_525_p3);

assign p_mux1_fu_150_p3 = ((brmerge5_fu_132_p2[0:0] === 1'b1) ? 40'd549755813887 : x_1_V_fu_106_p2);

assign p_mux2_fu_794_p3 = ((brmerge9_fu_777_p2[0:0] === 1'b1) ? 40'd549755813887 : q_V_1_reg_1053);

assign p_mux3_fu_252_p3 = ((brmerge4_fu_240_p2[0:0] === 1'b1) ? 40'd549755813887 : xp1_V_reg_885);

assign p_mux_fu_518_p3 = ((brmerge2_fu_501_p2[0:0] === 1'b1) ? 40'd549755813887 : y2_V_1_reg_973);

assign p_not2_fu_739_p2 = (deleted_zeros_1_fu_730_p3 ^ 1'd1);

assign p_not_fu_463_p2 = (deleted_zeros_fu_454_p3 ^ 1'd1);

assign p_s_fu_436_p2 = (rev1_fu_430_p2 & Range2_all_ones_reg_956);

assign phitmp964_demorgan_fu_735_p2 = (carry_3_reg_1059 & Range1_all_ones_2_reg_1070);

assign phitmp966_demorgan_fu_459_p2 = (carry_1_reg_979 & Range1_all_ones_reg_961);

assign q_V_1_fu_643_p2 = (q_V_fu_598_p4 + tmp_2_fu_639_p1);

assign q_V_fu_598_p4 = {{ret_V_6_reg_1017[74:35]}};

assign r_1_fu_324_p2 = ((tmp_3_reg_935 != 34'd0) ? 1'b1 : 1'b0);

assign r_2_fu_621_p2 = (tmp_22_fu_607_p3 | r_3_reg_1032);

assign r_3_fu_568_p2 = ((tmp_23_reg_1007 != 34'd0) ? 1'b1 : 1'b0);

assign r_V_2_fu_274_p1 = p_Val2_13_reg_873;

assign r_V_6_fu_840_p3 = {{p_Val2_6_reg_996}, {33'd0}};

assign r_V_7_fu_283_p1 = $signed(p_0424_1_reg_903);

assign r_V_fu_78_p1 = $signed(y_V);

assign r_fu_367_p2 = (tmp_fu_353_p3 | r_1_reg_951);

assign ret_V_1_fu_593_p2 = ($signed(rhs_V_1_cast_fu_551_p1) + $signed(r_V_11_reg_1012));

assign ret_V_5_fu_92_p2 = ($signed(41'd2190433320960) + $signed(lhs_V_fu_88_p1));

assign ret_V_6_fu_555_p2 = ($signed(rhs_V_1_cast_fu_551_p1) + $signed(r_V_10_reg_1002));

assign ret_V_7_fu_174_p2 = ($signed(41'd34359738368) + $signed(lhs_V_fu_88_p1));

assign ret_V_fu_822_p2 = ($signed(lhs_V_1_fu_816_p1) + $signed(rhs_V_1_fu_819_p1));

assign rev1_fu_430_p2 = (tmp_18_fu_423_p3 ^ 1'd1);

assign rev2_fu_657_p2 = (tmp_26_fu_649_p3 ^ 1'd1);

assign rev3_fu_699_p2 = (tmp_28_fu_692_p3 ^ 1'd1);

assign rev4_fu_856_p2 = (slt_fu_851_p2 ^ 1'd1);

assign rev_fu_403_p2 = (tmp_13_fu_395_p3 ^ 1'd1);

assign rhs_V_1_cast_fu_551_p1 = $signed(rhs_V_fu_544_p3);

assign rhs_V_1_fu_819_p1 = p_Val2_13_reg_873;

assign rhs_V_fu_544_p3 = {{p_Val2_6_reg_996}, {35'd0}};

assign signbit_i_i_i_i169_fu_138_p2 = (p_Result_4_fu_98_p3 ^ 1'd1);

assign slt_fu_851_p2 = (($signed(tmp_14_fu_847_p1) < $signed(r_V_5_reg_1113)) ? 1'b1 : 1'b0);

assign tmp2_demorgan_fu_485_p2 = (phitmp966_demorgan_fu_459_p2 | brmerge968_demorgan_reg_990);

assign tmp2_fu_490_p2 = (tmp2_demorgan_fu_485_p2 ^ 1'd1);

assign tmp3_fu_507_p2 = (tmp_9_fu_474_p2 | brmerge968_demorgan_reg_990);

assign tmp4_demorgan_fu_761_p2 = (phitmp964_demorgan_fu_735_p2 | brmerge980_demorgan_reg_1081);

assign tmp4_fu_766_p2 = (tmp4_demorgan_fu_761_p2 ^ 1'd1);

assign tmp5_fu_783_p2 = (tmp_4_fu_750_p2 | brmerge980_demorgan_reg_1081);

assign tmp_10_fu_214_p2 = (p_Result_9_reg_879 ^ 1'd1);

assign tmp_11_fu_372_p3 = r_V_9_reg_920[32'd34];

assign tmp_13_fu_395_p3 = y2_V_1_fu_389_p2[32'd39];

assign tmp_14_fu_847_p1 = $signed(r_V_6_fu_840_p3);

assign tmp_18_fu_423_p3 = r_V_9_reg_920[32'd75];

assign tmp_1_fu_120_p2 = (p_Result_5_fu_112_p3 ^ 1'd1);

assign tmp_22_fu_607_p3 = ret_V_6_reg_1017[32'd35];

assign tmp_23_fu_540_p1 = grp_fu_277_p2[33:0];

assign tmp_25_fu_626_p3 = ret_V_6_reg_1017[32'd34];

assign tmp_26_fu_649_p3 = q_V_1_fu_643_p2[32'd39];

assign tmp_28_fu_692_p3 = ret_V_6_reg_1017[32'd75];

assign tmp_2_fu_639_p1 = tmp_6_fu_633_p2;

assign tmp_3_fu_300_p1 = grp_fu_82_p2[33:0];

assign tmp_4_fu_750_p2 = (p_Result_6_reg_1026 ^ 1'd1);

assign tmp_6_fu_633_p2 = (tmp_25_fu_626_p3 & r_2_fu_621_p2);

assign tmp_7_fu_379_p2 = (tmp_11_fu_372_p3 & r_fu_367_p2);

assign tmp_8_fu_385_p1 = tmp_7_fu_379_p2;

assign tmp_9_fu_474_p2 = (p_Result_s_reg_929 ^ 1'd1);

assign tmp_fu_353_p3 = r_V_9_reg_920[32'd35];

assign underflow_1_fu_126_p2 = (tmp_1_fu_120_p2 & p_Result_4_fu_98_p3);

assign underflow_2_fu_772_p2 = (tmp4_fu_766_p2 & p_Result_6_reg_1026);

assign underflow_3_fu_235_p2 = (p_Result_9_reg_879 & brmerge3_fu_229_p2);

assign underflow_fu_496_p2 = (tmp2_fu_490_p2 & p_Result_s_reg_929);

assign x_1_V_fu_106_p1 = x_V;

assign x_1_V_fu_106_p2 = ($signed(40'd1090921693184) + $signed(x_1_V_fu_106_p1));

assign xp1_V_fu_188_p1 = x_V;

assign xp1_V_fu_188_p2 = ($signed(40'd34359738368) + $signed(xp1_V_fu_188_p1));

assign y2_V_1_fu_389_p2 = (y2_V_fu_344_p4 + tmp_8_fu_385_p1);

assign y2_V_fu_344_p4 = {{r_V_9_reg_920[74:35]}};

endmodule //pretest
