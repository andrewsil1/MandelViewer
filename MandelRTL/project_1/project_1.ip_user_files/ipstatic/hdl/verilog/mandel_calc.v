// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module mandel_calc (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        x_in_V,
        y_in_V,
        y2_V,
        ap_return
);

parameter    ap_ST_fsm_state1 = 16'd1;
parameter    ap_ST_fsm_state2 = 16'd2;
parameter    ap_ST_fsm_state3 = 16'd4;
parameter    ap_ST_fsm_state4 = 16'd8;
parameter    ap_ST_fsm_state5 = 16'd16;
parameter    ap_ST_fsm_state6 = 16'd32;
parameter    ap_ST_fsm_state7 = 16'd64;
parameter    ap_ST_fsm_state8 = 16'd128;
parameter    ap_ST_fsm_state9 = 16'd256;
parameter    ap_ST_fsm_state10 = 16'd512;
parameter    ap_ST_fsm_state11 = 16'd1024;
parameter    ap_ST_fsm_state12 = 16'd2048;
parameter    ap_ST_fsm_state13 = 16'd4096;
parameter    ap_ST_fsm_state14 = 16'd8192;
parameter    ap_ST_fsm_state15 = 16'd16384;
parameter    ap_ST_fsm_state16 = 16'd32768;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [68:0] x_in_V;
input  [68:0] y_in_V;
input  [68:0] y2_V;
output  [9:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[9:0] ap_return;

(* fsm_encoding = "none" *) reg   [15:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire  signed [69:0] rhs_V_fu_170_p1;
reg  signed [69:0] rhs_V_reg_908;
wire  signed [70:0] rhs_V_1_fu_174_p1;
reg  signed [70:0] rhs_V_1_reg_914;
wire  signed [138:0] rhs_V_3_cast_fu_186_p1;
reg  signed [138:0] rhs_V_3_cast_reg_919;
wire   [0:0] tmp_4_fu_190_p2;
reg   [0:0] tmp_4_reg_924;
wire    ap_CS_fsm_state2;
wire   [9:0] iter_V_fu_196_p2;
reg   [9:0] iter_V_reg_928;
wire  signed [137:0] r_V_fu_202_p1;
wire   [137:0] grp_fu_206_p2;
reg   [137:0] r_V_4_reg_939;
wire    ap_CS_fsm_state6;
reg   [0:0] p_Result_s_reg_948;
wire   [62:0] tmp_10_fu_220_p1;
reg   [62:0] tmp_10_reg_954;
wire   [0:0] Range2_all_ones_fu_234_p2;
reg   [0:0] Range2_all_ones_reg_959;
wire   [0:0] Range1_all_ones_fu_250_p2;
reg   [0:0] Range1_all_ones_reg_964;
wire   [0:0] Range1_all_zeros_fu_256_p2;
reg   [0:0] Range1_all_zeros_reg_971;
wire   [68:0] x2_V_1_fu_313_p2;
reg   [68:0] x2_V_1_reg_976;
wire    ap_CS_fsm_state7;
wire   [0:0] carry_1_fu_333_p2;
reg   [0:0] carry_1_reg_982;
wire   [0:0] p_Result_3_fu_339_p3;
reg   [0:0] p_Result_3_reg_988;
wire   [0:0] brmerge831_demorgan_fu_372_p2;
reg   [0:0] brmerge831_demorgan_reg_993;
wire   [68:0] p_Val2_3_fu_456_p3;
reg   [68:0] p_Val2_3_reg_999;
wire    ap_CS_fsm_state8;
wire   [0:0] tmp_fu_472_p2;
reg   [0:0] tmp_reg_1004;
wire    ap_CS_fsm_state9;
reg   [0:0] p_Result_5_reg_1008;
wire   [68:0] xtemp_V_fu_504_p2;
reg   [68:0] xtemp_V_reg_1014;
reg   [0:0] p_Result_6_reg_1020;
reg   [1:0] p_Result_4_reg_1026;
wire   [68:0] x_V_fu_623_p3;
reg   [68:0] x_V_reg_1042;
wire    ap_CS_fsm_state10;
wire   [0:0] tmp_12_fu_631_p2;
reg   [0:0] tmp_12_reg_1047;
wire   [138:0] grp_fu_543_p2;
reg   [138:0] r_V_5_reg_1052;
wire    ap_CS_fsm_state13;
wire   [62:0] tmp_26_fu_637_p1;
reg   [62:0] tmp_26_reg_1057;
wire   [138:0] ret_V_6_fu_641_p2;
reg   [138:0] ret_V_6_reg_1062;
wire    ap_CS_fsm_state14;
reg   [0:0] p_Result_7_reg_1071;
wire   [0:0] r_2_fu_653_p2;
reg   [0:0] r_2_reg_1077;
wire   [0:0] Range2_all_ones_1_fu_668_p2;
reg   [0:0] Range2_all_ones_1_reg_1082;
wire   [0:0] Range1_all_ones_1_fu_684_p2;
reg   [0:0] Range1_all_ones_1_reg_1087;
wire   [0:0] Range1_all_zeros_1_fu_690_p2;
reg   [0:0] Range1_all_zeros_1_reg_1094;
wire   [68:0] ytemp_V_1_fu_741_p2;
reg   [68:0] ytemp_V_1_reg_1099;
wire    ap_CS_fsm_state15;
wire   [0:0] phitmp_demorgan_fu_806_p2;
reg   [0:0] phitmp_demorgan_reg_1105;
wire   [0:0] tmp_11_fu_823_p2;
reg   [0:0] tmp_11_reg_1110;
wire   [0:0] brmerge844_demorgan_fu_834_p2;
reg   [0:0] brmerge844_demorgan_reg_1115;
wire   [0:0] underflow_2_fu_852_p2;
reg   [0:0] underflow_2_reg_1120;
wire   [0:0] brmerge1_fu_857_p2;
reg   [0:0] brmerge1_reg_1125;
wire   [68:0] y_V_fu_884_p3;
wire    ap_CS_fsm_state16;
wire   [9:0] ap_phi_mux_t_V_phi_fu_124_p4;
reg   [9:0] t_V_reg_120;
wire   [0:0] or_cond_fu_898_p2;
reg  signed [68:0] y_reg_132;
reg  signed [68:0] x_reg_144;
reg   [9:0] ap_phi_mux_agg_result_V_1_phi_fu_159_p6;
reg   [9:0] agg_result_V_1_reg_156;
wire  signed [68:0] rhs_V_1_fu_174_p0;
wire   [132:0] rhs_V_2_fu_178_p3;
wire  signed [68:0] grp_fu_206_p0;
wire  signed [68:0] grp_fu_206_p1;
wire   [3:0] p_Result_s_14_fu_224_p4;
wire   [4:0] p_Result_1_fu_240_p4;
wire   [0:0] r_1_fu_278_p2;
wire   [0:0] tmp_8_fu_271_p3;
wire   [0:0] tmp_17_fu_296_p3;
wire   [0:0] r_assign_1_fu_290_p2;
wire   [0:0] tmp_3_fu_303_p2;
wire   [68:0] tmp_5_fu_309_p1;
wire   [68:0] x2_V_fu_262_p4;
wire   [0:0] tmp_18_fu_319_p3;
wire   [0:0] p_Result_2_fu_283_p3;
wire   [0:0] rev_fu_327_p2;
wire   [0:0] tmp_20_fu_347_p3;
wire   [0:0] rev1_fu_354_p2;
wire   [0:0] p_s_fu_360_p2;
wire   [0:0] deleted_ones_fu_365_p3;
wire   [0:0] deleted_zeros_fu_378_p3;
wire   [0:0] p_not_fu_387_p2;
wire   [0:0] brmerge_fu_393_p2;
wire   [0:0] tmp_2_fu_398_p2;
wire   [0:0] phitmp829_demorgan_fu_383_p2;
wire   [0:0] tmp1_demorgan_fu_409_p2;
wire   [0:0] tmp1_fu_414_p2;
wire   [0:0] underflow_fu_420_p2;
wire   [0:0] overflow_fu_403_p2;
wire   [0:0] tmp2_fu_431_p2;
wire   [0:0] brmerge2_fu_425_p2;
wire   [0:0] p_855_not_fu_436_p2;
wire   [68:0] p_mux_fu_442_p3;
wire   [68:0] p_4_fu_449_p3;
wire  signed [69:0] lhs_V_fu_464_p1;
wire   [69:0] ret_V_fu_467_p2;
wire  signed [69:0] ret_V_4_fu_478_p2;
wire  signed [70:0] lhs_V_1_fu_483_p1;
wire   [70:0] ret_V_5_fu_491_p2;
wire  signed [68:0] xtemp_V_fu_504_p0;
wire   [68:0] tmp_21_fu_487_p1;
wire  signed [69:0] r_V_2_fu_527_p3;
wire   [0:0] p_not2_fu_549_p2;
wire   [0:0] brmerge4_fu_554_p2;
wire   [0:0] tmp_9_fu_559_p2;
wire   [0:0] p_not3_fu_575_p2;
wire   [0:0] newsignbit_i_i_i_i_fu_570_p2;
wire   [0:0] brmerge5_fu_580_p2;
wire   [0:0] underflow_1_fu_586_p2;
wire   [0:0] overflow_1_fu_564_p2;
wire   [0:0] p_849_not_fu_597_p2;
wire   [0:0] brmerge6_fu_591_p2;
wire   [0:0] brmerge7_fu_603_p2;
wire   [68:0] p_mux1_fu_609_p3;
wire   [68:0] p_7_fu_616_p3;
wire   [4:0] tmp_s_fu_658_p4;
wire   [5:0] tmp_6_fu_674_p4;
wire   [0:0] tmp_25_fu_705_p3;
wire   [0:0] tmp_28_fu_724_p3;
wire   [0:0] r_fu_719_p2;
wire   [0:0] tmp_1_fu_731_p2;
wire   [68:0] tmp_7_fu_737_p1;
wire   [68:0] ytemp_V_fu_696_p4;
wire   [0:0] tmp_29_fu_747_p3;
wire   [0:0] p_Result_8_fu_712_p3;
wire   [0:0] rev2_fu_755_p2;
wire   [0:0] carry_3_fu_761_p2;
wire   [0:0] tmp_31_fu_781_p3;
wire   [0:0] rev3_fu_788_p2;
wire   [0:0] p_8_fu_794_p2;
wire   [0:0] deleted_zeros_1_fu_775_p3;
wire   [0:0] p_Result_9_fu_767_p3;
wire   [0:0] p_not4_fu_811_p2;
wire   [0:0] brmerge8_fu_817_p2;
wire   [0:0] deleted_ones_1_fu_799_p3;
wire   [0:0] tmp3_demorgan_fu_840_p2;
wire   [0:0] tmp3_fu_846_p2;
wire   [0:0] overflow_2_fu_828_p2;
wire   [0:0] tmp4_fu_863_p2;
wire   [0:0] p_856_not_fu_867_p2;
wire   [68:0] p_mux2_fu_872_p3;
wire   [68:0] p_1_fu_878_p3;
wire   [0:0] tmp_13_fu_892_p2;
reg   [9:0] ap_return_preg;
reg   [15:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 16'd1;
#0 ap_return_preg = 10'd0;
end

calc_mul_69s_69s_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 69 ),
    .din1_WIDTH( 69 ),
    .dout_WIDTH( 138 ))
calc_mul_69s_69s_bkb_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_206_p0),
    .din1(grp_fu_206_p1),
    .ce(1'b1),
    .dout(grp_fu_206_p2)
);

calc_mul_69s_70s_cud #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 69 ),
    .din1_WIDTH( 70 ),
    .dout_WIDTH( 139 ))
calc_mul_69s_70s_cud_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(y_reg_132),
    .din1(r_V_2_fu_527_p3),
    .ce(1'b1),
    .dout(grp_fu_543_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 10'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state16) & ((tmp_4_reg_924 == 1'd0) | ((or_cond_fu_898_p2 == 1'd1) | (tmp_reg_1004 == 1'd1))))) begin
            ap_return_preg <= ap_phi_mux_agg_result_V_1_phi_fu_159_p6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((or_cond_fu_898_p2 == 1'd1) & (tmp_4_reg_924 == 1'd1) & (1'b1 == ap_CS_fsm_state16) & (tmp_reg_1004 == 1'd0))) begin
        agg_result_V_1_reg_156 <= 10'd1000;
    end else if (((tmp_4_fu_190_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        agg_result_V_1_reg_156 <= ap_phi_mux_t_V_phi_fu_124_p4;
    end else if (((tmp_fu_472_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
        agg_result_V_1_reg_156 <= t_V_reg_120;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_4_reg_924 == 1'd1) & (1'b1 == ap_CS_fsm_state16) & (or_cond_fu_898_p2 == 1'd0) & (tmp_reg_1004 == 1'd0))) begin
        t_V_reg_120 <= iter_V_reg_928;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        t_V_reg_120 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_4_reg_924 == 1'd1) & (1'b1 == ap_CS_fsm_state16) & (or_cond_fu_898_p2 == 1'd0) & (tmp_reg_1004 == 1'd0))) begin
        x_reg_144 <= x_V_reg_1042;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        x_reg_144 <= 69'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_4_reg_924 == 1'd1) & (1'b1 == ap_CS_fsm_state16) & (or_cond_fu_898_p2 == 1'd0) & (tmp_reg_1004 == 1'd0))) begin
        y_reg_132 <= y_V_fu_884_p3;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        y_reg_132 <= 69'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        Range1_all_ones_1_reg_1087 <= Range1_all_ones_1_fu_684_p2;
        Range1_all_zeros_1_reg_1094 <= Range1_all_zeros_1_fu_690_p2;
        Range2_all_ones_1_reg_1082 <= Range2_all_ones_1_fu_668_p2;
        p_Result_7_reg_1071 <= ret_V_6_fu_641_p2[32'd138];
        r_2_reg_1077 <= r_2_fu_653_p2;
        ret_V_6_reg_1062 <= ret_V_6_fu_641_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        Range1_all_ones_reg_964 <= Range1_all_ones_fu_250_p2;
        Range1_all_zeros_reg_971 <= Range1_all_zeros_fu_256_p2;
        Range2_all_ones_reg_959 <= Range2_all_ones_fu_234_p2;
        p_Result_s_reg_948 <= grp_fu_206_p2[32'd137];
        r_V_4_reg_939 <= grp_fu_206_p2;
        tmp_10_reg_954 <= tmp_10_fu_220_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        brmerge1_reg_1125 <= brmerge1_fu_857_p2;
        brmerge844_demorgan_reg_1115 <= brmerge844_demorgan_fu_834_p2;
        phitmp_demorgan_reg_1105 <= phitmp_demorgan_fu_806_p2;
        tmp_11_reg_1110 <= tmp_11_fu_823_p2;
        underflow_2_reg_1120 <= underflow_2_fu_852_p2;
        ytemp_V_1_reg_1099 <= ytemp_V_1_fu_741_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        brmerge831_demorgan_reg_993 <= brmerge831_demorgan_fu_372_p2;
        carry_1_reg_982 <= carry_1_fu_333_p2;
        p_Result_3_reg_988 <= x2_V_1_fu_313_p2[32'd68];
        x2_V_1_reg_976 <= x2_V_1_fu_313_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        iter_V_reg_928 <= iter_V_fu_196_p2;
        tmp_4_reg_924 <= tmp_4_fu_190_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (tmp_fu_472_p2 == 1'd0))) begin
        p_Result_4_reg_1026 <= {{ret_V_5_fu_491_p2[70:69]}};
        p_Result_5_reg_1008 <= ret_V_5_fu_491_p2[32'd70];
        p_Result_6_reg_1020 <= xtemp_V_fu_504_p2[32'd68];
        xtemp_V_reg_1014 <= xtemp_V_fu_504_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        p_Val2_3_reg_999 <= p_Val2_3_fu_456_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        r_V_5_reg_1052 <= grp_fu_543_p2;
        tmp_26_reg_1057 <= tmp_26_fu_637_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        rhs_V_1_reg_914 <= rhs_V_1_fu_174_p1;
        rhs_V_3_cast_reg_919[138 : 64] <= rhs_V_3_cast_fu_186_p1[138 : 64];
        rhs_V_reg_908 <= rhs_V_fu_170_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        tmp_12_reg_1047 <= tmp_12_fu_631_p2;
        x_V_reg_1042 <= x_V_fu_623_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        tmp_reg_1004 <= tmp_fu_472_p2;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state16) & ((tmp_4_reg_924 == 1'd0) | ((or_cond_fu_898_p2 == 1'd1) | (tmp_reg_1004 == 1'd1)))))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((or_cond_fu_898_p2 == 1'd1) & (tmp_4_reg_924 == 1'd1) & (1'b1 == ap_CS_fsm_state16) & (tmp_reg_1004 == 1'd0))) begin
        ap_phi_mux_agg_result_V_1_phi_fu_159_p6 = 10'd1000;
    end else begin
        ap_phi_mux_agg_result_V_1_phi_fu_159_p6 = agg_result_V_1_reg_156;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) & ((tmp_4_reg_924 == 1'd0) | ((or_cond_fu_898_p2 == 1'd1) | (tmp_reg_1004 == 1'd1))))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) & ((tmp_4_reg_924 == 1'd0) | ((or_cond_fu_898_p2 == 1'd1) | (tmp_reg_1004 == 1'd1))))) begin
        ap_return = ap_phi_mux_agg_result_V_1_phi_fu_159_p6;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((tmp_4_fu_190_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((tmp_fu_472_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((1'b1 == ap_CS_fsm_state16) & ((tmp_4_reg_924 == 1'd0) | ((or_cond_fu_898_p2 == 1'd1) | (tmp_reg_1004 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Range1_all_ones_1_fu_684_p2 = ((tmp_6_fu_674_p4 == 6'd63) ? 1'b1 : 1'b0);

assign Range1_all_ones_fu_250_p2 = ((p_Result_1_fu_240_p4 == 5'd31) ? 1'b1 : 1'b0);

assign Range1_all_zeros_1_fu_690_p2 = ((tmp_6_fu_674_p4 == 6'd0) ? 1'b1 : 1'b0);

assign Range1_all_zeros_fu_256_p2 = ((p_Result_1_fu_240_p4 == 5'd0) ? 1'b1 : 1'b0);

assign Range2_all_ones_1_fu_668_p2 = ((tmp_s_fu_658_p4 == 5'd31) ? 1'b1 : 1'b0);

assign Range2_all_ones_fu_234_p2 = ((p_Result_s_14_fu_224_p4 == 4'd15) ? 1'b1 : 1'b0);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_phi_mux_t_V_phi_fu_124_p4 = t_V_reg_120;

assign brmerge1_fu_857_p2 = (underflow_2_fu_852_p2 | overflow_2_fu_828_p2);

assign brmerge2_fu_425_p2 = (underflow_fu_420_p2 | overflow_fu_403_p2);

assign brmerge4_fu_554_p2 = (p_not2_fu_549_p2 | p_Result_6_reg_1020);

assign brmerge5_fu_580_p2 = (p_not3_fu_575_p2 | newsignbit_i_i_i_i_fu_570_p2);

assign brmerge6_fu_591_p2 = (underflow_1_fu_586_p2 | overflow_1_fu_564_p2);

assign brmerge7_fu_603_p2 = (p_849_not_fu_597_p2 | overflow_1_fu_564_p2);

assign brmerge831_demorgan_fu_372_p2 = (p_Result_3_fu_339_p3 & deleted_ones_fu_365_p3);

assign brmerge844_demorgan_fu_834_p2 = (p_Result_9_fu_767_p3 & deleted_ones_1_fu_799_p3);

assign brmerge8_fu_817_p2 = (p_not4_fu_811_p2 | p_Result_9_fu_767_p3);

assign brmerge_fu_393_p2 = (p_not_fu_387_p2 | p_Result_3_reg_988);

assign carry_1_fu_333_p2 = (rev_fu_327_p2 & p_Result_2_fu_283_p3);

assign carry_3_fu_761_p2 = (rev2_fu_755_p2 & p_Result_8_fu_712_p3);

assign deleted_ones_1_fu_799_p3 = ((carry_3_fu_761_p2[0:0] === 1'b1) ? p_8_fu_794_p2 : Range1_all_ones_1_reg_1087);

assign deleted_ones_fu_365_p3 = ((carry_1_fu_333_p2[0:0] === 1'b1) ? p_s_fu_360_p2 : Range1_all_ones_reg_964);

assign deleted_zeros_1_fu_775_p3 = ((carry_3_fu_761_p2[0:0] === 1'b1) ? Range1_all_ones_1_reg_1087 : Range1_all_zeros_1_reg_1094);

assign deleted_zeros_fu_378_p3 = ((carry_1_reg_982[0:0] === 1'b1) ? Range1_all_ones_reg_964 : Range1_all_zeros_reg_971);

assign grp_fu_206_p0 = r_V_fu_202_p1;

assign grp_fu_206_p1 = r_V_fu_202_p1;

assign iter_V_fu_196_p2 = (t_V_reg_120 + 10'd1);

assign lhs_V_1_fu_483_p1 = ret_V_4_fu_478_p2;

assign lhs_V_fu_464_p1 = $signed(p_Val2_3_reg_999);

assign newsignbit_i_i_i_i_fu_570_p2 = (p_Result_6_reg_1020 ^ 1'd1);

assign or_cond_fu_898_p2 = (tmp_13_fu_892_p2 & tmp_12_reg_1047);

assign overflow_1_fu_564_p2 = (tmp_9_fu_559_p2 & brmerge4_fu_554_p2);

assign overflow_2_fu_828_p2 = (tmp_11_fu_823_p2 & brmerge8_fu_817_p2);

assign overflow_fu_403_p2 = (tmp_2_fu_398_p2 & brmerge_fu_393_p2);

assign p_1_fu_878_p3 = ((underflow_2_reg_1120[0:0] === 1'b1) ? 69'd295147905179352825856 : ytemp_V_1_reg_1099);

assign p_4_fu_449_p3 = ((underflow_fu_420_p2[0:0] === 1'b1) ? 69'd295147905179352825856 : x2_V_1_reg_976);

assign p_7_fu_616_p3 = ((underflow_1_fu_586_p2[0:0] === 1'b1) ? 69'd295147905179352825856 : xtemp_V_reg_1014);

assign p_849_not_fu_597_p2 = (underflow_1_fu_586_p2 ^ 1'd1);

assign p_855_not_fu_436_p2 = (tmp2_fu_431_p2 | phitmp829_demorgan_fu_383_p2);

assign p_856_not_fu_867_p2 = (tmp4_fu_863_p2 | phitmp_demorgan_reg_1105);

assign p_8_fu_794_p2 = (rev3_fu_788_p2 & Range2_all_ones_1_reg_1082);

assign p_Result_1_fu_240_p4 = {{grp_fu_206_p2[137:133]}};

assign p_Result_2_fu_283_p3 = r_V_4_reg_939[32'd132];

assign p_Result_3_fu_339_p3 = x2_V_1_fu_313_p2[32'd68];

assign p_Result_8_fu_712_p3 = ret_V_6_reg_1062[32'd132];

assign p_Result_9_fu_767_p3 = ytemp_V_1_fu_741_p2[32'd68];

assign p_Result_s_14_fu_224_p4 = {{grp_fu_206_p2[137:134]}};

assign p_Val2_3_fu_456_p3 = ((p_855_not_fu_436_p2[0:0] === 1'b1) ? p_mux_fu_442_p3 : p_4_fu_449_p3);

assign p_mux1_fu_609_p3 = ((brmerge6_fu_591_p2[0:0] === 1'b1) ? 69'd295147905179352825855 : xtemp_V_reg_1014);

assign p_mux2_fu_872_p3 = ((brmerge1_reg_1125[0:0] === 1'b1) ? 69'd295147905179352825855 : ytemp_V_1_reg_1099);

assign p_mux_fu_442_p3 = ((brmerge2_fu_425_p2[0:0] === 1'b1) ? 69'd295147905179352825855 : x2_V_1_reg_976);

assign p_not2_fu_549_p2 = ((p_Result_4_reg_1026 != 2'd0) ? 1'b1 : 1'b0);

assign p_not3_fu_575_p2 = ((p_Result_4_reg_1026 != 2'd3) ? 1'b1 : 1'b0);

assign p_not4_fu_811_p2 = (deleted_zeros_1_fu_775_p3 ^ 1'd1);

assign p_not_fu_387_p2 = (deleted_zeros_fu_378_p3 ^ 1'd1);

assign p_s_fu_360_p2 = (rev1_fu_354_p2 & Range2_all_ones_reg_959);

assign phitmp829_demorgan_fu_383_p2 = (carry_1_reg_982 & Range1_all_ones_reg_964);

assign phitmp_demorgan_fu_806_p2 = (carry_3_fu_761_p2 & Range1_all_ones_1_reg_1087);

assign r_1_fu_278_p2 = ((tmp_10_reg_954 != 63'd0) ? 1'b1 : 1'b0);

assign r_2_fu_653_p2 = ((tmp_26_reg_1057 != 63'd0) ? 1'b1 : 1'b0);

assign r_V_2_fu_527_p3 = {{x_reg_144}, {1'd0}};

assign r_V_fu_202_p1 = x_reg_144;

assign r_assign_1_fu_290_p2 = (tmp_8_fu_271_p3 | r_1_fu_278_p2);

assign r_fu_719_p2 = (tmp_25_fu_705_p3 | r_2_reg_1077);

assign ret_V_4_fu_478_p2 = ($signed(lhs_V_fu_464_p1) - $signed(rhs_V_reg_908));

assign ret_V_5_fu_491_p2 = ($signed(rhs_V_1_reg_914) + $signed(lhs_V_1_fu_483_p1));

assign ret_V_6_fu_641_p2 = ($signed(r_V_5_reg_1052) + $signed(rhs_V_3_cast_reg_919));

assign ret_V_fu_467_p2 = ($signed(rhs_V_reg_908) + $signed(lhs_V_fu_464_p1));

assign rev1_fu_354_p2 = (tmp_20_fu_347_p3 ^ 1'd1);

assign rev2_fu_755_p2 = (tmp_29_fu_747_p3 ^ 1'd1);

assign rev3_fu_788_p2 = (tmp_31_fu_781_p3 ^ 1'd1);

assign rev_fu_327_p2 = (tmp_18_fu_319_p3 ^ 1'd1);

assign rhs_V_1_fu_174_p0 = x_in_V;

assign rhs_V_1_fu_174_p1 = rhs_V_1_fu_174_p0;

assign rhs_V_2_fu_178_p3 = {{y_in_V}, {64'd0}};

assign rhs_V_3_cast_fu_186_p1 = $signed(rhs_V_2_fu_178_p3);

assign rhs_V_fu_170_p1 = $signed(y2_V);

assign tmp1_demorgan_fu_409_p2 = (phitmp829_demorgan_fu_383_p2 | brmerge831_demorgan_reg_993);

assign tmp1_fu_414_p2 = (tmp1_demorgan_fu_409_p2 ^ 1'd1);

assign tmp2_fu_431_p2 = (tmp_2_fu_398_p2 | brmerge831_demorgan_reg_993);

assign tmp3_demorgan_fu_840_p2 = (phitmp_demorgan_fu_806_p2 | brmerge844_demorgan_fu_834_p2);

assign tmp3_fu_846_p2 = (tmp3_demorgan_fu_840_p2 ^ 1'd1);

assign tmp4_fu_863_p2 = (tmp_11_reg_1110 | brmerge844_demorgan_reg_1115);

assign tmp_10_fu_220_p1 = grp_fu_206_p2[62:0];

assign tmp_11_fu_823_p2 = (p_Result_7_reg_1071 ^ 1'd1);

assign tmp_12_fu_631_p2 = ((x_reg_144 == x_V_fu_623_p3) ? 1'b1 : 1'b0);

assign tmp_13_fu_892_p2 = ((y_reg_132 == y_V_fu_884_p3) ? 1'b1 : 1'b0);

assign tmp_17_fu_296_p3 = r_V_4_reg_939[32'd63];

assign tmp_18_fu_319_p3 = x2_V_1_fu_313_p2[32'd68];

assign tmp_1_fu_731_p2 = (tmp_28_fu_724_p3 & r_fu_719_p2);

assign tmp_20_fu_347_p3 = r_V_4_reg_939[32'd133];

assign tmp_21_fu_487_p1 = ret_V_4_fu_478_p2[68:0];

assign tmp_25_fu_705_p3 = ret_V_6_reg_1062[32'd64];

assign tmp_26_fu_637_p1 = grp_fu_543_p2[62:0];

assign tmp_28_fu_724_p3 = ret_V_6_reg_1062[32'd63];

assign tmp_29_fu_747_p3 = ytemp_V_1_fu_741_p2[32'd68];

assign tmp_2_fu_398_p2 = (p_Result_s_reg_948 ^ 1'd1);

assign tmp_31_fu_781_p3 = ret_V_6_reg_1062[32'd133];

assign tmp_3_fu_303_p2 = (tmp_17_fu_296_p3 & r_assign_1_fu_290_p2);

assign tmp_4_fu_190_p2 = ((t_V_reg_120 < 10'd1000) ? 1'b1 : 1'b0);

assign tmp_5_fu_309_p1 = tmp_3_fu_303_p2;

assign tmp_6_fu_674_p4 = {{ret_V_6_fu_641_p2[138:133]}};

assign tmp_7_fu_737_p1 = tmp_1_fu_731_p2;

assign tmp_8_fu_271_p3 = r_V_4_reg_939[32'd64];

assign tmp_9_fu_559_p2 = (p_Result_5_reg_1008 ^ 1'd1);

assign tmp_fu_472_p2 = (($signed(ret_V_fu_467_p2) > $signed(70'd73786976294838206464)) ? 1'b1 : 1'b0);

assign tmp_s_fu_658_p4 = {{ret_V_6_fu_641_p2[138:134]}};

assign underflow_1_fu_586_p2 = (p_Result_5_reg_1008 & brmerge5_fu_580_p2);

assign underflow_2_fu_852_p2 = (tmp3_fu_846_p2 & p_Result_7_reg_1071);

assign underflow_fu_420_p2 = (tmp1_fu_414_p2 & p_Result_s_reg_948);

assign x2_V_1_fu_313_p2 = (tmp_5_fu_309_p1 + x2_V_fu_262_p4);

assign x2_V_fu_262_p4 = {{r_V_4_reg_939[132:64]}};

assign x_V_fu_623_p3 = ((brmerge7_fu_603_p2[0:0] === 1'b1) ? p_mux1_fu_609_p3 : p_7_fu_616_p3);

assign xtemp_V_fu_504_p0 = x_in_V;

assign xtemp_V_fu_504_p2 = ($signed(xtemp_V_fu_504_p0) + $signed(tmp_21_fu_487_p1));

assign y_V_fu_884_p3 = ((p_856_not_fu_867_p2[0:0] === 1'b1) ? p_mux2_fu_872_p3 : p_1_fu_878_p3);

assign ytemp_V_1_fu_741_p2 = (tmp_7_fu_737_p1 + ytemp_V_fu_696_p4);

assign ytemp_V_fu_696_p4 = {{ret_V_6_reg_1062[132:64]}};

always @ (posedge ap_clk) begin
    rhs_V_3_cast_reg_919[63:0] <= 64'b0000000000000000000000000000000000000000000000000000000000000000;
end

endmodule //mandel_calc
